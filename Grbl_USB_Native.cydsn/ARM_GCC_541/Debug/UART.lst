ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	UART_initVar
  20              		.bss
  21              		.type	UART_initVar, %object
  22              		.size	UART_initVar, 1
  23              	UART_initVar:
  24 0000 00       		.space	1
  25              		.comm	UART_txBuffer,255,4
  26              		.global	UART_txBufferRead
  27              		.type	UART_txBufferRead, %object
  28              		.size	UART_txBufferRead, 1
  29              	UART_txBufferRead:
  30 0001 00       		.space	1
  31              		.global	UART_txBufferWrite
  32              		.type	UART_txBufferWrite, %object
  33              		.size	UART_txBufferWrite, 1
  34              	UART_txBufferWrite:
  35 0002 00       		.space	1
  36              		.section	.text.UART_Start,"ax",%progbits
  37              		.align	2
  38              		.global	UART_Start
  39              		.thumb
  40              		.thumb_func
  41              		.type	UART_Start, %function
  42              	UART_Start:
  43              	.LFB0:
  44              		.file 1 "Generated_Source\\PSoC5\\UART.c"
   1:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART.c **** * File Name: UART.c
   3:Generated_Source\PSoC5/UART.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART.c **** *
   5:Generated_Source\PSoC5/UART.c **** * Description:
   6:Generated_Source\PSoC5/UART.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/UART.c **** *
   8:Generated_Source\PSoC5/UART.c **** * Note:
   9:Generated_Source\PSoC5/UART.c **** *
  10:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  11:Generated_Source\PSoC5/UART.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 2


  14:Generated_Source\PSoC5/UART.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/UART.c **** 
  17:Generated_Source\PSoC5/UART.c **** #include "UART.h"
  18:Generated_Source\PSoC5/UART.c **** #if (UART_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/UART.c ****     #include "UART_IntClock.h"
  20:Generated_Source\PSoC5/UART.c **** #endif /* End UART_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/UART.c **** 
  22:Generated_Source\PSoC5/UART.c **** 
  23:Generated_Source\PSoC5/UART.c **** /***************************************
  24:Generated_Source\PSoC5/UART.c **** * Global data allocation
  25:Generated_Source\PSoC5/UART.c **** ***************************************/
  26:Generated_Source\PSoC5/UART.c **** 
  27:Generated_Source\PSoC5/UART.c **** uint8 UART_initVar = 0u;
  28:Generated_Source\PSoC5/UART.c **** 
  29:Generated_Source\PSoC5/UART.c **** #if (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED)
  30:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBuffer[UART_TX_BUFFER_SIZE];
  31:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBufferRead = 0u;
  32:Generated_Source\PSoC5/UART.c ****     uint8 UART_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/UART.c **** #endif /* (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED) */
  34:Generated_Source\PSoC5/UART.c **** 
  35:Generated_Source\PSoC5/UART.c **** #if (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED))
  36:Generated_Source\PSoC5/UART.c ****     uint8 UART_errorStatus = 0u;
  37:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBuffer[UART_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/UART.c ****     #if (UART_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressMode = UART_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/UART.c **** #endif /* (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED)) */
  47:Generated_Source\PSoC5/UART.c **** 
  48:Generated_Source\PSoC5/UART.c **** 
  49:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Start
  51:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  52:Generated_Source\PSoC5/UART.c **** *
  53:Generated_Source\PSoC5/UART.c **** * Summary:
  54:Generated_Source\PSoC5/UART.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/UART.c **** *  UART_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/UART.c **** *  UART_Init() function, and then calls the
  57:Generated_Source\PSoC5/UART.c **** *  UART_Enable() function.
  58:Generated_Source\PSoC5/UART.c **** *
  59:Generated_Source\PSoC5/UART.c **** * Parameters:
  60:Generated_Source\PSoC5/UART.c **** *  None.
  61:Generated_Source\PSoC5/UART.c **** *
  62:Generated_Source\PSoC5/UART.c **** * Return:
  63:Generated_Source\PSoC5/UART.c **** *  None.
  64:Generated_Source\PSoC5/UART.c **** *
  65:Generated_Source\PSoC5/UART.c **** * Global variables:
  66:Generated_Source\PSoC5/UART.c **** *  The UART_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/UART.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/UART.c **** *  and set to one (1u) the first time UART_Start() is called. This
  69:Generated_Source\PSoC5/UART.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/UART.c **** *  subsequent calls to the UART_Start() routine.
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 3


  71:Generated_Source\PSoC5/UART.c **** *
  72:Generated_Source\PSoC5/UART.c **** * Reentrant:
  73:Generated_Source\PSoC5/UART.c **** *  No.
  74:Generated_Source\PSoC5/UART.c **** *
  75:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/UART.c **** void UART_Start(void) 
  77:Generated_Source\PSoC5/UART.c **** {
  45              		.loc 1 77 0
  46              		.cfi_startproc
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 1, uses_anonymous_args = 0
  49 0000 80B5     		push	{r7, lr}
  50              		.cfi_def_cfa_offset 8
  51              		.cfi_offset 7, -8
  52              		.cfi_offset 14, -4
  53 0002 00AF     		add	r7, sp, #0
  54              		.cfi_def_cfa_register 7
  78:Generated_Source\PSoC5/UART.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/UART.c ****     if(UART_initVar == 0u)
  55              		.loc 1 79 0
  56 0004 064B     		ldr	r3, .L3
  57 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  58 0008 002B     		cmp	r3, #0
  59 000a 04D1     		bne	.L2
  80:Generated_Source\PSoC5/UART.c ****     {
  81:Generated_Source\PSoC5/UART.c ****         UART_Init();
  60              		.loc 1 81 0
  61 000c FFF7FEFF 		bl	UART_Init
  82:Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
  62              		.loc 1 82 0
  63 0010 034B     		ldr	r3, .L3
  64 0012 0122     		movs	r2, #1
  65 0014 1A70     		strb	r2, [r3]
  66              	.L2:
  83:Generated_Source\PSoC5/UART.c ****     }
  84:Generated_Source\PSoC5/UART.c **** 
  85:Generated_Source\PSoC5/UART.c ****     UART_Enable();
  67              		.loc 1 85 0
  68 0016 FFF7FEFF 		bl	UART_Enable
  86:Generated_Source\PSoC5/UART.c **** }
  69              		.loc 1 86 0
  70 001a 00BF     		nop
  71 001c 80BD     		pop	{r7, pc}
  72              	.L4:
  73 001e 00BF     		.align	2
  74              	.L3:
  75 0020 00000000 		.word	UART_initVar
  76              		.cfi_endproc
  77              	.LFE0:
  78              		.size	UART_Start, .-UART_Start
  79              		.section	.text.UART_Init,"ax",%progbits
  80              		.align	2
  81              		.global	UART_Init
  82              		.thumb
  83              		.thumb_func
  84              		.type	UART_Init, %function
  85              	UART_Init:
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 4


  86              	.LFB1:
  87:Generated_Source\PSoC5/UART.c **** 
  88:Generated_Source\PSoC5/UART.c **** 
  89:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Init
  91:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  92:Generated_Source\PSoC5/UART.c **** *
  93:Generated_Source\PSoC5/UART.c **** * Summary:
  94:Generated_Source\PSoC5/UART.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/UART.c **** *  dialog settings. It is not necessary to call UART_Init() because
  96:Generated_Source\PSoC5/UART.c **** *  the UART_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/UART.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/UART.c **** *
  99:Generated_Source\PSoC5/UART.c **** * Parameters:
 100:Generated_Source\PSoC5/UART.c **** *  None.
 101:Generated_Source\PSoC5/UART.c **** *
 102:Generated_Source\PSoC5/UART.c **** * Return:
 103:Generated_Source\PSoC5/UART.c **** *  None.
 104:Generated_Source\PSoC5/UART.c **** *
 105:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/UART.c **** void UART_Init(void) 
 107:Generated_Source\PSoC5/UART.c **** {
  87              		.loc 1 107 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 1, uses_anonymous_args = 0
  91 0000 80B5     		push	{r7, lr}
  92              		.cfi_def_cfa_offset 8
  93              		.cfi_offset 7, -8
  94              		.cfi_offset 14, -4
  95 0002 00AF     		add	r7, sp, #0
  96              		.cfi_def_cfa_register 7
 108:Generated_Source\PSoC5/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 109:Generated_Source\PSoC5/UART.c **** 
 110:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/UART.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_RX_VECT_NUM, &UART_RXISR);
 113:Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_RX_VECT_NUM, UART_RX_PRIOR_NUM);
 114:Generated_Source\PSoC5/UART.c ****             UART_errorStatus = 0u;
 115:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/UART.c **** 
 117:Generated_Source\PSoC5/UART.c ****         #if (UART_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddressMode(UART_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress1(UART_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress2(UART_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/UART.c **** 
 123:Generated_Source\PSoC5/UART.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_PERIOD_REG = UART_RXBITCTR_INIT;
  97              		.loc 1 124 0
  98 0004 0C4B     		ldr	r3, .L6
  99 0006 7222     		movs	r2, #114
 100 0008 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC5/UART.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = UART_INIT_RX_INTERRUPTS_MASK;
 101              		.loc 1 126 0
 102 000a 0C4B     		ldr	r3, .L6+4
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 5


 103 000c 2022     		movs	r2, #32
 104 000e 1A70     		strb	r2, [r3]
 127:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_RX_ENABLED || UART_HD_ENABLED*/
 128:Generated_Source\PSoC5/UART.c **** 
 129:Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 130:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/UART.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_TX_VECT_NUM, &UART_TXISR);
 105              		.loc 1 132 0
 106 0010 0B49     		ldr	r1, .L6+8
 107 0012 0020     		movs	r0, #0
 108 0014 FFF7FEFF 		bl	CyIntSetVector
 133:Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_TX_VECT_NUM, UART_TX_PRIOR_NUM);
 109              		.loc 1 133 0
 110 0018 0721     		movs	r1, #7
 111 001a 0020     		movs	r0, #0
 112 001c FFF7FEFF 		bl	CyIntSetPriority
 134:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/UART.c **** 
 136:Generated_Source\PSoC5/UART.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/UART.c ****         #if (UART_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKGEN_CTR_REG = UART_BIT_CENTER;
 113              		.loc 1 138 0
 114 0020 084B     		ldr	r3, .L6+12
 115 0022 0622     		movs	r2, #6
 116 0024 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
 117              		.loc 1 139 0
 118 0026 084B     		ldr	r3, .L6+16
 119 0028 4722     		movs	r2, #71
 120 002a 1A70     		strb	r2, [r3]
 140:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/UART.c ****         #else
 142:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_PERIOD_REG = ((UART_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/UART.c **** 
 146:Generated_Source\PSoC5/UART.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_TX_STS_FIFO_EMPTY;
 121              		.loc 1 148 0
 122 002c 074B     		ldr	r3, .L6+20
 123 002e 0222     		movs	r2, #2
 124 0030 1A70     		strb	r2, [r3]
 149:Generated_Source\PSoC5/UART.c ****         #else
 150:Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_INIT_TX_INTERRUPTS_MASK;
 151:Generated_Source\PSoC5/UART.c ****         #endif /*End UART_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/UART.c **** 
 153:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_TX_ENABLED */
 154:Generated_Source\PSoC5/UART.c **** 
 155:Generated_Source\PSoC5/UART.c ****     #if(UART_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/UART.c ****         UART_WriteControlRegister( \
 157:Generated_Source\PSoC5/UART.c ****             (UART_ReadControlRegister() & (uint8)~UART_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/UART.c ****             (uint8)(UART_PARITY_TYPE << UART_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/UART.c **** }
 125              		.loc 1 160 0
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 6


 126 0032 00BF     		nop
 127 0034 80BD     		pop	{r7, pc}
 128              	.L7:
 129 0036 00BF     		.align	2
 130              	.L6:
 131 0038 87650040 		.word	1073767815
 132 003c 89640040 		.word	1073767561
 133 0040 00000000 		.word	UART_TXISR
 134 0044 28640040 		.word	1073767464
 135 0048 38640040 		.word	1073767480
 136 004c 84640040 		.word	1073767556
 137              		.cfi_endproc
 138              	.LFE1:
 139              		.size	UART_Init, .-UART_Init
 140              		.section	.text.UART_Enable,"ax",%progbits
 141              		.align	2
 142              		.global	UART_Enable
 143              		.thumb
 144              		.thumb_func
 145              		.type	UART_Enable, %function
 146              	UART_Enable:
 147              	.LFB2:
 161:Generated_Source\PSoC5/UART.c **** 
 162:Generated_Source\PSoC5/UART.c **** 
 163:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Enable
 165:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 166:Generated_Source\PSoC5/UART.c **** *
 167:Generated_Source\PSoC5/UART.c **** * Summary:
 168:Generated_Source\PSoC5/UART.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/UART.c **** *  to call UART_Enable() because the UART_Start() API
 170:Generated_Source\PSoC5/UART.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/UART.c **** *  operation.
 172:Generated_Source\PSoC5/UART.c **** 
 173:Generated_Source\PSoC5/UART.c **** * Parameters:
 174:Generated_Source\PSoC5/UART.c **** *  None.
 175:Generated_Source\PSoC5/UART.c **** *
 176:Generated_Source\PSoC5/UART.c **** * Return:
 177:Generated_Source\PSoC5/UART.c **** *  None.
 178:Generated_Source\PSoC5/UART.c **** *
 179:Generated_Source\PSoC5/UART.c **** * Global Variables:
 180:Generated_Source\PSoC5/UART.c **** *  UART_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/UART.c **** *
 182:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/UART.c **** void UART_Enable(void) 
 184:Generated_Source\PSoC5/UART.c **** {
 148              		.loc 1 184 0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 8
 151              		@ frame_needed = 1, uses_anonymous_args = 0
 152 0000 80B5     		push	{r7, lr}
 153              		.cfi_def_cfa_offset 8
 154              		.cfi_offset 7, -8
 155              		.cfi_offset 14, -4
 156 0002 82B0     		sub	sp, sp, #8
 157              		.cfi_def_cfa_offset 16
 158 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 7


 159              		.cfi_def_cfa_register 7
 185:Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 160              		.loc 1 186 0
 161 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 162 000a 0346     		mov	r3, r0
 163 000c FB71     		strb	r3, [r7, #7]
 187:Generated_Source\PSoC5/UART.c **** 
 188:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 189:Generated_Source\PSoC5/UART.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 164              		.loc 1 190 0
 165 000e 144A     		ldr	r2, .L9
 166 0010 134B     		ldr	r3, .L9
 167 0012 1B78     		ldrb	r3, [r3]
 168 0014 DBB2     		uxtb	r3, r3
 169 0016 43F02003 		orr	r3, r3, #32
 170 001a DBB2     		uxtb	r3, r3
 171 001c 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC5/UART.c **** 
 192:Generated_Source\PSoC5/UART.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  |= UART_INT_ENABLE;
 172              		.loc 1 193 0
 173 001e 114A     		ldr	r2, .L9+4
 174 0020 104B     		ldr	r3, .L9+4
 175 0022 1B78     		ldrb	r3, [r3]
 176 0024 DBB2     		uxtb	r3, r3
 177 0026 43F01003 		orr	r3, r3, #16
 178 002a DBB2     		uxtb	r3, r3
 179 002c 1370     		strb	r3, [r2]
 194:Generated_Source\PSoC5/UART.c **** 
 195:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/UART.c ****             UART_EnableRxInt();
 197:Generated_Source\PSoC5/UART.c **** 
 198:Generated_Source\PSoC5/UART.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/UART.c ****                 UART_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/UART.c ****             #endif /* (UART_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 203:Generated_Source\PSoC5/UART.c **** 
 204:Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 205:Generated_Source\PSoC5/UART.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 208:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/UART.c **** 
 210:Generated_Source\PSoC5/UART.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG |= UART_INT_ENABLE;
 180              		.loc 1 211 0
 181 002e 0E4A     		ldr	r2, .L9+8
 182 0030 0D4B     		ldr	r3, .L9+8
 183 0032 1B78     		ldrb	r3, [r3]
 184 0034 DBB2     		uxtb	r3, r3
 185 0036 43F01003 		orr	r3, r3, #16
 186 003a DBB2     		uxtb	r3, r3
 187 003c 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 8


 213:Generated_Source\PSoC5/UART.c ****             UART_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 188              		.loc 1 213 0
 189 003e 0B4B     		ldr	r3, .L9+12
 190 0040 0122     		movs	r2, #1
 191 0042 1A60     		str	r2, [r3]
 214:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 192              		.loc 1 214 0
 193 0044 0A4B     		ldr	r3, .L9+16
 194 0046 0122     		movs	r2, #1
 195 0048 1A60     		str	r2, [r3]
 215:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/UART.c ****      #endif /* (UART_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/UART.c **** 
 218:Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/UART.c ****         UART_IntClock_Start();  /* Enable the clock */
 196              		.loc 1 219 0
 197 004a FFF7FEFF 		bl	UART_IntClock_Start
 220:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/UART.c **** 
 222:Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 198              		.loc 1 222 0
 199 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 200 0050 1846     		mov	r0, r3
 201 0052 FFF7FEFF 		bl	CyExitCriticalSection
 223:Generated_Source\PSoC5/UART.c **** }
 202              		.loc 1 223 0
 203 0056 00BF     		nop
 204 0058 0837     		adds	r7, r7, #8
 205              		.cfi_def_cfa_offset 8
 206 005a BD46     		mov	sp, r7
 207              		.cfi_def_cfa_register 13
 208              		@ sp needed
 209 005c 80BD     		pop	{r7, pc}
 210              	.L10:
 211 005e 00BF     		.align	2
 212              	.L9:
 213 0060 97650040 		.word	1073767831
 214 0064 99640040 		.word	1073767577
 215 0068 94640040 		.word	1073767572
 216 006c 80E200E0 		.word	-536812928
 217 0070 00E100E0 		.word	-536813312
 218              		.cfi_endproc
 219              	.LFE2:
 220              		.size	UART_Enable, .-UART_Enable
 221              		.section	.text.UART_Stop,"ax",%progbits
 222              		.align	2
 223              		.global	UART_Stop
 224              		.thumb
 225              		.thumb_func
 226              		.type	UART_Stop, %function
 227              	UART_Stop:
 228              	.LFB3:
 224:Generated_Source\PSoC5/UART.c **** 
 225:Generated_Source\PSoC5/UART.c **** 
 226:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Stop
 228:Generated_Source\PSoC5/UART.c **** ********************************************************************************
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 9


 229:Generated_Source\PSoC5/UART.c **** *
 230:Generated_Source\PSoC5/UART.c **** * Summary:
 231:Generated_Source\PSoC5/UART.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/UART.c **** *
 233:Generated_Source\PSoC5/UART.c **** * Parameters:
 234:Generated_Source\PSoC5/UART.c **** *  None.
 235:Generated_Source\PSoC5/UART.c **** *
 236:Generated_Source\PSoC5/UART.c **** * Return:
 237:Generated_Source\PSoC5/UART.c **** *  None.
 238:Generated_Source\PSoC5/UART.c **** *
 239:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/UART.c **** void UART_Stop(void) 
 241:Generated_Source\PSoC5/UART.c **** {
 229              		.loc 1 241 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 8
 232              		@ frame_needed = 1, uses_anonymous_args = 0
 233 0000 80B5     		push	{r7, lr}
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 7, -8
 236              		.cfi_offset 14, -4
 237 0002 82B0     		sub	sp, sp, #8
 238              		.cfi_def_cfa_offset 16
 239 0004 00AF     		add	r7, sp, #0
 240              		.cfi_def_cfa_register 7
 242:Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 241              		.loc 1 243 0
 242 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 243 000a 0346     		mov	r3, r0
 244 000c FB71     		strb	r3, [r7, #7]
 244:Generated_Source\PSoC5/UART.c **** 
 245:Generated_Source\PSoC5/UART.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 247:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 245              		.loc 1 247 0
 246 000e 124A     		ldr	r2, .L12
 247 0010 114B     		ldr	r3, .L12
 248 0012 1B78     		ldrb	r3, [r3]
 249 0014 DBB2     		uxtb	r3, r3
 250 0016 23F02003 		bic	r3, r3, #32
 251 001a DBB2     		uxtb	r3, r3
 252 001c 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 249:Generated_Source\PSoC5/UART.c **** 
 250:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 251:Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 253:Generated_Source\PSoC5/UART.c ****         #endif /* (!UART_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 255:Generated_Source\PSoC5/UART.c **** 
 256:Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/UART.c ****         UART_IntClock_Stop();   /* Disable the clock */
 253              		.loc 1 257 0
 254 001e FFF7FEFF 		bl	UART_IntClock_Stop
 258:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 10


 260:Generated_Source\PSoC5/UART.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 262:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  &= (uint8) ~UART_INT_ENABLE;
 255              		.loc 1 262 0
 256 0022 0E4A     		ldr	r2, .L12+4
 257 0024 0D4B     		ldr	r3, .L12+4
 258 0026 1B78     		ldrb	r3, [r3]
 259 0028 DBB2     		uxtb	r3, r3
 260 002a 23F01003 		bic	r3, r3, #16
 261 002e DBB2     		uxtb	r3, r3
 262 0030 1370     		strb	r3, [r2]
 263:Generated_Source\PSoC5/UART.c **** 
 264:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/UART.c ****             UART_DisableRxInt();
 266:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 268:Generated_Source\PSoC5/UART.c **** 
 269:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 270:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG &= (uint8) ~UART_INT_ENABLE;
 263              		.loc 1 270 0
 264 0032 0B4A     		ldr	r2, .L12+8
 265 0034 0A4B     		ldr	r3, .L12+8
 266 0036 1B78     		ldrb	r3, [r3]
 267 0038 DBB2     		uxtb	r3, r3
 268 003a 23F01003 		bic	r3, r3, #16
 269 003e DBB2     		uxtb	r3, r3
 270 0040 1370     		strb	r3, [r2]
 271:Generated_Source\PSoC5/UART.c **** 
 272:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 271              		.loc 1 273 0
 272 0042 084B     		ldr	r3, .L12+12
 273 0044 0122     		movs	r2, #1
 274 0046 1A60     		str	r2, [r3]
 274:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 276:Generated_Source\PSoC5/UART.c **** 
 277:Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 275              		.loc 1 277 0
 276 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 277 004a 1846     		mov	r0, r3
 278 004c FFF7FEFF 		bl	CyExitCriticalSection
 278:Generated_Source\PSoC5/UART.c **** }
 279              		.loc 1 278 0
 280 0050 00BF     		nop
 281 0052 0837     		adds	r7, r7, #8
 282              		.cfi_def_cfa_offset 8
 283 0054 BD46     		mov	sp, r7
 284              		.cfi_def_cfa_register 13
 285              		@ sp needed
 286 0056 80BD     		pop	{r7, pc}
 287              	.L13:
 288              		.align	2
 289              	.L12:
 290 0058 97650040 		.word	1073767831
 291 005c 99640040 		.word	1073767577
 292 0060 94640040 		.word	1073767572
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 11


 293 0064 80E100E0 		.word	-536813184
 294              		.cfi_endproc
 295              	.LFE3:
 296              		.size	UART_Stop, .-UART_Stop
 297              		.section	.text.UART_ReadControlRegister,"ax",%progbits
 298              		.align	2
 299              		.global	UART_ReadControlRegister
 300              		.thumb
 301              		.thumb_func
 302              		.type	UART_ReadControlRegister, %function
 303              	UART_ReadControlRegister:
 304              	.LFB4:
 279:Generated_Source\PSoC5/UART.c **** 
 280:Generated_Source\PSoC5/UART.c **** 
 281:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/UART.c **** * Function Name: UART_ReadControlRegister
 283:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 284:Generated_Source\PSoC5/UART.c **** *
 285:Generated_Source\PSoC5/UART.c **** * Summary:
 286:Generated_Source\PSoC5/UART.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/UART.c **** *
 288:Generated_Source\PSoC5/UART.c **** * Parameters:
 289:Generated_Source\PSoC5/UART.c **** *  None.
 290:Generated_Source\PSoC5/UART.c **** *
 291:Generated_Source\PSoC5/UART.c **** * Return:
 292:Generated_Source\PSoC5/UART.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/UART.c **** *
 294:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/UART.c **** uint8 UART_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/UART.c **** {
 305              		.loc 1 296 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 1, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 310 0000 80B4     		push	{r7}
 311              		.cfi_def_cfa_offset 4
 312              		.cfi_offset 7, -4
 313 0002 00AF     		add	r7, sp, #0
 314              		.cfi_def_cfa_register 7
 297:Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/UART.c ****         return(0u);
 315              		.loc 1 298 0
 316 0004 0023     		movs	r3, #0
 299:Generated_Source\PSoC5/UART.c ****     #else
 300:Generated_Source\PSoC5/UART.c ****         return(UART_CONTROL_REG);
 301:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/UART.c **** }
 317              		.loc 1 302 0
 318 0006 1846     		mov	r0, r3
 319 0008 BD46     		mov	sp, r7
 320              		.cfi_def_cfa_register 13
 321              		@ sp needed
 322 000a 80BC     		pop	{r7}
 323              		.cfi_restore 7
 324              		.cfi_def_cfa_offset 0
 325 000c 7047     		bx	lr
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 12


 326              		.cfi_endproc
 327              	.LFE4:
 328              		.size	UART_ReadControlRegister, .-UART_ReadControlRegister
 329 000e 00BF     		.section	.text.UART_WriteControlRegister,"ax",%progbits
 330              		.align	2
 331              		.global	UART_WriteControlRegister
 332              		.thumb
 333              		.thumb_func
 334              		.type	UART_WriteControlRegister, %function
 335              	UART_WriteControlRegister:
 336              	.LFB5:
 303:Generated_Source\PSoC5/UART.c **** 
 304:Generated_Source\PSoC5/UART.c **** 
 305:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/UART.c **** * Function Name: UART_WriteControlRegister
 307:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 308:Generated_Source\PSoC5/UART.c **** *
 309:Generated_Source\PSoC5/UART.c **** * Summary:
 310:Generated_Source\PSoC5/UART.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/UART.c **** *
 312:Generated_Source\PSoC5/UART.c **** * Parameters:
 313:Generated_Source\PSoC5/UART.c **** *  control:  control register value
 314:Generated_Source\PSoC5/UART.c **** *
 315:Generated_Source\PSoC5/UART.c **** * Return:
 316:Generated_Source\PSoC5/UART.c **** *  None.
 317:Generated_Source\PSoC5/UART.c **** *
 318:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/UART.c **** void  UART_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/UART.c **** {
 337              		.loc 1 320 0
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 8
 340              		@ frame_needed = 1, uses_anonymous_args = 0
 341              		@ link register save eliminated.
 342 0000 80B4     		push	{r7}
 343              		.cfi_def_cfa_offset 4
 344              		.cfi_offset 7, -4
 345 0002 83B0     		sub	sp, sp, #12
 346              		.cfi_def_cfa_offset 16
 347 0004 00AF     		add	r7, sp, #0
 348              		.cfi_def_cfa_register 7
 349 0006 0346     		mov	r3, r0
 350 0008 FB71     		strb	r3, [r7, #7]
 321:Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/UART.c ****         if(0u != control)
 323:Generated_Source\PSoC5/UART.c ****         {
 324:Generated_Source\PSoC5/UART.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/UART.c ****         }
 326:Generated_Source\PSoC5/UART.c ****     #else
 327:Generated_Source\PSoC5/UART.c ****        UART_CONTROL_REG = control;
 328:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/UART.c **** }
 351              		.loc 1 329 0
 352 000a 00BF     		nop
 353 000c 0C37     		adds	r7, r7, #12
 354              		.cfi_def_cfa_offset 4
 355 000e BD46     		mov	sp, r7
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 13


 356              		.cfi_def_cfa_register 13
 357              		@ sp needed
 358 0010 80BC     		pop	{r7}
 359              		.cfi_restore 7
 360              		.cfi_def_cfa_offset 0
 361 0012 7047     		bx	lr
 362              		.cfi_endproc
 363              	.LFE5:
 364              		.size	UART_WriteControlRegister, .-UART_WriteControlRegister
 365              		.section	.text.UART_SetRxInterruptMode,"ax",%progbits
 366              		.align	2
 367              		.global	UART_SetRxInterruptMode
 368              		.thumb
 369              		.thumb_func
 370              		.type	UART_SetRxInterruptMode, %function
 371              	UART_SetRxInterruptMode:
 372              	.LFB6:
 330:Generated_Source\PSoC5/UART.c **** 
 331:Generated_Source\PSoC5/UART.c **** 
 332:Generated_Source\PSoC5/UART.c **** #if(UART_RX_ENABLED || UART_HD_ENABLED)
 333:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxInterruptMode
 335:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/UART.c ****     *
 337:Generated_Source\PSoC5/UART.c ****     * Summary:
 338:Generated_Source\PSoC5/UART.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/UART.c ****     *
 340:Generated_Source\PSoC5/UART.c ****     * Parameters:
 341:Generated_Source\PSoC5/UART.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/UART.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/UART.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/UART.c ****     *
 352:Generated_Source\PSoC5/UART.c ****     * Return:
 353:Generated_Source\PSoC5/UART.c ****     *  None.
 354:Generated_Source\PSoC5/UART.c ****     *
 355:Generated_Source\PSoC5/UART.c ****     * Theory:
 356:Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/UART.c ****     *
 358:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 359:Generated_Source\PSoC5/UART.c ****     void UART_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/UART.c ****     {
 373              		.loc 1 360 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 8
 376              		@ frame_needed = 1, uses_anonymous_args = 0
 377              		@ link register save eliminated.
 378 0000 80B4     		push	{r7}
 379              		.cfi_def_cfa_offset 4
 380              		.cfi_offset 7, -4
 381 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 14


 382              		.cfi_def_cfa_offset 16
 383 0004 00AF     		add	r7, sp, #0
 384              		.cfi_def_cfa_register 7
 385 0006 0346     		mov	r3, r0
 386 0008 FB71     		strb	r3, [r7, #7]
 361:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = intSrc;
 387              		.loc 1 361 0
 388 000a 044A     		ldr	r2, .L18
 389 000c FB79     		ldrb	r3, [r7, #7]
 390 000e 1370     		strb	r3, [r2]
 362:Generated_Source\PSoC5/UART.c ****     }
 391              		.loc 1 362 0
 392 0010 00BF     		nop
 393 0012 0C37     		adds	r7, r7, #12
 394              		.cfi_def_cfa_offset 4
 395 0014 BD46     		mov	sp, r7
 396              		.cfi_def_cfa_register 13
 397              		@ sp needed
 398 0016 80BC     		pop	{r7}
 399              		.cfi_restore 7
 400              		.cfi_def_cfa_offset 0
 401 0018 7047     		bx	lr
 402              	.L19:
 403 001a 00BF     		.align	2
 404              	.L18:
 405 001c 89640040 		.word	1073767561
 406              		.cfi_endproc
 407              	.LFE6:
 408              		.size	UART_SetRxInterruptMode, .-UART_SetRxInterruptMode
 409              		.section	.text.UART_ReadRxData,"ax",%progbits
 410              		.align	2
 411              		.global	UART_ReadRxData
 412              		.thumb
 413              		.thumb_func
 414              		.type	UART_ReadRxData, %function
 415              	UART_ReadRxData:
 416              	.LFB7:
 363:Generated_Source\PSoC5/UART.c **** 
 364:Generated_Source\PSoC5/UART.c **** 
 365:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxData
 367:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/UART.c ****     *
 369:Generated_Source\PSoC5/UART.c ****     * Summary:
 370:Generated_Source\PSoC5/UART.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/UART.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/UART.c ****     *
 373:Generated_Source\PSoC5/UART.c ****     * Parameters:
 374:Generated_Source\PSoC5/UART.c ****     *  None.
 375:Generated_Source\PSoC5/UART.c ****     *
 376:Generated_Source\PSoC5/UART.c ****     * Return:
 377:Generated_Source\PSoC5/UART.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/UART.c ****     *
 379:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 380:Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 15


 383:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/UART.c ****     *
 388:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 389:Generated_Source\PSoC5/UART.c ****     *  No.
 390:Generated_Source\PSoC5/UART.c ****     *
 391:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxData(void) 
 393:Generated_Source\PSoC5/UART.c ****     {
 417              		.loc 1 393 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 8
 420              		@ frame_needed = 1, uses_anonymous_args = 0
 421              		@ link register save eliminated.
 422 0000 80B4     		push	{r7}
 423              		.cfi_def_cfa_offset 4
 424              		.cfi_offset 7, -4
 425 0002 83B0     		sub	sp, sp, #12
 426              		.cfi_def_cfa_offset 16
 427 0004 00AF     		add	r7, sp, #0
 428              		.cfi_def_cfa_register 7
 394:Generated_Source\PSoC5/UART.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/UART.c **** 
 396:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/UART.c **** 
 398:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC5/UART.c **** 
 401:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 403:Generated_Source\PSoC5/UART.c **** 
 404:Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 405:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 406:Generated_Source\PSoC5/UART.c **** 
 407:Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:Generated_Source\PSoC5/UART.c ****         {
 409:Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 410:Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 411:Generated_Source\PSoC5/UART.c **** 
 412:Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 413:Generated_Source\PSoC5/UART.c ****             {
 414:Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 415:Generated_Source\PSoC5/UART.c ****             }
 416:Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 418:Generated_Source\PSoC5/UART.c **** 
 419:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 420:Generated_Source\PSoC5/UART.c ****             {
 421:Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 422:Generated_Source\PSoC5/UART.c ****                 #if ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 425:Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/UART.c ****                             *  configuration set, otherwise
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 16


 428:Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/UART.c ****                             */
 430:Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC5/UART.c ****                         }
 432:Generated_Source\PSoC5/UART.c ****                     #else
 433:Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 435:Generated_Source\PSoC5/UART.c ****                 #endif /* ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/UART.c ****             }
 437:Generated_Source\PSoC5/UART.c ****         }
 438:Generated_Source\PSoC5/UART.c ****         else
 439:Generated_Source\PSoC5/UART.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 441:Generated_Source\PSoC5/UART.c ****         }
 442:Generated_Source\PSoC5/UART.c **** 
 443:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 444:Generated_Source\PSoC5/UART.c **** 
 445:Generated_Source\PSoC5/UART.c ****     #else
 446:Generated_Source\PSoC5/UART.c **** 
 447:Generated_Source\PSoC5/UART.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/UART.c ****         rxData = UART_RXDATA_REG;
 429              		.loc 1 448 0
 430 0006 044B     		ldr	r3, .L22
 431 0008 1B78     		ldrb	r3, [r3]
 432 000a FB71     		strb	r3, [r7, #7]
 449:Generated_Source\PSoC5/UART.c **** 
 450:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/UART.c **** 
 452:Generated_Source\PSoC5/UART.c ****         return(rxData);
 433              		.loc 1 452 0
 434 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 453:Generated_Source\PSoC5/UART.c ****     }
 435              		.loc 1 453 0
 436 000e 1846     		mov	r0, r3
 437 0010 0C37     		adds	r7, r7, #12
 438              		.cfi_def_cfa_offset 4
 439 0012 BD46     		mov	sp, r7
 440              		.cfi_def_cfa_register 13
 441              		@ sp needed
 442 0014 80BC     		pop	{r7}
 443              		.cfi_restore 7
 444              		.cfi_def_cfa_offset 0
 445 0016 7047     		bx	lr
 446              	.L23:
 447              		.align	2
 448              	.L22:
 449 0018 49650040 		.word	1073767753
 450              		.cfi_endproc
 451              	.LFE7:
 452              		.size	UART_ReadRxData, .-UART_ReadRxData
 453              		.section	.text.UART_ReadRxStatus,"ax",%progbits
 454              		.align	2
 455              		.global	UART_ReadRxStatus
 456              		.thumb
 457              		.thumb_func
 458              		.type	UART_ReadRxStatus, %function
 459              	UART_ReadRxStatus:
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 17


 460              	.LFB8:
 454:Generated_Source\PSoC5/UART.c **** 
 455:Generated_Source\PSoC5/UART.c **** 
 456:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxStatus
 458:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/UART.c ****     *
 460:Generated_Source\PSoC5/UART.c ****     * Summary:
 461:Generated_Source\PSoC5/UART.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/UART.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/UART.c ****     *
 464:Generated_Source\PSoC5/UART.c ****     * Parameters:
 465:Generated_Source\PSoC5/UART.c ****     *  None.
 466:Generated_Source\PSoC5/UART.c ****     *
 467:Generated_Source\PSoC5/UART.c ****     * Return:
 468:Generated_Source\PSoC5/UART.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/UART.c ****     *
 470:Generated_Source\PSoC5/UART.c ****     * Side Effect:
 471:Generated_Source\PSoC5/UART.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/UART.c ****     *  register read.
 475:Generated_Source\PSoC5/UART.c ****     *
 476:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 477:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/UART.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/UART.c ****     *   UART_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/UART.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/UART.c ****     *   UART_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/UART.c ****     *   bits.
 483:Generated_Source\PSoC5/UART.c ****     *
 484:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/UART.c ****     {
 461              		.loc 1 486 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 8
 464              		@ frame_needed = 1, uses_anonymous_args = 0
 465              		@ link register save eliminated.
 466 0000 80B4     		push	{r7}
 467              		.cfi_def_cfa_offset 4
 468              		.cfi_offset 7, -4
 469 0002 83B0     		sub	sp, sp, #12
 470              		.cfi_def_cfa_offset 16
 471 0004 00AF     		add	r7, sp, #0
 472              		.cfi_def_cfa_register 7
 487:Generated_Source\PSoC5/UART.c ****         uint8 status;
 488:Generated_Source\PSoC5/UART.c **** 
 489:Generated_Source\PSoC5/UART.c ****         status = UART_RXSTATUS_REG & UART_RX_HW_MASK;
 473              		.loc 1 489 0
 474 0006 064B     		ldr	r3, .L26
 475 0008 1B78     		ldrb	r3, [r3]
 476 000a DBB2     		uxtb	r3, r3
 477 000c 03F07F03 		and	r3, r3, #127
 478 0010 FB71     		strb	r3, [r7, #7]
 490:Generated_Source\PSoC5/UART.c **** 
 491:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 18


 492:Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferOverflow != 0u)
 493:Generated_Source\PSoC5/UART.c ****         {
 494:Generated_Source\PSoC5/UART.c ****             status |= UART_RX_STS_SOFT_BUFF_OVER;
 495:Generated_Source\PSoC5/UART.c ****             UART_rxBufferOverflow = 0u;
 496:Generated_Source\PSoC5/UART.c ****         }
 497:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/UART.c **** 
 499:Generated_Source\PSoC5/UART.c ****         return(status);
 479              		.loc 1 499 0
 480 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 500:Generated_Source\PSoC5/UART.c ****     }
 481              		.loc 1 500 0
 482 0014 1846     		mov	r0, r3
 483 0016 0C37     		adds	r7, r7, #12
 484              		.cfi_def_cfa_offset 4
 485 0018 BD46     		mov	sp, r7
 486              		.cfi_def_cfa_register 13
 487              		@ sp needed
 488 001a 80BC     		pop	{r7}
 489              		.cfi_restore 7
 490              		.cfi_def_cfa_offset 0
 491 001c 7047     		bx	lr
 492              	.L27:
 493 001e 00BF     		.align	2
 494              	.L26:
 495 0020 69640040 		.word	1073767529
 496              		.cfi_endproc
 497              	.LFE8:
 498              		.size	UART_ReadRxStatus, .-UART_ReadRxStatus
 499              		.section	.text.UART_GetChar,"ax",%progbits
 500              		.align	2
 501              		.global	UART_GetChar
 502              		.thumb
 503              		.thumb_func
 504              		.type	UART_GetChar, %function
 505              	UART_GetChar:
 506              	.LFB9:
 501:Generated_Source\PSoC5/UART.c **** 
 502:Generated_Source\PSoC5/UART.c **** 
 503:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetChar
 505:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/UART.c ****     *
 507:Generated_Source\PSoC5/UART.c ****     * Summary:
 508:Generated_Source\PSoC5/UART.c ****     *  Returns the last received byte of data. UART_GetChar() is
 509:Generated_Source\PSoC5/UART.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/UART.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/UART.c ****     *
 512:Generated_Source\PSoC5/UART.c ****     * Parameters:
 513:Generated_Source\PSoC5/UART.c ****     *  None.
 514:Generated_Source\PSoC5/UART.c ****     *
 515:Generated_Source\PSoC5/UART.c ****     * Return:
 516:Generated_Source\PSoC5/UART.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/UART.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/UART.c ****     *
 519:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 520:Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 19


 521:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/UART.c ****     *
 528:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 529:Generated_Source\PSoC5/UART.c ****     *  No.
 530:Generated_Source\PSoC5/UART.c ****     *
 531:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetChar(void) 
 533:Generated_Source\PSoC5/UART.c ****     {
 507              		.loc 1 533 0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 8
 510              		@ frame_needed = 1, uses_anonymous_args = 0
 511              		@ link register save eliminated.
 512 0000 80B4     		push	{r7}
 513              		.cfi_def_cfa_offset 4
 514              		.cfi_offset 7, -4
 515 0002 83B0     		sub	sp, sp, #12
 516              		.cfi_def_cfa_offset 16
 517 0004 00AF     		add	r7, sp, #0
 518              		.cfi_def_cfa_register 7
 534:Generated_Source\PSoC5/UART.c ****         uint8 rxData = 0u;
 519              		.loc 1 534 0
 520 0006 0023     		movs	r3, #0
 521 0008 FB71     		strb	r3, [r7, #7]
 535:Generated_Source\PSoC5/UART.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/UART.c **** 
 537:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC5/UART.c **** 
 541:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 543:Generated_Source\PSoC5/UART.c **** 
 544:Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 545:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 546:Generated_Source\PSoC5/UART.c **** 
 547:Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:Generated_Source\PSoC5/UART.c ****         {
 549:Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 550:Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 551:Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 552:Generated_Source\PSoC5/UART.c ****             {
 553:Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 554:Generated_Source\PSoC5/UART.c ****             }
 555:Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 557:Generated_Source\PSoC5/UART.c **** 
 558:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 559:Generated_Source\PSoC5/UART.c ****             {
 560:Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 561:Generated_Source\PSoC5/UART.c ****                 #if( (UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 20


 563:Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 564:Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/UART.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/UART.c ****                             */
 569:Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/UART.c ****                         }
 571:Generated_Source\PSoC5/UART.c ****                     #else
 572:Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 574:Generated_Source\PSoC5/UART.c ****                 #endif /* UART_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/UART.c ****             }
 576:Generated_Source\PSoC5/UART.c **** 
 577:Generated_Source\PSoC5/UART.c ****         }
 578:Generated_Source\PSoC5/UART.c ****         else
 579:Generated_Source\PSoC5/UART.c ****         {   rxStatus = UART_RXSTATUS_REG;
 580:Generated_Source\PSoC5/UART.c ****             if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:Generated_Source\PSoC5/UART.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/UART.c ****                 rxData = UART_RXDATA_REG;
 583:Generated_Source\PSoC5/UART.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/UART.c ****                 if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC5/UART.c ****                                 UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC5/UART.c ****                 {
 587:Generated_Source\PSoC5/UART.c ****                     rxData = 0u;
 588:Generated_Source\PSoC5/UART.c ****                 }
 589:Generated_Source\PSoC5/UART.c ****             }
 590:Generated_Source\PSoC5/UART.c ****         }
 591:Generated_Source\PSoC5/UART.c **** 
 592:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 593:Generated_Source\PSoC5/UART.c **** 
 594:Generated_Source\PSoC5/UART.c ****     #else
 595:Generated_Source\PSoC5/UART.c **** 
 596:Generated_Source\PSoC5/UART.c ****         rxStatus =UART_RXSTATUS_REG;
 522              		.loc 1 596 0
 523 000a 0C4B     		ldr	r3, .L31
 524 000c 1B78     		ldrb	r3, [r3]
 525 000e BB71     		strb	r3, [r7, #6]
 597:Generated_Source\PSoC5/UART.c ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 526              		.loc 1 597 0
 527 0010 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 528 0012 03F02003 		and	r3, r3, #32
 529 0016 002B     		cmp	r3, #0
 530 0018 09D0     		beq	.L29
 598:Generated_Source\PSoC5/UART.c ****         {
 599:Generated_Source\PSoC5/UART.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 531              		.loc 1 600 0
 532 001a 094B     		ldr	r3, .L31+4
 533 001c 1B78     		ldrb	r3, [r3]
 534 001e FB71     		strb	r3, [r7, #7]
 601:Generated_Source\PSoC5/UART.c **** 
 602:Generated_Source\PSoC5/UART.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/UART.c ****             if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 604:Generated_Source\PSoC5/UART.c ****                             UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 535              		.loc 1 604 0
 536 0020 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 21


 537 0022 03F01E03 		and	r3, r3, #30
 603:Generated_Source\PSoC5/UART.c ****                             UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 538              		.loc 1 603 0
 539 0026 002B     		cmp	r3, #0
 540 0028 01D0     		beq	.L29
 605:Generated_Source\PSoC5/UART.c ****             {
 606:Generated_Source\PSoC5/UART.c ****                 rxData = 0u;
 541              		.loc 1 606 0
 542 002a 0023     		movs	r3, #0
 543 002c FB71     		strb	r3, [r7, #7]
 544              	.L29:
 607:Generated_Source\PSoC5/UART.c ****             }
 608:Generated_Source\PSoC5/UART.c ****         }
 609:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/UART.c **** 
 611:Generated_Source\PSoC5/UART.c ****         return(rxData);
 545              		.loc 1 611 0
 546 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 612:Generated_Source\PSoC5/UART.c ****     }
 547              		.loc 1 612 0
 548 0030 1846     		mov	r0, r3
 549 0032 0C37     		adds	r7, r7, #12
 550              		.cfi_def_cfa_offset 4
 551 0034 BD46     		mov	sp, r7
 552              		.cfi_def_cfa_register 13
 553              		@ sp needed
 554 0036 80BC     		pop	{r7}
 555              		.cfi_restore 7
 556              		.cfi_def_cfa_offset 0
 557 0038 7047     		bx	lr
 558              	.L32:
 559 003a 00BF     		.align	2
 560              	.L31:
 561 003c 69640040 		.word	1073767529
 562 0040 49650040 		.word	1073767753
 563              		.cfi_endproc
 564              	.LFE9:
 565              		.size	UART_GetChar, .-UART_GetChar
 566              		.section	.text.UART_GetByte,"ax",%progbits
 567              		.align	2
 568              		.global	UART_GetByte
 569              		.thumb
 570              		.thumb_func
 571              		.type	UART_GetByte, %function
 572              	UART_GetByte:
 573              	.LFB10:
 613:Generated_Source\PSoC5/UART.c **** 
 614:Generated_Source\PSoC5/UART.c **** 
 615:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetByte
 617:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/UART.c ****     *
 619:Generated_Source\PSoC5/UART.c ****     * Summary:
 620:Generated_Source\PSoC5/UART.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/UART.c ****     *  condition.
 622:Generated_Source\PSoC5/UART.c ****     *
 623:Generated_Source\PSoC5/UART.c ****     * Parameters:
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 22


 624:Generated_Source\PSoC5/UART.c ****     *  None.
 625:Generated_Source\PSoC5/UART.c ****     *
 626:Generated_Source\PSoC5/UART.c ****     * Return:
 627:Generated_Source\PSoC5/UART.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/UART.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/UART.c ****     *
 630:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 631:Generated_Source\PSoC5/UART.c ****     *  No.
 632:Generated_Source\PSoC5/UART.c ****     *
 633:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/UART.c ****     uint16 UART_GetByte(void) 
 635:Generated_Source\PSoC5/UART.c ****     {
 574              		.loc 1 635 0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 1, uses_anonymous_args = 0
 578 0000 98B5     		push	{r3, r4, r7, lr}
 579              		.cfi_def_cfa_offset 16
 580              		.cfi_offset 3, -16
 581              		.cfi_offset 4, -12
 582              		.cfi_offset 7, -8
 583              		.cfi_offset 14, -4
 584 0002 00AF     		add	r7, sp, #0
 585              		.cfi_def_cfa_register 7
 636:Generated_Source\PSoC5/UART.c ****         
 637:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/UART.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 641:Generated_Source\PSoC5/UART.c ****         locErrorStatus = (uint16)UART_errorStatus;
 642:Generated_Source\PSoC5/UART.c ****         UART_errorStatus = 0u;
 643:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 644:Generated_Source\PSoC5/UART.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_ReadRxData() );
 645:Generated_Source\PSoC5/UART.c ****     #else
 646:Generated_Source\PSoC5/UART.c ****         return ( ((uint16)UART_ReadRxStatus() << 8u) | UART_ReadRxData() );
 586              		.loc 1 646 0
 587 0004 FFF7FEFF 		bl	UART_ReadRxStatus
 588 0008 0346     		mov	r3, r0
 589 000a 1B02     		lsls	r3, r3, #8
 590 000c 1CB2     		sxth	r4, r3
 591 000e FFF7FEFF 		bl	UART_ReadRxData
 592 0012 0346     		mov	r3, r0
 593 0014 1BB2     		sxth	r3, r3
 594 0016 2343     		orrs	r3, r3, r4
 595 0018 1BB2     		sxth	r3, r3
 596 001a 9BB2     		uxth	r3, r3
 647:Generated_Source\PSoC5/UART.c ****     #endif /* UART_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/UART.c ****         
 649:Generated_Source\PSoC5/UART.c ****     }
 597              		.loc 1 649 0
 598 001c 1846     		mov	r0, r3
 599 001e 98BD     		pop	{r3, r4, r7, pc}
 600              		.cfi_endproc
 601              	.LFE10:
 602              		.size	UART_GetByte, .-UART_GetByte
 603              		.section	.text.UART_GetRxBufferSize,"ax",%progbits
 604              		.align	2
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 23


 605              		.global	UART_GetRxBufferSize
 606              		.thumb
 607              		.thumb_func
 608              		.type	UART_GetRxBufferSize, %function
 609              	UART_GetRxBufferSize:
 610              	.LFB11:
 650:Generated_Source\PSoC5/UART.c **** 
 651:Generated_Source\PSoC5/UART.c **** 
 652:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetRxBufferSize
 654:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/UART.c ****     *
 656:Generated_Source\PSoC5/UART.c ****     * Summary:
 657:Generated_Source\PSoC5/UART.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/UART.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/UART.c ****     *    account.
 663:Generated_Source\PSoC5/UART.c ****     *
 664:Generated_Source\PSoC5/UART.c ****     * Parameters:
 665:Generated_Source\PSoC5/UART.c ****     *  None.
 666:Generated_Source\PSoC5/UART.c ****     *
 667:Generated_Source\PSoC5/UART.c ****     * Return:
 668:Generated_Source\PSoC5/UART.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/UART.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/UART.c ****     *
 671:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 672:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/UART.c ****     *
 676:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 677:Generated_Source\PSoC5/UART.c ****     *  No.
 678:Generated_Source\PSoC5/UART.c ****     *
 679:Generated_Source\PSoC5/UART.c ****     * Theory:
 680:Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/UART.c ****     *
 682:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/UART.c ****                                                             
 685:Generated_Source\PSoC5/UART.c ****     {
 611              		.loc 1 685 0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 8
 614              		@ frame_needed = 1, uses_anonymous_args = 0
 615              		@ link register save eliminated.
 616 0000 80B4     		push	{r7}
 617              		.cfi_def_cfa_offset 4
 618              		.cfi_offset 7, -4
 619 0002 83B0     		sub	sp, sp, #12
 620              		.cfi_def_cfa_offset 16
 621 0004 00AF     		add	r7, sp, #0
 622              		.cfi_def_cfa_register 7
 686:Generated_Source\PSoC5/UART.c ****         uint8 size;
 687:Generated_Source\PSoC5/UART.c **** 
 688:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 24


 689:Generated_Source\PSoC5/UART.c **** 
 690:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 692:Generated_Source\PSoC5/UART.c **** 
 693:Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferRead == UART_rxBufferWrite)
 694:Generated_Source\PSoC5/UART.c ****         {
 695:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 696:Generated_Source\PSoC5/UART.c ****             {
 697:Generated_Source\PSoC5/UART.c ****                 size = UART_RX_BUFFER_SIZE;
 698:Generated_Source\PSoC5/UART.c ****             }
 699:Generated_Source\PSoC5/UART.c ****             else
 700:Generated_Source\PSoC5/UART.c ****             {
 701:Generated_Source\PSoC5/UART.c ****                 size = 0u;
 702:Generated_Source\PSoC5/UART.c ****             }
 703:Generated_Source\PSoC5/UART.c ****         }
 704:Generated_Source\PSoC5/UART.c ****         else if(UART_rxBufferRead < UART_rxBufferWrite)
 705:Generated_Source\PSoC5/UART.c ****         {
 706:Generated_Source\PSoC5/UART.c ****             size = (UART_rxBufferWrite - UART_rxBufferRead);
 707:Generated_Source\PSoC5/UART.c ****         }
 708:Generated_Source\PSoC5/UART.c ****         else
 709:Generated_Source\PSoC5/UART.c ****         {
 710:Generated_Source\PSoC5/UART.c ****             size = (UART_RX_BUFFER_SIZE - UART_rxBufferRead) + UART_rxBufferWrite;
 711:Generated_Source\PSoC5/UART.c ****         }
 712:Generated_Source\PSoC5/UART.c **** 
 713:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 714:Generated_Source\PSoC5/UART.c **** 
 715:Generated_Source\PSoC5/UART.c ****     #else
 716:Generated_Source\PSoC5/UART.c **** 
 717:Generated_Source\PSoC5/UART.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/UART.c ****         size = ((UART_RXSTATUS_REG & UART_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 623              		.loc 1 718 0
 624 0006 084B     		ldr	r3, .L39
 625 0008 1B78     		ldrb	r3, [r3]
 626 000a DBB2     		uxtb	r3, r3
 627 000c 03F02003 		and	r3, r3, #32
 628 0010 002B     		cmp	r3, #0
 629 0012 01D0     		beq	.L36
 630              		.loc 1 718 0 is_stmt 0 discriminator 1
 631 0014 0123     		movs	r3, #1
 632 0016 00E0     		b	.L37
 633              	.L36:
 634              		.loc 1 718 0 discriminator 2
 635 0018 0023     		movs	r3, #0
 636              	.L37:
 637              		.loc 1 718 0 discriminator 4
 638 001a FB71     		strb	r3, [r7, #7]
 719:Generated_Source\PSoC5/UART.c **** 
 720:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/UART.c **** 
 722:Generated_Source\PSoC5/UART.c ****         return(size);
 639              		.loc 1 722 0 is_stmt 1 discriminator 4
 640 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 723:Generated_Source\PSoC5/UART.c ****     }
 641              		.loc 1 723 0 discriminator 4
 642 001e 1846     		mov	r0, r3
 643 0020 0C37     		adds	r7, r7, #12
 644              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 25


 645 0022 BD46     		mov	sp, r7
 646              		.cfi_def_cfa_register 13
 647              		@ sp needed
 648 0024 80BC     		pop	{r7}
 649              		.cfi_restore 7
 650              		.cfi_def_cfa_offset 0
 651 0026 7047     		bx	lr
 652              	.L40:
 653              		.align	2
 654              	.L39:
 655 0028 69640040 		.word	1073767529
 656              		.cfi_endproc
 657              	.LFE11:
 658              		.size	UART_GetRxBufferSize, .-UART_GetRxBufferSize
 659              		.section	.text.UART_ClearRxBuffer,"ax",%progbits
 660              		.align	2
 661              		.global	UART_ClearRxBuffer
 662              		.thumb
 663              		.thumb_func
 664              		.type	UART_ClearRxBuffer, %function
 665              	UART_ClearRxBuffer:
 666              	.LFB12:
 724:Generated_Source\PSoC5/UART.c **** 
 725:Generated_Source\PSoC5/UART.c **** 
 726:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearRxBuffer
 728:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/UART.c ****     *
 730:Generated_Source\PSoC5/UART.c ****     * Summary:
 731:Generated_Source\PSoC5/UART.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/UART.c ****     *
 733:Generated_Source\PSoC5/UART.c ****     * Parameters:
 734:Generated_Source\PSoC5/UART.c ****     *  None.
 735:Generated_Source\PSoC5/UART.c ****     *
 736:Generated_Source\PSoC5/UART.c ****     * Return:
 737:Generated_Source\PSoC5/UART.c ****     *  None.
 738:Generated_Source\PSoC5/UART.c ****     *
 739:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 740:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/UART.c ****     *
 745:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 746:Generated_Source\PSoC5/UART.c ****     *  No.
 747:Generated_Source\PSoC5/UART.c ****     *
 748:Generated_Source\PSoC5/UART.c ****     * Theory:
 749:Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/UART.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/UART.c ****     *
 753:Generated_Source\PSoC5/UART.c ****     * Side Effects:
 754:Generated_Source\PSoC5/UART.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/UART.c ****     *
 756:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/UART.c ****     void UART_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/UART.c ****     {
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 26


 667              		.loc 1 758 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 8
 670              		@ frame_needed = 1, uses_anonymous_args = 0
 671 0000 80B5     		push	{r7, lr}
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 7, -8
 674              		.cfi_offset 14, -4
 675 0002 82B0     		sub	sp, sp, #8
 676              		.cfi_def_cfa_offset 16
 677 0004 00AF     		add	r7, sp, #0
 678              		.cfi_def_cfa_register 7
 759:Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/UART.c **** 
 761:Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 679              		.loc 1 762 0
 680 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 681 000a 0346     		mov	r3, r0
 682 000c FB71     		strb	r3, [r7, #7]
 763:Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG |= (uint8)  UART_RX_FIFO_CLR;
 683              		.loc 1 763 0
 684 000e 0C4A     		ldr	r2, .L42
 685 0010 0B4B     		ldr	r3, .L42
 686 0012 1B78     		ldrb	r3, [r3]
 687 0014 DBB2     		uxtb	r3, r3
 688 0016 43F00103 		orr	r3, r3, #1
 689 001a DBB2     		uxtb	r3, r3
 690 001c 1370     		strb	r3, [r2]
 764:Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG &= (uint8) ~UART_RX_FIFO_CLR;
 691              		.loc 1 764 0
 692 001e 084A     		ldr	r2, .L42
 693 0020 074B     		ldr	r3, .L42
 694 0022 1B78     		ldrb	r3, [r3]
 695 0024 DBB2     		uxtb	r3, r3
 696 0026 23F00103 		bic	r3, r3, #1
 697 002a DBB2     		uxtb	r3, r3
 698 002c 1370     		strb	r3, [r2]
 765:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 699              		.loc 1 765 0
 700 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 701 0030 1846     		mov	r0, r3
 702 0032 FFF7FEFF 		bl	CyExitCriticalSection
 766:Generated_Source\PSoC5/UART.c **** 
 767:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/UART.c **** 
 769:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 771:Generated_Source\PSoC5/UART.c **** 
 772:Generated_Source\PSoC5/UART.c ****         UART_rxBufferRead = 0u;
 773:Generated_Source\PSoC5/UART.c ****         UART_rxBufferWrite = 0u;
 774:Generated_Source\PSoC5/UART.c ****         UART_rxBufferLoopDetect = 0u;
 775:Generated_Source\PSoC5/UART.c ****         UART_rxBufferOverflow = 0u;
 776:Generated_Source\PSoC5/UART.c **** 
 777:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 778:Generated_Source\PSoC5/UART.c **** 
 779:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 27


 780:Generated_Source\PSoC5/UART.c **** 
 781:Generated_Source\PSoC5/UART.c ****     }
 703              		.loc 1 781 0
 704 0036 00BF     		nop
 705 0038 0837     		adds	r7, r7, #8
 706              		.cfi_def_cfa_offset 8
 707 003a BD46     		mov	sp, r7
 708              		.cfi_def_cfa_register 13
 709              		@ sp needed
 710 003c 80BD     		pop	{r7, pc}
 711              	.L43:
 712 003e 00BF     		.align	2
 713              	.L42:
 714 0040 99650040 		.word	1073767833
 715              		.cfi_endproc
 716              	.LFE12:
 717              		.size	UART_ClearRxBuffer, .-UART_ClearRxBuffer
 718              		.section	.text.UART_SetRxAddressMode,"ax",%progbits
 719              		.align	2
 720              		.global	UART_SetRxAddressMode
 721              		.thumb
 722              		.thumb_func
 723              		.type	UART_SetRxAddressMode, %function
 724              	UART_SetRxAddressMode:
 725              	.LFB13:
 782:Generated_Source\PSoC5/UART.c **** 
 783:Generated_Source\PSoC5/UART.c **** 
 784:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddressMode
 786:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/UART.c ****     *
 788:Generated_Source\PSoC5/UART.c ****     * Summary:
 789:Generated_Source\PSoC5/UART.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/UART.c ****     *  UART.
 791:Generated_Source\PSoC5/UART.c ****     *
 792:Generated_Source\PSoC5/UART.c ****     * Parameters:
 793:Generated_Source\PSoC5/UART.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/UART.c ****     *                                               detection
 796:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/UART.c ****     *                                               address detection
 798:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/UART.c ****     *                                               detection
 800:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/UART.c ****     *                                               address detection
 802:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/UART.c ****     *
 804:Generated_Source\PSoC5/UART.c ****     * Return:
 805:Generated_Source\PSoC5/UART.c ****     *  None.
 806:Generated_Source\PSoC5/UART.c ****     *
 807:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 808:Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/UART.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/UART.c ****     *
 812:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddressMode(uint8 addressMode)
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 28


 814:Generated_Source\PSoC5/UART.c ****                                                         
 815:Generated_Source\PSoC5/UART.c ****     {
 726              		.loc 1 815 0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 8
 729              		@ frame_needed = 1, uses_anonymous_args = 0
 730              		@ link register save eliminated.
 731 0000 80B4     		push	{r7}
 732              		.cfi_def_cfa_offset 4
 733              		.cfi_offset 7, -4
 734 0002 83B0     		sub	sp, sp, #12
 735              		.cfi_def_cfa_offset 16
 736 0004 00AF     		add	r7, sp, #0
 737              		.cfi_def_cfa_register 7
 738 0006 0346     		mov	r3, r0
 739 0008 FB71     		strb	r3, [r7, #7]
 816:Generated_Source\PSoC5/UART.c ****         #if(UART_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/UART.c ****             #if(UART_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/UART.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/UART.c ****                 {
 820:Generated_Source\PSoC5/UART.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/UART.c ****                 }
 822:Generated_Source\PSoC5/UART.c ****             #else /* UART_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/UART.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/UART.c ****                 tmpCtrl = UART_CONTROL_REG & (uint8)~UART_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/UART.c ****                 tmpCtrl |= (uint8)(addressMode << UART_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/UART.c ****                 UART_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/UART.c **** 
 828:Generated_Source\PSoC5/UART.c ****                 #if(UART_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/UART.c ****                    (UART_RXBUFFERSIZE > UART_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/UART.c ****                     UART_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/UART.c ****                     UART_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_RXBUFFERSIZE > UART_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/UART.c ****         #else /* UART_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/UART.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/UART.c ****             {
 837:Generated_Source\PSoC5/UART.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/UART.c ****             }
 839:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/UART.c ****     }
 740              		.loc 1 840 0
 741 000a 00BF     		nop
 742 000c 0C37     		adds	r7, r7, #12
 743              		.cfi_def_cfa_offset 4
 744 000e BD46     		mov	sp, r7
 745              		.cfi_def_cfa_register 13
 746              		@ sp needed
 747 0010 80BC     		pop	{r7}
 748              		.cfi_restore 7
 749              		.cfi_def_cfa_offset 0
 750 0012 7047     		bx	lr
 751              		.cfi_endproc
 752              	.LFE13:
 753              		.size	UART_SetRxAddressMode, .-UART_SetRxAddressMode
 754              		.section	.text.UART_SetRxAddress1,"ax",%progbits
 755              		.align	2
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 29


 756              		.global	UART_SetRxAddress1
 757              		.thumb
 758              		.thumb_func
 759              		.type	UART_SetRxAddress1, %function
 760              	UART_SetRxAddress1:
 761              	.LFB14:
 841:Generated_Source\PSoC5/UART.c **** 
 842:Generated_Source\PSoC5/UART.c **** 
 843:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress1
 845:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/UART.c ****     *
 847:Generated_Source\PSoC5/UART.c ****     * Summary:
 848:Generated_Source\PSoC5/UART.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/UART.c ****     *
 850:Generated_Source\PSoC5/UART.c ****     * Parameters:
 851:Generated_Source\PSoC5/UART.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/UART.c ****     *
 853:Generated_Source\PSoC5/UART.c ****     * Return:
 854:Generated_Source\PSoC5/UART.c ****     *  None.
 855:Generated_Source\PSoC5/UART.c ****     *
 856:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/UART.c ****     {
 762              		.loc 1 858 0
 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 8
 765              		@ frame_needed = 1, uses_anonymous_args = 0
 766              		@ link register save eliminated.
 767 0000 80B4     		push	{r7}
 768              		.cfi_def_cfa_offset 4
 769              		.cfi_offset 7, -4
 770 0002 83B0     		sub	sp, sp, #12
 771              		.cfi_def_cfa_offset 16
 772 0004 00AF     		add	r7, sp, #0
 773              		.cfi_def_cfa_register 7
 774 0006 0346     		mov	r3, r0
 775 0008 FB71     		strb	r3, [r7, #7]
 859:Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS1_REG = address;
 776              		.loc 1 859 0
 777 000a 044A     		ldr	r2, .L46
 778 000c FB79     		ldrb	r3, [r7, #7]
 779 000e 1370     		strb	r3, [r2]
 860:Generated_Source\PSoC5/UART.c ****     }
 780              		.loc 1 860 0
 781 0010 00BF     		nop
 782 0012 0C37     		adds	r7, r7, #12
 783              		.cfi_def_cfa_offset 4
 784 0014 BD46     		mov	sp, r7
 785              		.cfi_def_cfa_register 13
 786              		@ sp needed
 787 0016 80BC     		pop	{r7}
 788              		.cfi_restore 7
 789              		.cfi_def_cfa_offset 0
 790 0018 7047     		bx	lr
 791              	.L47:
 792 001a 00BF     		.align	2
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 30


 793              	.L46:
 794 001c 29650040 		.word	1073767721
 795              		.cfi_endproc
 796              	.LFE14:
 797              		.size	UART_SetRxAddress1, .-UART_SetRxAddress1
 798              		.section	.text.UART_SetRxAddress2,"ax",%progbits
 799              		.align	2
 800              		.global	UART_SetRxAddress2
 801              		.thumb
 802              		.thumb_func
 803              		.type	UART_SetRxAddress2, %function
 804              	UART_SetRxAddress2:
 805              	.LFB15:
 861:Generated_Source\PSoC5/UART.c **** 
 862:Generated_Source\PSoC5/UART.c **** 
 863:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress2
 865:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/UART.c ****     *
 867:Generated_Source\PSoC5/UART.c ****     * Summary:
 868:Generated_Source\PSoC5/UART.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/UART.c ****     *
 870:Generated_Source\PSoC5/UART.c ****     * Parameters:
 871:Generated_Source\PSoC5/UART.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/UART.c ****     *
 873:Generated_Source\PSoC5/UART.c ****     * Return:
 874:Generated_Source\PSoC5/UART.c ****     *  None.
 875:Generated_Source\PSoC5/UART.c ****     *
 876:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/UART.c ****     {
 806              		.loc 1 878 0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 8
 809              		@ frame_needed = 1, uses_anonymous_args = 0
 810              		@ link register save eliminated.
 811 0000 80B4     		push	{r7}
 812              		.cfi_def_cfa_offset 4
 813              		.cfi_offset 7, -4
 814 0002 83B0     		sub	sp, sp, #12
 815              		.cfi_def_cfa_offset 16
 816 0004 00AF     		add	r7, sp, #0
 817              		.cfi_def_cfa_register 7
 818 0006 0346     		mov	r3, r0
 819 0008 FB71     		strb	r3, [r7, #7]
 879:Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS2_REG = address;
 820              		.loc 1 879 0
 821 000a 044A     		ldr	r2, .L49
 822 000c FB79     		ldrb	r3, [r7, #7]
 823 000e 1370     		strb	r3, [r2]
 880:Generated_Source\PSoC5/UART.c ****     }
 824              		.loc 1 880 0
 825 0010 00BF     		nop
 826 0012 0C37     		adds	r7, r7, #12
 827              		.cfi_def_cfa_offset 4
 828 0014 BD46     		mov	sp, r7
 829              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 31


 830              		@ sp needed
 831 0016 80BC     		pop	{r7}
 832              		.cfi_restore 7
 833              		.cfi_def_cfa_offset 0
 834 0018 7047     		bx	lr
 835              	.L50:
 836 001a 00BF     		.align	2
 837              	.L49:
 838 001c 39650040 		.word	1073767737
 839              		.cfi_endproc
 840              	.LFE15:
 841              		.size	UART_SetRxAddress2, .-UART_SetRxAddress2
 842              		.section	.text.UART_SetTxInterruptMode,"ax",%progbits
 843              		.align	2
 844              		.global	UART_SetTxInterruptMode
 845              		.thumb
 846              		.thumb_func
 847              		.type	UART_SetTxInterruptMode, %function
 848              	UART_SetTxInterruptMode:
 849              	.LFB16:
 881:Generated_Source\PSoC5/UART.c **** 
 882:Generated_Source\PSoC5/UART.c **** #endif  /* UART_RX_ENABLED || UART_HD_ENABLED*/
 883:Generated_Source\PSoC5/UART.c **** 
 884:Generated_Source\PSoC5/UART.c **** 
 885:Generated_Source\PSoC5/UART.c **** #if( (UART_TX_ENABLED) || (UART_HD_ENABLED) )
 886:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxInterruptMode
 888:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/UART.c ****     *
 890:Generated_Source\PSoC5/UART.c ****     * Summary:
 891:Generated_Source\PSoC5/UART.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/UART.c ****     *  interrupt.
 893:Generated_Source\PSoC5/UART.c ****     *
 894:Generated_Source\PSoC5/UART.c ****     * Parameters:
 895:Generated_Source\PSoC5/UART.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/UART.c ****     *
 901:Generated_Source\PSoC5/UART.c ****     * Return:
 902:Generated_Source\PSoC5/UART.c ****     *  None.
 903:Generated_Source\PSoC5/UART.c ****     *
 904:Generated_Source\PSoC5/UART.c ****     * Theory:
 905:Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/UART.c ****     *
 907:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/UART.c ****     void UART_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/UART.c ****     {
 850              		.loc 1 909 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 8
 853              		@ frame_needed = 1, uses_anonymous_args = 0
 854              		@ link register save eliminated.
 855 0000 80B4     		push	{r7}
 856              		.cfi_def_cfa_offset 4
 857              		.cfi_offset 7, -4
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 32


 858 0002 83B0     		sub	sp, sp, #12
 859              		.cfi_def_cfa_offset 16
 860 0004 00AF     		add	r7, sp, #0
 861              		.cfi_def_cfa_register 7
 862 0006 0346     		mov	r3, r0
 863 0008 FB71     		strb	r3, [r7, #7]
 910:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_MASK_REG = intSrc;
 864              		.loc 1 910 0
 865 000a 044A     		ldr	r2, .L52
 866 000c FB79     		ldrb	r3, [r7, #7]
 867 000e 1370     		strb	r3, [r2]
 911:Generated_Source\PSoC5/UART.c ****     }
 868              		.loc 1 911 0
 869 0010 00BF     		nop
 870 0012 0C37     		adds	r7, r7, #12
 871              		.cfi_def_cfa_offset 4
 872 0014 BD46     		mov	sp, r7
 873              		.cfi_def_cfa_register 13
 874              		@ sp needed
 875 0016 80BC     		pop	{r7}
 876              		.cfi_restore 7
 877              		.cfi_def_cfa_offset 0
 878 0018 7047     		bx	lr
 879              	.L53:
 880 001a 00BF     		.align	2
 881              	.L52:
 882 001c 84640040 		.word	1073767556
 883              		.cfi_endproc
 884              	.LFE16:
 885              		.size	UART_SetTxInterruptMode, .-UART_SetTxInterruptMode
 886              		.section	.text.UART_WriteTxData,"ax",%progbits
 887              		.align	2
 888              		.global	UART_WriteTxData
 889              		.thumb
 890              		.thumb_func
 891              		.type	UART_WriteTxData, %function
 892              	UART_WriteTxData:
 893              	.LFB17:
 912:Generated_Source\PSoC5/UART.c **** 
 913:Generated_Source\PSoC5/UART.c **** 
 914:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_WriteTxData
 916:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/UART.c ****     *
 918:Generated_Source\PSoC5/UART.c ****     * Summary:
 919:Generated_Source\PSoC5/UART.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/UART.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/UART.c ****     *  separately.
 922:Generated_Source\PSoC5/UART.c ****     *
 923:Generated_Source\PSoC5/UART.c ****     * Parameters:
 924:Generated_Source\PSoC5/UART.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/UART.c ****     *
 926:Generated_Source\PSoC5/UART.c ****     * Return:
 927:Generated_Source\PSoC5/UART.c ****     * None.
 928:Generated_Source\PSoC5/UART.c ****     *
 929:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 930:Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 33


 931:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/UART.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/UART.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/UART.c ****     *    initialized.
 937:Generated_Source\PSoC5/UART.c ****     *
 938:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 939:Generated_Source\PSoC5/UART.c ****     *  No.
 940:Generated_Source\PSoC5/UART.c ****     *
 941:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/UART.c ****     void UART_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/UART.c ****     {
 894              		.loc 1 943 0
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 8
 897              		@ frame_needed = 1, uses_anonymous_args = 0
 898              		@ link register save eliminated.
 899 0000 80B4     		push	{r7}
 900              		.cfi_def_cfa_offset 4
 901              		.cfi_offset 7, -4
 902 0002 83B0     		sub	sp, sp, #12
 903              		.cfi_def_cfa_offset 16
 904 0004 00AF     		add	r7, sp, #0
 905              		.cfi_def_cfa_register 7
 906 0006 0346     		mov	r3, r0
 907 0008 FB71     		strb	r3, [r7, #7]
 944:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 908              		.loc 1 945 0
 909 000a 1A4B     		ldr	r3, .L60
 910 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 911 000e 002B     		cmp	r3, #0
 912 0010 2AD0     		beq	.L59
 946:Generated_Source\PSoC5/UART.c ****         {
 947:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/UART.c **** 
 949:Generated_Source\PSoC5/UART.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 913              		.loc 1 950 0
 914 0012 194B     		ldr	r3, .L60+4
 915 0014 0122     		movs	r2, #1
 916 0016 1A60     		str	r2, [r3]
 951:Generated_Source\PSoC5/UART.c **** 
 952:Generated_Source\PSoC5/UART.c ****             if( (UART_txBufferRead == UART_txBufferWrite) &&
 917              		.loc 1 952 0
 918 0018 184B     		ldr	r3, .L60+8
 919 001a 1B78     		ldrb	r3, [r3]
 920 001c DAB2     		uxtb	r2, r3
 921 001e 184B     		ldr	r3, .L60+12
 922 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 923 0022 9A42     		cmp	r2, r3
 924 0024 0AD1     		bne	.L56
 953:Generated_Source\PSoC5/UART.c ****                 ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 925              		.loc 1 953 0 discriminator 1
 926 0026 174B     		ldr	r3, .L60+16
 927 0028 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 34


 928 002a DBB2     		uxtb	r3, r3
 929 002c 03F00403 		and	r3, r3, #4
 952:Generated_Source\PSoC5/UART.c ****                 ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 930              		.loc 1 952 0 discriminator 1
 931 0030 002B     		cmp	r3, #0
 932 0032 03D1     		bne	.L56
 954:Generated_Source\PSoC5/UART.c ****             {
 955:Generated_Source\PSoC5/UART.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = txDataByte;
 933              		.loc 1 956 0
 934 0034 144A     		ldr	r2, .L60+20
 935 0036 FB79     		ldrb	r3, [r7, #7]
 936 0038 1370     		strb	r3, [r2]
 937 003a 12E0     		b	.L57
 938              	.L56:
 957:Generated_Source\PSoC5/UART.c ****             }
 958:Generated_Source\PSoC5/UART.c ****             else
 959:Generated_Source\PSoC5/UART.c ****             {
 960:Generated_Source\PSoC5/UART.c ****                 if(UART_txBufferWrite >= UART_TX_BUFFER_SIZE)
 939              		.loc 1 960 0
 940 003c 104B     		ldr	r3, .L60+12
 941 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 942 0040 FF2B     		cmp	r3, #255
 943 0042 02D1     		bne	.L58
 961:Generated_Source\PSoC5/UART.c ****                 {
 962:Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite = 0u;
 944              		.loc 1 962 0
 945 0044 0E4B     		ldr	r3, .L60+12
 946 0046 0022     		movs	r2, #0
 947 0048 1A70     		strb	r2, [r3]
 948              	.L58:
 963:Generated_Source\PSoC5/UART.c ****                 }
 964:Generated_Source\PSoC5/UART.c **** 
 965:Generated_Source\PSoC5/UART.c ****                 UART_txBuffer[UART_txBufferWrite] = txDataByte;
 949              		.loc 1 965 0
 950 004a 0D4B     		ldr	r3, .L60+12
 951 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 952 004e 1946     		mov	r1, r3
 953 0050 0E4A     		ldr	r2, .L60+24
 954 0052 FB79     		ldrb	r3, [r7, #7]
 955 0054 5354     		strb	r3, [r2, r1]
 966:Generated_Source\PSoC5/UART.c **** 
 967:Generated_Source\PSoC5/UART.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/UART.c ****                 UART_txBufferWrite++;
 956              		.loc 1 968 0
 957 0056 0A4B     		ldr	r3, .L60+12
 958 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 959 005a 0133     		adds	r3, r3, #1
 960 005c DAB2     		uxtb	r2, r3
 961 005e 084B     		ldr	r3, .L60+12
 962 0060 1A70     		strb	r2, [r3]
 963              	.L57:
 969:Generated_Source\PSoC5/UART.c ****             }
 970:Generated_Source\PSoC5/UART.c **** 
 971:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 964              		.loc 1 971 0
 965 0062 0B4B     		ldr	r3, .L60+28
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 35


 966 0064 0122     		movs	r2, #1
 967 0066 1A60     		str	r2, [r3]
 968              	.L59:
 972:Generated_Source\PSoC5/UART.c **** 
 973:Generated_Source\PSoC5/UART.c ****         #else
 974:Generated_Source\PSoC5/UART.c **** 
 975:Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
 977:Generated_Source\PSoC5/UART.c **** 
 978:Generated_Source\PSoC5/UART.c ****         #endif /*(UART_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/UART.c ****         }
 980:Generated_Source\PSoC5/UART.c ****     }
 969              		.loc 1 980 0
 970 0068 00BF     		nop
 971 006a 0C37     		adds	r7, r7, #12
 972              		.cfi_def_cfa_offset 4
 973 006c BD46     		mov	sp, r7
 974              		.cfi_def_cfa_register 13
 975              		@ sp needed
 976 006e 80BC     		pop	{r7}
 977              		.cfi_restore 7
 978              		.cfi_def_cfa_offset 0
 979 0070 7047     		bx	lr
 980              	.L61:
 981 0072 00BF     		.align	2
 982              	.L60:
 983 0074 00000000 		.word	UART_initVar
 984 0078 80E100E0 		.word	-536813184
 985 007c 00000000 		.word	UART_txBufferRead
 986 0080 00000000 		.word	UART_txBufferWrite
 987 0084 64640040 		.word	1073767524
 988 0088 47650040 		.word	1073767751
 989 008c 00000000 		.word	UART_txBuffer
 990 0090 00E100E0 		.word	-536813312
 991              		.cfi_endproc
 992              	.LFE17:
 993              		.size	UART_WriteTxData, .-UART_WriteTxData
 994              		.section	.text.UART_ReadTxStatus,"ax",%progbits
 995              		.align	2
 996              		.global	UART_ReadTxStatus
 997              		.thumb
 998              		.thumb_func
 999              		.type	UART_ReadTxStatus, %function
 1000              	UART_ReadTxStatus:
 1001              	.LFB18:
 981:Generated_Source\PSoC5/UART.c **** 
 982:Generated_Source\PSoC5/UART.c **** 
 983:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadTxStatus
 985:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/UART.c ****     *
 987:Generated_Source\PSoC5/UART.c ****     * Summary:
 988:Generated_Source\PSoC5/UART.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/UART.c ****     *
 990:Generated_Source\PSoC5/UART.c ****     * Parameters:
 991:Generated_Source\PSoC5/UART.c ****     *  None.
 992:Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 36


 993:Generated_Source\PSoC5/UART.c ****     * Return:
 994:Generated_Source\PSoC5/UART.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/UART.c ****     *
 996:Generated_Source\PSoC5/UART.c ****     * Theory:
 997:Generated_Source\PSoC5/UART.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/UART.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/UART.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/UART.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/UART.c ****     *
1002:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/UART.c ****     {
 1002              		.loc 1 1004 0
 1003              		.cfi_startproc
 1004              		@ args = 0, pretend = 0, frame = 0
 1005              		@ frame_needed = 1, uses_anonymous_args = 0
 1006              		@ link register save eliminated.
 1007 0000 80B4     		push	{r7}
 1008              		.cfi_def_cfa_offset 4
 1009              		.cfi_offset 7, -4
 1010 0002 00AF     		add	r7, sp, #0
 1011              		.cfi_def_cfa_register 7
1005:Generated_Source\PSoC5/UART.c ****         return(UART_TXSTATUS_REG);
 1012              		.loc 1 1005 0
 1013 0004 034B     		ldr	r3, .L64
 1014 0006 1B78     		ldrb	r3, [r3]
 1015 0008 DBB2     		uxtb	r3, r3
1006:Generated_Source\PSoC5/UART.c ****     }
 1016              		.loc 1 1006 0
 1017 000a 1846     		mov	r0, r3
 1018 000c BD46     		mov	sp, r7
 1019              		.cfi_def_cfa_register 13
 1020              		@ sp needed
 1021 000e 80BC     		pop	{r7}
 1022              		.cfi_restore 7
 1023              		.cfi_def_cfa_offset 0
 1024 0010 7047     		bx	lr
 1025              	.L65:
 1026 0012 00BF     		.align	2
 1027              	.L64:
 1028 0014 64640040 		.word	1073767524
 1029              		.cfi_endproc
 1030              	.LFE18:
 1031              		.size	UART_ReadTxStatus, .-UART_ReadTxStatus
 1032              		.section	.text.UART_PutChar,"ax",%progbits
 1033              		.align	2
 1034              		.global	UART_PutChar
 1035              		.thumb
 1036              		.thumb_func
 1037              		.type	UART_PutChar, %function
 1038              	UART_PutChar:
 1039              	.LFB19:
1007:Generated_Source\PSoC5/UART.c **** 
1008:Generated_Source\PSoC5/UART.c **** 
1009:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutChar
1011:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 37


1012:Generated_Source\PSoC5/UART.c ****     *
1013:Generated_Source\PSoC5/UART.c ****     * Summary:
1014:Generated_Source\PSoC5/UART.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/UART.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/UART.c ****     *  hold the data.
1017:Generated_Source\PSoC5/UART.c ****     *
1018:Generated_Source\PSoC5/UART.c ****     * Parameters:
1019:Generated_Source\PSoC5/UART.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/UART.c ****     *
1021:Generated_Source\PSoC5/UART.c ****     * Return:
1022:Generated_Source\PSoC5/UART.c ****     *  None.
1023:Generated_Source\PSoC5/UART.c ****     *
1024:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1025:Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/UART.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/UART.c ****     *     initialized.
1033:Generated_Source\PSoC5/UART.c ****     *
1034:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1035:Generated_Source\PSoC5/UART.c ****     *  No.
1036:Generated_Source\PSoC5/UART.c ****     *
1037:Generated_Source\PSoC5/UART.c ****     * Theory:
1038:Generated_Source\PSoC5/UART.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/UART.c ****     *
1040:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/UART.c ****     void UART_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/UART.c ****     {
 1040              		.loc 1 1042 0
 1041              		.cfi_startproc
 1042              		@ args = 0, pretend = 0, frame = 16
 1043              		@ frame_needed = 1, uses_anonymous_args = 0
 1044              		@ link register save eliminated.
 1045 0000 80B4     		push	{r7}
 1046              		.cfi_def_cfa_offset 4
 1047              		.cfi_offset 7, -4
 1048 0002 85B0     		sub	sp, sp, #20
 1049              		.cfi_def_cfa_offset 24
 1050 0004 00AF     		add	r7, sp, #0
 1051              		.cfi_def_cfa_register 7
 1052 0006 0346     		mov	r3, r0
 1053 0008 FB71     		strb	r3, [r7, #7]
 1054              	.L69:
1043:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/UART.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/UART.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/UART.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/UART.c ****         */
1048:Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC5/UART.c **** 
1051:Generated_Source\PSoC5/UART.c ****         do
1052:Generated_Source\PSoC5/UART.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 38


1054:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/UART.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1057:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/UART.c **** 
1059:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite = UART_txBufferWrite;
 1055              		.loc 1 1059 0
 1056 000a 254B     		ldr	r3, .L74
 1057 000c 1B78     		ldrb	r3, [r3]
 1058 000e FB73     		strb	r3, [r7, #15]
1060:Generated_Source\PSoC5/UART.c ****             locTxBufferRead  = UART_txBufferRead;
 1059              		.loc 1 1060 0
 1060 0010 244B     		ldr	r3, .L74+4
 1061 0012 1B78     		ldrb	r3, [r3]
 1062 0014 BB73     		strb	r3, [r7, #14]
1061:Generated_Source\PSoC5/UART.c **** 
1062:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/UART.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1065:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/UART.c ****         }
1067:Generated_Source\PSoC5/UART.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
 1063              		.loc 1 1067 0
 1064 0016 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1065 0018 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1066 001a 9A42     		cmp	r2, r3
 1067 001c 08D2     		bcs	.L67
 1068              		.loc 1 1067 0 is_stmt 0 discriminator 1
 1069 001e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1070 0020 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1071 0022 013B     		subs	r3, r3, #1
 1072 0024 9A42     		cmp	r2, r3
 1073 0026 0CBF     		ite	eq
 1074 0028 0123     		moveq	r3, #1
 1075 002a 0023     		movne	r3, #0
 1076 002c DBB2     		uxtb	r3, r3
 1077 002e 07E0     		b	.L68
 1078              	.L67:
1068:Generated_Source\PSoC5/UART.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
 1079              		.loc 1 1068 0 is_stmt 1 discriminator 2
 1080 0030 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1081 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1082 0034 D31A     		subs	r3, r2, r3
1067:Generated_Source\PSoC5/UART.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
 1083              		.loc 1 1067 0 discriminator 2
 1084 0036 FE2B     		cmp	r3, #254
 1085 0038 0CBF     		ite	eq
 1086 003a 0123     		moveq	r3, #1
 1087 003c 0023     		movne	r3, #0
 1088 003e DBB2     		uxtb	r3, r3
 1089              	.L68:
1069:Generated_Source\PSoC5/UART.c ****                                 (uint8)(UART_TX_BUFFER_SIZE - 1u)) );
 1090              		.loc 1 1069 0
 1091 0040 002B     		cmp	r3, #0
 1092 0042 E2D1     		bne	.L69
1070:Generated_Source\PSoC5/UART.c **** 
1071:Generated_Source\PSoC5/UART.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 39


 1093              		.loc 1 1071 0
 1094 0044 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 1095 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1096 0048 9A42     		cmp	r2, r3
 1097 004a 0AD1     		bne	.L70
1072:Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 1098              		.loc 1 1072 0 discriminator 1
 1099 004c 164B     		ldr	r3, .L74+8
 1100 004e 1B78     		ldrb	r3, [r3]
 1101 0050 DBB2     		uxtb	r3, r3
 1102 0052 03F00403 		and	r3, r3, #4
1071:Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 1103              		.loc 1 1071 0 discriminator 1
 1104 0056 002B     		cmp	r3, #0
 1105 0058 03D1     		bne	.L70
1073:Generated_Source\PSoC5/UART.c ****         {
1074:Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
 1106              		.loc 1 1075 0
 1107 005a 144A     		ldr	r2, .L74+12
 1108 005c FB79     		ldrb	r3, [r7, #7]
 1109 005e 1370     		strb	r3, [r2]
1076:Generated_Source\PSoC5/UART.c ****         }
1077:Generated_Source\PSoC5/UART.c ****         else
1078:Generated_Source\PSoC5/UART.c ****         {
1079:Generated_Source\PSoC5/UART.c ****             if(locTxBufferWrite >= UART_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC5/UART.c ****             {
1081:Generated_Source\PSoC5/UART.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC5/UART.c ****             }
1083:Generated_Source\PSoC5/UART.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/UART.c ****             UART_txBuffer[locTxBufferWrite] = txDataByte;
1085:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC5/UART.c **** 
1087:Generated_Source\PSoC5/UART.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1090:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/UART.c **** 
1092:Generated_Source\PSoC5/UART.c ****             UART_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC5/UART.c **** 
1094:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1096:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/UART.c **** 
1098:Generated_Source\PSoC5/UART.c ****             if(0u != (UART_TXSTATUS_REG & UART_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC5/UART.c ****             {
1100:Generated_Source\PSoC5/UART.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/UART.c ****                 UART_SetPendingTxInt();
1102:Generated_Source\PSoC5/UART.c ****             }
1103:Generated_Source\PSoC5/UART.c ****         }
1104:Generated_Source\PSoC5/UART.c **** 
1105:Generated_Source\PSoC5/UART.c ****     #else
1106:Generated_Source\PSoC5/UART.c **** 
1107:Generated_Source\PSoC5/UART.c ****         while((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) != 0u)
1108:Generated_Source\PSoC5/UART.c ****         {
1109:Generated_Source\PSoC5/UART.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/UART.c ****         }
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 40


1111:Generated_Source\PSoC5/UART.c **** 
1112:Generated_Source\PSoC5/UART.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_REG = txDataByte;
1114:Generated_Source\PSoC5/UART.c **** 
1115:Generated_Source\PSoC5/UART.c ****     #endif /* UART_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/UART.c ****     }
 1110              		.loc 1 1116 0
 1111 0060 18E0     		b	.L73
 1112              	.L70:
1079:Generated_Source\PSoC5/UART.c ****             {
 1113              		.loc 1 1079 0
 1114 0062 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1115 0064 FF2B     		cmp	r3, #255
 1116 0066 01D1     		bne	.L72
1081:Generated_Source\PSoC5/UART.c ****             }
 1117              		.loc 1 1081 0
 1118 0068 0023     		movs	r3, #0
 1119 006a FB73     		strb	r3, [r7, #15]
 1120              	.L72:
1084:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
 1121              		.loc 1 1084 0
 1122 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1123 006e 1049     		ldr	r1, .L74+16
 1124 0070 FA79     		ldrb	r2, [r7, #7]
 1125 0072 CA54     		strb	r2, [r1, r3]
1085:Generated_Source\PSoC5/UART.c **** 
 1126              		.loc 1 1085 0
 1127 0074 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1128 0076 0133     		adds	r3, r3, #1
 1129 0078 FB73     		strb	r3, [r7, #15]
1092:Generated_Source\PSoC5/UART.c **** 
 1130              		.loc 1 1092 0
 1131 007a 094A     		ldr	r2, .L74
 1132 007c FB7B     		ldrb	r3, [r7, #15]
 1133 007e 1370     		strb	r3, [r2]
1098:Generated_Source\PSoC5/UART.c ****             {
 1134              		.loc 1 1098 0
 1135 0080 094B     		ldr	r3, .L74+8
 1136 0082 1B78     		ldrb	r3, [r3]
 1137 0084 DBB2     		uxtb	r3, r3
 1138 0086 03F00203 		and	r3, r3, #2
 1139 008a 002B     		cmp	r3, #0
 1140 008c 02D0     		beq	.L73
1101:Generated_Source\PSoC5/UART.c ****             }
 1141              		.loc 1 1101 0
 1142 008e 094B     		ldr	r3, .L74+20
 1143 0090 0122     		movs	r2, #1
 1144 0092 1A60     		str	r2, [r3]
 1145              	.L73:
 1146              		.loc 1 1116 0
 1147 0094 00BF     		nop
 1148 0096 1437     		adds	r7, r7, #20
 1149              		.cfi_def_cfa_offset 4
 1150 0098 BD46     		mov	sp, r7
 1151              		.cfi_def_cfa_register 13
 1152              		@ sp needed
 1153 009a 80BC     		pop	{r7}
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 41


 1154              		.cfi_restore 7
 1155              		.cfi_def_cfa_offset 0
 1156 009c 7047     		bx	lr
 1157              	.L75:
 1158 009e 00BF     		.align	2
 1159              	.L74:
 1160 00a0 00000000 		.word	UART_txBufferWrite
 1161 00a4 00000000 		.word	UART_txBufferRead
 1162 00a8 64640040 		.word	1073767524
 1163 00ac 47650040 		.word	1073767751
 1164 00b0 00000000 		.word	UART_txBuffer
 1165 00b4 00E200E0 		.word	-536813056
 1166              		.cfi_endproc
 1167              	.LFE19:
 1168              		.size	UART_PutChar, .-UART_PutChar
 1169              		.section	.text.UART_PutString,"ax",%progbits
 1170              		.align	2
 1171              		.global	UART_PutString
 1172              		.thumb
 1173              		.thumb_func
 1174              		.type	UART_PutString, %function
 1175              	UART_PutString:
 1176              	.LFB20:
1117:Generated_Source\PSoC5/UART.c **** 
1118:Generated_Source\PSoC5/UART.c **** 
1119:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutString
1121:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/UART.c ****     *
1123:Generated_Source\PSoC5/UART.c ****     * Summary:
1124:Generated_Source\PSoC5/UART.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/UART.c ****     *
1126:Generated_Source\PSoC5/UART.c ****     * Parameters:
1127:Generated_Source\PSoC5/UART.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/UART.c ****     *
1129:Generated_Source\PSoC5/UART.c ****     * Return:
1130:Generated_Source\PSoC5/UART.c ****     *  None.
1131:Generated_Source\PSoC5/UART.c ****     *
1132:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1133:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/UART.c ****     *     initialized.
1135:Generated_Source\PSoC5/UART.c ****     *
1136:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1137:Generated_Source\PSoC5/UART.c ****     *  No.
1138:Generated_Source\PSoC5/UART.c ****     *
1139:Generated_Source\PSoC5/UART.c ****     * Theory:
1140:Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/UART.c ****     *
1144:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/UART.c ****     void UART_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/UART.c ****     {
 1177              		.loc 1 1146 0
 1178              		.cfi_startproc
 1179              		@ args = 0, pretend = 0, frame = 16
 1180              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 42


 1181 0000 80B5     		push	{r7, lr}
 1182              		.cfi_def_cfa_offset 8
 1183              		.cfi_offset 7, -8
 1184              		.cfi_offset 14, -4
 1185 0002 84B0     		sub	sp, sp, #16
 1186              		.cfi_def_cfa_offset 24
 1187 0004 00AF     		add	r7, sp, #0
 1188              		.cfi_def_cfa_register 7
 1189 0006 7860     		str	r0, [r7, #4]
1147:Generated_Source\PSoC5/UART.c ****         uint16 bufIndex = 0u;
 1190              		.loc 1 1147 0
 1191 0008 0023     		movs	r3, #0
 1192 000a FB81     		strh	r3, [r7, #14]	@ movhi
1148:Generated_Source\PSoC5/UART.c **** 
1149:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 1193              		.loc 1 1150 0
 1194 000c 0C4B     		ldr	r3, .L81
 1195 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1196 0010 002B     		cmp	r3, #0
 1197 0012 10D0     		beq	.L80
1151:Generated_Source\PSoC5/UART.c ****         {
1152:Generated_Source\PSoC5/UART.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/UART.c ****             while(string[bufIndex] != (char8) 0)
 1198              		.loc 1 1153 0
 1199 0014 09E0     		b	.L78
 1200              	.L79:
1154:Generated_Source\PSoC5/UART.c ****             {
1155:Generated_Source\PSoC5/UART.c ****                 UART_PutChar((uint8)string[bufIndex]);
 1201              		.loc 1 1155 0
 1202 0016 FB89     		ldrh	r3, [r7, #14]
 1203 0018 7A68     		ldr	r2, [r7, #4]
 1204 001a 1344     		add	r3, r3, r2
 1205 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1206 001e 1846     		mov	r0, r3
 1207 0020 FFF7FEFF 		bl	UART_PutChar
1156:Generated_Source\PSoC5/UART.c ****                 bufIndex++;
 1208              		.loc 1 1156 0
 1209 0024 FB89     		ldrh	r3, [r7, #14]
 1210 0026 0133     		adds	r3, r3, #1
 1211 0028 FB81     		strh	r3, [r7, #14]	@ movhi
 1212              	.L78:
1153:Generated_Source\PSoC5/UART.c ****             {
 1213              		.loc 1 1153 0
 1214 002a FB89     		ldrh	r3, [r7, #14]
 1215 002c 7A68     		ldr	r2, [r7, #4]
 1216 002e 1344     		add	r3, r3, r2
 1217 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1218 0032 002B     		cmp	r3, #0
 1219 0034 EFD1     		bne	.L79
 1220              	.L80:
1157:Generated_Source\PSoC5/UART.c ****             }
1158:Generated_Source\PSoC5/UART.c ****         }
1159:Generated_Source\PSoC5/UART.c ****     }
 1221              		.loc 1 1159 0
 1222 0036 00BF     		nop
 1223 0038 1037     		adds	r7, r7, #16
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 43


 1224              		.cfi_def_cfa_offset 8
 1225 003a BD46     		mov	sp, r7
 1226              		.cfi_def_cfa_register 13
 1227              		@ sp needed
 1228 003c 80BD     		pop	{r7, pc}
 1229              	.L82:
 1230 003e 00BF     		.align	2
 1231              	.L81:
 1232 0040 00000000 		.word	UART_initVar
 1233              		.cfi_endproc
 1234              	.LFE20:
 1235              		.size	UART_PutString, .-UART_PutString
 1236              		.section	.text.UART_PutArray,"ax",%progbits
 1237              		.align	2
 1238              		.global	UART_PutArray
 1239              		.thumb
 1240              		.thumb_func
 1241              		.type	UART_PutArray, %function
 1242              	UART_PutArray:
 1243              	.LFB21:
1160:Generated_Source\PSoC5/UART.c **** 
1161:Generated_Source\PSoC5/UART.c **** 
1162:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutArray
1164:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/UART.c ****     *
1166:Generated_Source\PSoC5/UART.c ****     * Summary:
1167:Generated_Source\PSoC5/UART.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/UART.c ****     *  transmission.
1169:Generated_Source\PSoC5/UART.c ****     *
1170:Generated_Source\PSoC5/UART.c ****     * Parameters:
1171:Generated_Source\PSoC5/UART.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/UART.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/UART.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/UART.c ****     *
1175:Generated_Source\PSoC5/UART.c ****     * Return:
1176:Generated_Source\PSoC5/UART.c ****     *  None.
1177:Generated_Source\PSoC5/UART.c ****     *
1178:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1179:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/UART.c ****     *     initialized.
1181:Generated_Source\PSoC5/UART.c ****     *
1182:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1183:Generated_Source\PSoC5/UART.c ****     *  No.
1184:Generated_Source\PSoC5/UART.c ****     *
1185:Generated_Source\PSoC5/UART.c ****     * Theory:
1186:Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/UART.c ****     *
1190:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/UART.c ****     void UART_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC5/UART.c ****                                                                     
1193:Generated_Source\PSoC5/UART.c ****     {
 1244              		.loc 1 1193 0
 1245              		.cfi_startproc
 1246              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 44


 1247              		@ frame_needed = 1, uses_anonymous_args = 0
 1248 0000 80B5     		push	{r7, lr}
 1249              		.cfi_def_cfa_offset 8
 1250              		.cfi_offset 7, -8
 1251              		.cfi_offset 14, -4
 1252 0002 84B0     		sub	sp, sp, #16
 1253              		.cfi_def_cfa_offset 24
 1254 0004 00AF     		add	r7, sp, #0
 1255              		.cfi_def_cfa_register 7
 1256 0006 7860     		str	r0, [r7, #4]
 1257 0008 0B46     		mov	r3, r1
 1258 000a FB70     		strb	r3, [r7, #3]
1194:Generated_Source\PSoC5/UART.c ****         uint8 bufIndex = 0u;
 1259              		.loc 1 1194 0
 1260 000c 0023     		movs	r3, #0
 1261 000e FB73     		strb	r3, [r7, #15]
1195:Generated_Source\PSoC5/UART.c **** 
1196:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 1262              		.loc 1 1197 0
 1263 0010 0B4B     		ldr	r3, .L88
 1264 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1265 0014 002B     		cmp	r3, #0
 1266 0016 0ED0     		beq	.L87
1198:Generated_Source\PSoC5/UART.c ****         {
1199:Generated_Source\PSoC5/UART.c ****             while(bufIndex < byteCount)
 1267              		.loc 1 1199 0
 1268 0018 09E0     		b	.L85
 1269              	.L86:
1200:Generated_Source\PSoC5/UART.c ****             {
1201:Generated_Source\PSoC5/UART.c ****                 UART_PutChar(string[bufIndex]);
 1270              		.loc 1 1201 0
 1271 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1272 001c 7A68     		ldr	r2, [r7, #4]
 1273 001e 1344     		add	r3, r3, r2
 1274 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1275 0022 1846     		mov	r0, r3
 1276 0024 FFF7FEFF 		bl	UART_PutChar
1202:Generated_Source\PSoC5/UART.c ****                 bufIndex++;
 1277              		.loc 1 1202 0
 1278 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1279 002a 0133     		adds	r3, r3, #1
 1280 002c FB73     		strb	r3, [r7, #15]
 1281              	.L85:
1199:Generated_Source\PSoC5/UART.c ****             {
 1282              		.loc 1 1199 0
 1283 002e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1284 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1285 0032 9A42     		cmp	r2, r3
 1286 0034 F1D3     		bcc	.L86
 1287              	.L87:
1203:Generated_Source\PSoC5/UART.c ****             }
1204:Generated_Source\PSoC5/UART.c ****         }
1205:Generated_Source\PSoC5/UART.c ****     }
 1288              		.loc 1 1205 0
 1289 0036 00BF     		nop
 1290 0038 1037     		adds	r7, r7, #16
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 45


 1291              		.cfi_def_cfa_offset 8
 1292 003a BD46     		mov	sp, r7
 1293              		.cfi_def_cfa_register 13
 1294              		@ sp needed
 1295 003c 80BD     		pop	{r7, pc}
 1296              	.L89:
 1297 003e 00BF     		.align	2
 1298              	.L88:
 1299 0040 00000000 		.word	UART_initVar
 1300              		.cfi_endproc
 1301              	.LFE21:
 1302              		.size	UART_PutArray, .-UART_PutArray
 1303              		.section	.text.UART_PutCRLF,"ax",%progbits
 1304              		.align	2
 1305              		.global	UART_PutCRLF
 1306              		.thumb
 1307              		.thumb_func
 1308              		.type	UART_PutCRLF, %function
 1309              	UART_PutCRLF:
 1310              	.LFB22:
1206:Generated_Source\PSoC5/UART.c **** 
1207:Generated_Source\PSoC5/UART.c **** 
1208:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutCRLF
1210:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/UART.c ****     *
1212:Generated_Source\PSoC5/UART.c ****     * Summary:
1213:Generated_Source\PSoC5/UART.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/UART.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/UART.c ****     *
1216:Generated_Source\PSoC5/UART.c ****     * Parameters:
1217:Generated_Source\PSoC5/UART.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/UART.c ****     *
1219:Generated_Source\PSoC5/UART.c ****     * Return:
1220:Generated_Source\PSoC5/UART.c ****     *  None.
1221:Generated_Source\PSoC5/UART.c ****     *
1222:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1223:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/UART.c ****     *     initialized.
1225:Generated_Source\PSoC5/UART.c ****     *
1226:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1227:Generated_Source\PSoC5/UART.c ****     *  No.
1228:Generated_Source\PSoC5/UART.c ****     *
1229:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/UART.c ****     void UART_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/UART.c ****     {
 1311              		.loc 1 1231 0
 1312              		.cfi_startproc
 1313              		@ args = 0, pretend = 0, frame = 8
 1314              		@ frame_needed = 1, uses_anonymous_args = 0
 1315 0000 80B5     		push	{r7, lr}
 1316              		.cfi_def_cfa_offset 8
 1317              		.cfi_offset 7, -8
 1318              		.cfi_offset 14, -4
 1319 0002 82B0     		sub	sp, sp, #8
 1320              		.cfi_def_cfa_offset 16
 1321 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 46


 1322              		.cfi_def_cfa_register 7
 1323 0006 0346     		mov	r3, r0
 1324 0008 FB71     		strb	r3, [r7, #7]
1232:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 1325              		.loc 1 1233 0
 1326 000a 094B     		ldr	r3, .L93
 1327 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1328 000e 002B     		cmp	r3, #0
 1329 0010 09D0     		beq	.L92
1234:Generated_Source\PSoC5/UART.c ****         {
1235:Generated_Source\PSoC5/UART.c ****             UART_PutChar(txDataByte);
 1330              		.loc 1 1235 0
 1331 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1332 0014 1846     		mov	r0, r3
 1333 0016 FFF7FEFF 		bl	UART_PutChar
1236:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Du);
 1334              		.loc 1 1236 0
 1335 001a 0D20     		movs	r0, #13
 1336 001c FFF7FEFF 		bl	UART_PutChar
1237:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Au);
 1337              		.loc 1 1237 0
 1338 0020 0A20     		movs	r0, #10
 1339 0022 FFF7FEFF 		bl	UART_PutChar
 1340              	.L92:
1238:Generated_Source\PSoC5/UART.c ****         }
1239:Generated_Source\PSoC5/UART.c ****     }
 1341              		.loc 1 1239 0
 1342 0026 00BF     		nop
 1343 0028 0837     		adds	r7, r7, #8
 1344              		.cfi_def_cfa_offset 8
 1345 002a BD46     		mov	sp, r7
 1346              		.cfi_def_cfa_register 13
 1347              		@ sp needed
 1348 002c 80BD     		pop	{r7, pc}
 1349              	.L94:
 1350 002e 00BF     		.align	2
 1351              	.L93:
 1352 0030 00000000 		.word	UART_initVar
 1353              		.cfi_endproc
 1354              	.LFE22:
 1355              		.size	UART_PutCRLF, .-UART_PutCRLF
 1356              		.section	.text.UART_GetTxBufferSize,"ax",%progbits
 1357              		.align	2
 1358              		.global	UART_GetTxBufferSize
 1359              		.thumb
 1360              		.thumb_func
 1361              		.type	UART_GetTxBufferSize, %function
 1362              	UART_GetTxBufferSize:
 1363              	.LFB23:
1240:Generated_Source\PSoC5/UART.c **** 
1241:Generated_Source\PSoC5/UART.c **** 
1242:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetTxBufferSize
1244:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/UART.c ****     *
1246:Generated_Source\PSoC5/UART.c ****     * Summary:
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 47


1247:Generated_Source\PSoC5/UART.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/UART.c ****     *  transmitted.
1249:Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/UART.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/UART.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/UART.c ****     *
1255:Generated_Source\PSoC5/UART.c ****     * Parameters:
1256:Generated_Source\PSoC5/UART.c ****     *  None.
1257:Generated_Source\PSoC5/UART.c ****     *
1258:Generated_Source\PSoC5/UART.c ****     * Return:
1259:Generated_Source\PSoC5/UART.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/UART.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/UART.c ****     *
1262:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1263:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/UART.c ****     *
1266:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1267:Generated_Source\PSoC5/UART.c ****     *  No.
1268:Generated_Source\PSoC5/UART.c ****     *
1269:Generated_Source\PSoC5/UART.c ****     * Theory:
1270:Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/UART.c ****     *
1272:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/UART.c ****                                                             
1275:Generated_Source\PSoC5/UART.c ****     {
 1364              		.loc 1 1275 0
 1365              		.cfi_startproc
 1366              		@ args = 0, pretend = 0, frame = 8
 1367              		@ frame_needed = 1, uses_anonymous_args = 0
 1368              		@ link register save eliminated.
 1369 0000 80B4     		push	{r7}
 1370              		.cfi_def_cfa_offset 4
 1371              		.cfi_offset 7, -4
 1372 0002 83B0     		sub	sp, sp, #12
 1373              		.cfi_def_cfa_offset 16
 1374 0004 00AF     		add	r7, sp, #0
 1375              		.cfi_def_cfa_register 7
1276:Generated_Source\PSoC5/UART.c ****         uint8 size;
1277:Generated_Source\PSoC5/UART.c **** 
1278:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/UART.c **** 
1280:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
 1376              		.loc 1 1281 0
 1377 0006 174B     		ldr	r3, .L100
 1378 0008 0122     		movs	r2, #1
 1379 000a 1A60     		str	r2, [r3]
1282:Generated_Source\PSoC5/UART.c **** 
1283:Generated_Source\PSoC5/UART.c ****         if(UART_txBufferRead == UART_txBufferWrite)
 1380              		.loc 1 1283 0
 1381 000c 164B     		ldr	r3, .L100+4
 1382 000e 1B78     		ldrb	r3, [r3]
 1383 0010 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 48


 1384 0012 164B     		ldr	r3, .L100+8
 1385 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1386 0016 9A42     		cmp	r2, r3
 1387 0018 02D1     		bne	.L96
1284:Generated_Source\PSoC5/UART.c ****         {
1285:Generated_Source\PSoC5/UART.c ****             size = 0u;
 1388              		.loc 1 1285 0
 1389 001a 0023     		movs	r3, #0
 1390 001c FB71     		strb	r3, [r7, #7]
 1391 001e 17E0     		b	.L97
 1392              	.L96:
1286:Generated_Source\PSoC5/UART.c ****         }
1287:Generated_Source\PSoC5/UART.c ****         else if(UART_txBufferRead < UART_txBufferWrite)
 1393              		.loc 1 1287 0
 1394 0020 114B     		ldr	r3, .L100+4
 1395 0022 1B78     		ldrb	r3, [r3]
 1396 0024 DAB2     		uxtb	r2, r3
 1397 0026 114B     		ldr	r3, .L100+8
 1398 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1399 002a 9A42     		cmp	r2, r3
 1400 002c 07D2     		bcs	.L98
1288:Generated_Source\PSoC5/UART.c ****         {
1289:Generated_Source\PSoC5/UART.c ****             size = (UART_txBufferWrite - UART_txBufferRead);
 1401              		.loc 1 1289 0
 1402 002e 0F4B     		ldr	r3, .L100+8
 1403 0030 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1404 0032 0D4B     		ldr	r3, .L100+4
 1405 0034 1B78     		ldrb	r3, [r3]
 1406 0036 DBB2     		uxtb	r3, r3
 1407 0038 D31A     		subs	r3, r2, r3
 1408 003a FB71     		strb	r3, [r7, #7]
 1409 003c 08E0     		b	.L97
 1410              	.L98:
1290:Generated_Source\PSoC5/UART.c ****         }
1291:Generated_Source\PSoC5/UART.c ****         else
1292:Generated_Source\PSoC5/UART.c ****         {
1293:Generated_Source\PSoC5/UART.c ****             size = (UART_TX_BUFFER_SIZE - UART_txBufferRead) +
 1411              		.loc 1 1293 0
 1412 003e 0B4B     		ldr	r3, .L100+8
 1413 0040 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1414 0042 094B     		ldr	r3, .L100+4
 1415 0044 1B78     		ldrb	r3, [r3]
 1416 0046 DBB2     		uxtb	r3, r3
 1417 0048 D31A     		subs	r3, r2, r3
 1418 004a DBB2     		uxtb	r3, r3
 1419 004c 013B     		subs	r3, r3, #1
 1420 004e FB71     		strb	r3, [r7, #7]
 1421              	.L97:
1294:Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite;
1295:Generated_Source\PSoC5/UART.c ****         }
1296:Generated_Source\PSoC5/UART.c **** 
1297:Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
 1422              		.loc 1 1297 0
 1423 0050 074B     		ldr	r3, .L100+12
 1424 0052 0122     		movs	r2, #1
 1425 0054 1A60     		str	r2, [r3]
1298:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 49


1299:Generated_Source\PSoC5/UART.c ****     #else
1300:Generated_Source\PSoC5/UART.c **** 
1301:Generated_Source\PSoC5/UART.c ****         size = UART_TXSTATUS_REG;
1302:Generated_Source\PSoC5/UART.c **** 
1303:Generated_Source\PSoC5/UART.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/UART.c ****         if((size & UART_TX_STS_FIFO_FULL) != 0u)
1305:Generated_Source\PSoC5/UART.c ****         {
1306:Generated_Source\PSoC5/UART.c ****             size = UART_FIFO_LENGTH;
1307:Generated_Source\PSoC5/UART.c ****         }
1308:Generated_Source\PSoC5/UART.c ****         else if((size & UART_TX_STS_FIFO_EMPTY) != 0u)
1309:Generated_Source\PSoC5/UART.c ****         {
1310:Generated_Source\PSoC5/UART.c ****             size = 0u;
1311:Generated_Source\PSoC5/UART.c ****         }
1312:Generated_Source\PSoC5/UART.c ****         else
1313:Generated_Source\PSoC5/UART.c ****         {
1314:Generated_Source\PSoC5/UART.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/UART.c ****             size = 1u;
1316:Generated_Source\PSoC5/UART.c ****         }
1317:Generated_Source\PSoC5/UART.c **** 
1318:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/UART.c **** 
1320:Generated_Source\PSoC5/UART.c ****     return(size);
 1426              		.loc 1 1320 0
 1427 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1321:Generated_Source\PSoC5/UART.c ****     }
 1428              		.loc 1 1321 0
 1429 0058 1846     		mov	r0, r3
 1430 005a 0C37     		adds	r7, r7, #12
 1431              		.cfi_def_cfa_offset 4
 1432 005c BD46     		mov	sp, r7
 1433              		.cfi_def_cfa_register 13
 1434              		@ sp needed
 1435 005e 80BC     		pop	{r7}
 1436              		.cfi_restore 7
 1437              		.cfi_def_cfa_offset 0
 1438 0060 7047     		bx	lr
 1439              	.L101:
 1440 0062 00BF     		.align	2
 1441              	.L100:
 1442 0064 80E100E0 		.word	-536813184
 1443 0068 00000000 		.word	UART_txBufferRead
 1444 006c 00000000 		.word	UART_txBufferWrite
 1445 0070 00E100E0 		.word	-536813312
 1446              		.cfi_endproc
 1447              	.LFE23:
 1448              		.size	UART_GetTxBufferSize, .-UART_GetTxBufferSize
 1449              		.section	.text.UART_ClearTxBuffer,"ax",%progbits
 1450              		.align	2
 1451              		.global	UART_ClearTxBuffer
 1452              		.thumb
 1453              		.thumb_func
 1454              		.type	UART_ClearTxBuffer, %function
 1455              	UART_ClearTxBuffer:
 1456              	.LFB24:
1322:Generated_Source\PSoC5/UART.c **** 
1323:Generated_Source\PSoC5/UART.c **** 
1324:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 50


1325:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearTxBuffer
1326:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/UART.c ****     *
1328:Generated_Source\PSoC5/UART.c ****     * Summary:
1329:Generated_Source\PSoC5/UART.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/UART.c ****     *
1331:Generated_Source\PSoC5/UART.c ****     * Parameters:
1332:Generated_Source\PSoC5/UART.c ****     *  None.
1333:Generated_Source\PSoC5/UART.c ****     *
1334:Generated_Source\PSoC5/UART.c ****     * Return:
1335:Generated_Source\PSoC5/UART.c ****     *  None.
1336:Generated_Source\PSoC5/UART.c ****     *
1337:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1338:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/UART.c ****     *
1341:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1342:Generated_Source\PSoC5/UART.c ****     *  No.
1343:Generated_Source\PSoC5/UART.c ****     *
1344:Generated_Source\PSoC5/UART.c ****     * Theory:
1345:Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/UART.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/UART.c ****     *
1349:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1350:Generated_Source\PSoC5/UART.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/UART.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/UART.c ****     *
1353:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/UART.c ****     void UART_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/UART.c ****     {
 1457              		.loc 1 1355 0
 1458              		.cfi_startproc
 1459              		@ args = 0, pretend = 0, frame = 8
 1460              		@ frame_needed = 1, uses_anonymous_args = 0
 1461 0000 80B5     		push	{r7, lr}
 1462              		.cfi_def_cfa_offset 8
 1463              		.cfi_offset 7, -8
 1464              		.cfi_offset 14, -4
 1465 0002 82B0     		sub	sp, sp, #8
 1466              		.cfi_def_cfa_offset 16
 1467 0004 00AF     		add	r7, sp, #0
 1468              		.cfi_def_cfa_register 7
1356:Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/UART.c **** 
1358:Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 1469              		.loc 1 1358 0
 1470 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1471 000a 0346     		mov	r3, r0
 1472 000c FB71     		strb	r3, [r7, #7]
1359:Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG |= (uint8)  UART_TX_FIFO_CLR;
 1473              		.loc 1 1360 0
 1474 000e 124A     		ldr	r2, .L103
 1475 0010 114B     		ldr	r3, .L103
 1476 0012 1B78     		ldrb	r3, [r3]
 1477 0014 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 51


 1478 0016 43F00103 		orr	r3, r3, #1
 1479 001a DBB2     		uxtb	r3, r3
 1480 001c 1370     		strb	r3, [r2]
1361:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG &= (uint8) ~UART_TX_FIFO_CLR;
 1481              		.loc 1 1361 0
 1482 001e 0E4A     		ldr	r2, .L103
 1483 0020 0D4B     		ldr	r3, .L103
 1484 0022 1B78     		ldrb	r3, [r3]
 1485 0024 DBB2     		uxtb	r3, r3
 1486 0026 23F00103 		bic	r3, r3, #1
 1487 002a DBB2     		uxtb	r3, r3
 1488 002c 1370     		strb	r3, [r2]
1362:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 1489              		.loc 1 1362 0
 1490 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1491 0030 1846     		mov	r0, r3
 1492 0032 FFF7FEFF 		bl	CyExitCriticalSection
1363:Generated_Source\PSoC5/UART.c **** 
1364:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/UART.c **** 
1366:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
 1493              		.loc 1 1367 0
 1494 0036 094B     		ldr	r3, .L103+4
 1495 0038 0122     		movs	r2, #1
 1496 003a 1A60     		str	r2, [r3]
1368:Generated_Source\PSoC5/UART.c **** 
1369:Generated_Source\PSoC5/UART.c ****         UART_txBufferRead = 0u;
 1497              		.loc 1 1369 0
 1498 003c 084B     		ldr	r3, .L103+8
 1499 003e 0022     		movs	r2, #0
 1500 0040 1A70     		strb	r2, [r3]
1370:Generated_Source\PSoC5/UART.c ****         UART_txBufferWrite = 0u;
 1501              		.loc 1 1370 0
 1502 0042 084B     		ldr	r3, .L103+12
 1503 0044 0022     		movs	r2, #0
 1504 0046 1A70     		strb	r2, [r3]
1371:Generated_Source\PSoC5/UART.c **** 
1372:Generated_Source\PSoC5/UART.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
 1505              		.loc 1 1373 0
 1506 0048 074B     		ldr	r3, .L103+16
 1507 004a 0122     		movs	r2, #1
 1508 004c 1A60     		str	r2, [r3]
1374:Generated_Source\PSoC5/UART.c **** 
1375:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/UART.c ****     }
 1509              		.loc 1 1376 0
 1510 004e 00BF     		nop
 1511 0050 0837     		adds	r7, r7, #8
 1512              		.cfi_def_cfa_offset 8
 1513 0052 BD46     		mov	sp, r7
 1514              		.cfi_def_cfa_register 13
 1515              		@ sp needed
 1516 0054 80BD     		pop	{r7, pc}
 1517              	.L104:
 1518 0056 00BF     		.align	2
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 52


 1519              	.L103:
 1520 0058 97650040 		.word	1073767831
 1521 005c 80E100E0 		.word	-536813184
 1522 0060 00000000 		.word	UART_txBufferRead
 1523 0064 00000000 		.word	UART_txBufferWrite
 1524 0068 00E100E0 		.word	-536813312
 1525              		.cfi_endproc
 1526              	.LFE24:
 1527              		.size	UART_ClearTxBuffer, .-UART_ClearTxBuffer
 1528              		.section	.text.UART_SendBreak,"ax",%progbits
 1529              		.align	2
 1530              		.global	UART_SendBreak
 1531              		.thumb
 1532              		.thumb_func
 1533              		.type	UART_SendBreak, %function
 1534              	UART_SendBreak:
 1535              	.LFB25:
1377:Generated_Source\PSoC5/UART.c **** 
1378:Generated_Source\PSoC5/UART.c **** 
1379:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SendBreak
1381:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/UART.c ****     *
1383:Generated_Source\PSoC5/UART.c ****     * Summary:
1384:Generated_Source\PSoC5/UART.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/UART.c ****     *
1386:Generated_Source\PSoC5/UART.c ****     * Parameters:
1387:Generated_Source\PSoC5/UART.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/UART.c ****     *   UART_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/UART.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/UART.c ****     *   UART_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/UART.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/UART.c ****     *   UART_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/UART.c ****     *       then return.
1394:Generated_Source\PSoC5/UART.c ****     *   UART_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/UART.c ****     *      UART_SEND_BREAK and UART_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/UART.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/UART.c ****     *
1398:Generated_Source\PSoC5/UART.c ****     * Return:
1399:Generated_Source\PSoC5/UART.c ****     *  None.
1400:Generated_Source\PSoC5/UART.c ****     *
1401:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1402:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/UART.c ****     *     initialized.
1404:Generated_Source\PSoC5/UART.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/UART.c ****     *
1406:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1407:Generated_Source\PSoC5/UART.c ****     *  No.
1408:Generated_Source\PSoC5/UART.c ****     *
1409:Generated_Source\PSoC5/UART.c ****     * Theory:
1410:Generated_Source\PSoC5/UART.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/UART.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/UART.c ****     *  operation.
1413:Generated_Source\PSoC5/UART.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC5/UART.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/UART.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/UART.c ****     *     complete.
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 53


1417:Generated_Source\PSoC5/UART.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/UART.c ****     *     operation
1419:Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/UART.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/UART.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/UART.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/UART.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/UART.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/UART.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/UART.c ****     *
1432:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1433:Generated_Source\PSoC5/UART.c ****     *  The UART_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/UART.c ****     *  break signal.
1435:Generated_Source\PSoC5/UART.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/UART.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/UART.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/UART.c ****     *
1439:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/UART.c ****     void UART_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/UART.c ****     {
 1536              		.loc 1 1441 0
 1537              		.cfi_startproc
 1538              		@ args = 0, pretend = 0, frame = 16
 1539              		@ frame_needed = 1, uses_anonymous_args = 0
 1540              		@ link register save eliminated.
 1541 0000 80B4     		push	{r7}
 1542              		.cfi_def_cfa_offset 4
 1543              		.cfi_offset 7, -4
 1544 0002 85B0     		sub	sp, sp, #20
 1545              		.cfi_def_cfa_offset 24
 1546 0004 00AF     		add	r7, sp, #0
 1547              		.cfi_def_cfa_register 7
 1548 0006 0346     		mov	r3, r0
 1549 0008 FB71     		strb	r3, [r7, #7]
1442:Generated_Source\PSoC5/UART.c **** 
1443:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 1550              		.loc 1 1444 0
 1551 000a 1F4B     		ldr	r3, .L114
 1552 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1553 000e 002B     		cmp	r3, #0
 1554 0010 35D0     		beq	.L113
 1555              	.LBB2:
1445:Generated_Source\PSoC5/UART.c ****         {
1446:Generated_Source\PSoC5/UART.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/UART.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/UART.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/UART.c **** 
1450:Generated_Source\PSoC5/UART.c ****         #if(UART_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/UART.c **** 
1452:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
1453:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT ) )
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 54


1454:Generated_Source\PSoC5/UART.c ****             {
1455:Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() |
1457:Generated_Source\PSoC5/UART.c ****                                                       UART_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
1460:Generated_Source\PSoC5/UART.c **** 
1461:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/UART.c ****                 {
1463:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1464:Generated_Source\PSoC5/UART.c ****                 }
1465:Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/UART.c ****             }
1467:Generated_Source\PSoC5/UART.c **** 
1468:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/UART.c ****             {
1471:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/UART.c ****                 {
1473:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1474:Generated_Source\PSoC5/UART.c ****                 }
1475:Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/UART.c ****             }
1477:Generated_Source\PSoC5/UART.c **** 
1478:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
1480:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/UART.c ****             {
1482:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1483:Generated_Source\PSoC5/UART.c ****                                               (uint8)~UART_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/UART.c ****             }
1485:Generated_Source\PSoC5/UART.c **** 
1486:Generated_Source\PSoC5/UART.c ****         #else /* UART_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC5/UART.c **** 
1488:Generated_Source\PSoC5/UART.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/UART.c **** 
1490:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
 1556              		.loc 1 1490 0
 1557 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1558 0014 002B     		cmp	r3, #0
 1559 0016 02D0     		beq	.L107
 1560              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1561 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1562 001a 032B     		cmp	r3, #3
 1563 001c 12D1     		bne	.L108
 1564              	.L107:
1491:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/UART.c ****             {
1493:Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/UART.c ****                 #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/UART.c ****                                     (UART_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/UART.c ****                     UART_WriteControlRegister(UART_ReadControlRegister() |
1497:Generated_Source\PSoC5/UART.c ****                                                           UART_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_PARITY_TYPE != UART__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/UART.c **** 
1500:Generated_Source\PSoC5/UART.c ****                 #if(UART_TXCLKGEN_DP)
1501:Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCLKTX_COMPLETE_REG;
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 55


 1565              		.loc 1 1501 0 is_stmt 1
 1566 001e 1B4B     		ldr	r3, .L114+4
 1567 0020 1B78     		ldrb	r3, [r3]
 1568 0022 DAB2     		uxtb	r2, r3
 1569 0024 1A4B     		ldr	r3, .L114+8
 1570 0026 1A70     		strb	r2, [r3]
1502:Generated_Source\PSoC5/UART.c ****                     UART_TXBITCLKTX_COMPLETE_REG = UART_TXBITCTR_BREAKBITS;
 1571              		.loc 1 1502 0
 1572 0028 184B     		ldr	r3, .L114+4
 1573 002a 6722     		movs	r2, #103
 1574 002c 1A70     		strb	r2, [r3]
1503:Generated_Source\PSoC5/UART.c ****                 #else
1504:Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/UART.c ****                     UART_TXBITCTR_PERIOD_REG = UART_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/UART.c **** 
1508:Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
 1575              		.loc 1 1509 0
 1576 002e 194B     		ldr	r3, .L114+12
 1577 0030 0022     		movs	r2, #0
 1578 0032 1A70     		strb	r2, [r3]
 1579              	.L109:
1510:Generated_Source\PSoC5/UART.c **** 
1511:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/UART.c ****                 {
1513:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 1580              		.loc 1 1513 0 discriminator 1
 1581 0034 184B     		ldr	r3, .L114+16
 1582 0036 1B78     		ldrb	r3, [r3]
 1583 0038 FB73     		strb	r3, [r7, #15]
1514:Generated_Source\PSoC5/UART.c ****                 }
1515:Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
 1584              		.loc 1 1515 0 discriminator 1
 1585 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1586 003c 03F00203 		and	r3, r3, #2
 1587 0040 002B     		cmp	r3, #0
 1588 0042 F7D1     		bne	.L109
 1589              	.L108:
1516:Generated_Source\PSoC5/UART.c ****             }
1517:Generated_Source\PSoC5/UART.c **** 
1518:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 1590              		.loc 1 1518 0
 1591 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1592 0046 012B     		cmp	r3, #1
 1593 0048 02D0     		beq	.L110
 1594              		.loc 1 1518 0 is_stmt 0 discriminator 1
 1595 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1596 004c 032B     		cmp	r3, #3
 1597 004e 09D1     		bne	.L111
 1598              	.L110:
1519:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/UART.c ****             {
1521:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/UART.c ****                 {
1523:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 1599              		.loc 1 1523 0 is_stmt 1 discriminator 1
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 56


 1600 0050 114B     		ldr	r3, .L114+16
 1601 0052 1B78     		ldrb	r3, [r3]
 1602 0054 FB73     		strb	r3, [r7, #15]
1524:Generated_Source\PSoC5/UART.c ****                 }
1525:Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
 1603              		.loc 1 1525 0 discriminator 1
 1604 0056 FB7B     		ldrb	r3, [r7, #15]
 1605 0058 DB43     		mvns	r3, r3
 1606 005a DBB2     		uxtb	r3, r3
 1607 005c 03F00103 		and	r3, r3, #1
 1608 0060 002B     		cmp	r3, #0
 1609 0062 F5D1     		bne	.L110
 1610              	.L111:
1526:Generated_Source\PSoC5/UART.c ****             }
1527:Generated_Source\PSoC5/UART.c **** 
1528:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 1611              		.loc 1 1528 0
 1612 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1613 0066 012B     		cmp	r3, #1
 1614 0068 05D0     		beq	.L112
 1615              		.loc 1 1528 0 is_stmt 0 discriminator 1
 1616 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1617 006c 022B     		cmp	r3, #2
 1618 006e 02D0     		beq	.L112
1529:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
 1619              		.loc 1 1529 0 is_stmt 1
 1620 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1621 0072 032B     		cmp	r3, #3
 1622 0074 03D1     		bne	.L113
 1623              	.L112:
1530:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/UART.c ****             {
1532:Generated_Source\PSoC5/UART.c **** 
1533:Generated_Source\PSoC5/UART.c ****             #if(UART_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/UART.c ****                 UART_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1624              		.loc 1 1534 0
 1625 0076 054B     		ldr	r3, .L114+4
 1626 0078 054A     		ldr	r2, .L114+8
 1627 007a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1628 007c 1A70     		strb	r2, [r3]
 1629              	.L113:
 1630              	.LBE2:
1535:Generated_Source\PSoC5/UART.c ****             #else
1536:Generated_Source\PSoC5/UART.c ****                 UART_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/UART.c **** 
1539:Generated_Source\PSoC5/UART.c ****             #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/UART.c ****                  (UART_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1542:Generated_Source\PSoC5/UART.c ****                                                       (uint8) ~UART_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/UART.c ****             }
1545:Generated_Source\PSoC5/UART.c ****         #endif    /* End UART_HD_ENABLED */
1546:Generated_Source\PSoC5/UART.c ****         }
1547:Generated_Source\PSoC5/UART.c ****     }
 1631              		.loc 1 1547 0
 1632 007e 00BF     		nop
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 57


 1633 0080 1437     		adds	r7, r7, #20
 1634              		.cfi_def_cfa_offset 4
 1635 0082 BD46     		mov	sp, r7
 1636              		.cfi_def_cfa_register 13
 1637              		@ sp needed
 1638 0084 80BC     		pop	{r7}
 1639              		.cfi_restore 7
 1640              		.cfi_def_cfa_offset 0
 1641 0086 7047     		bx	lr
 1642              	.L115:
 1643              		.align	2
 1644              	.L114:
 1645 0088 00000000 		.word	UART_initVar
 1646 008c 38640040 		.word	1073767480
 1647 0090 03000000 		.word	txPeriod.5161
 1648 0094 47650040 		.word	1073767751
 1649 0098 64640040 		.word	1073767524
 1650              		.cfi_endproc
 1651              	.LFE25:
 1652              		.size	UART_SendBreak, .-UART_SendBreak
 1653              		.section	.text.UART_SetTxAddressMode,"ax",%progbits
 1654              		.align	2
 1655              		.global	UART_SetTxAddressMode
 1656              		.thumb
 1657              		.thumb_func
 1658              		.type	UART_SetTxAddressMode, %function
 1659              	UART_SetTxAddressMode:
 1660              	.LFB26:
1548:Generated_Source\PSoC5/UART.c **** 
1549:Generated_Source\PSoC5/UART.c **** 
1550:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxAddressMode
1552:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/UART.c ****     *
1554:Generated_Source\PSoC5/UART.c ****     * Summary:
1555:Generated_Source\PSoC5/UART.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/UART.c ****     *
1557:Generated_Source\PSoC5/UART.c ****     * Parameters:
1558:Generated_Source\PSoC5/UART.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/UART.c ****     *       UART_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/UART.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/UART.c ****     *       UART_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/UART.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/UART.c ****     *
1564:Generated_Source\PSoC5/UART.c ****     * Return:
1565:Generated_Source\PSoC5/UART.c ****     *  None.
1566:Generated_Source\PSoC5/UART.c ****     *
1567:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1568:Generated_Source\PSoC5/UART.c ****     *  This function sets and clears UART_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/UART.c ****     *  register.
1570:Generated_Source\PSoC5/UART.c ****     *
1571:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/UART.c ****     void UART_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/UART.c ****     {
 1661              		.loc 1 1573 0
 1662              		.cfi_startproc
 1663              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 58


 1664              		@ frame_needed = 1, uses_anonymous_args = 0
 1665              		@ link register save eliminated.
 1666 0000 80B4     		push	{r7}
 1667              		.cfi_def_cfa_offset 4
 1668              		.cfi_offset 7, -4
 1669 0002 83B0     		sub	sp, sp, #12
 1670              		.cfi_def_cfa_offset 16
 1671 0004 00AF     		add	r7, sp, #0
 1672              		.cfi_def_cfa_register 7
 1673 0006 0346     		mov	r3, r0
 1674 0008 FB71     		strb	r3, [r7, #7]
1574:Generated_Source\PSoC5/UART.c ****         /* Mark/Space sending enable */
1575:Generated_Source\PSoC5/UART.c ****         if(addressMode != 0u)
1576:Generated_Source\PSoC5/UART.c ****         {
1577:Generated_Source\PSoC5/UART.c ****         #if( UART_CONTROL_REG_REMOVED == 0u )
1578:Generated_Source\PSoC5/UART.c ****             UART_WriteControlRegister(UART_ReadControlRegister() |
1579:Generated_Source\PSoC5/UART.c ****                                                   UART_CTRL_MARK);
1580:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_CONTROL_REG_REMOVED == 0u */
1581:Generated_Source\PSoC5/UART.c ****         }
1582:Generated_Source\PSoC5/UART.c ****         else
1583:Generated_Source\PSoC5/UART.c ****         {
1584:Generated_Source\PSoC5/UART.c ****         #if( UART_CONTROL_REG_REMOVED == 0u )
1585:Generated_Source\PSoC5/UART.c ****             UART_WriteControlRegister(UART_ReadControlRegister() &
1586:Generated_Source\PSoC5/UART.c ****                                                   (uint8) ~UART_CTRL_MARK);
1587:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_CONTROL_REG_REMOVED == 0u */
1588:Generated_Source\PSoC5/UART.c ****         }
1589:Generated_Source\PSoC5/UART.c ****     }
 1675              		.loc 1 1589 0
 1676 000a 00BF     		nop
 1677 000c 0C37     		adds	r7, r7, #12
 1678              		.cfi_def_cfa_offset 4
 1679 000e BD46     		mov	sp, r7
 1680              		.cfi_def_cfa_register 13
 1681              		@ sp needed
 1682 0010 80BC     		pop	{r7}
 1683              		.cfi_restore 7
 1684              		.cfi_def_cfa_offset 0
 1685 0012 7047     		bx	lr
 1686              		.cfi_endproc
 1687              	.LFE26:
 1688              		.size	UART_SetTxAddressMode, .-UART_SetTxAddressMode
 1689              		.bss
 1690              	txPeriod.5161:
 1691 0003 00       		.space	1
 1692              		.text
 1693              	.Letext0:
 1694              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1695              		.section	.debug_info,"",%progbits
 1696              	.Ldebug_info0:
 1697 0000 89050000 		.4byte	0x589
 1698 0004 0400     		.2byte	0x4
 1699 0006 00000000 		.4byte	.Ldebug_abbrev0
 1700 000a 04       		.byte	0x4
 1701 000b 01       		.uleb128 0x1
 1702 000c 2C000000 		.4byte	.LASF69
 1703 0010 0C       		.byte	0xc
 1704 0011 17030000 		.4byte	.LASF70
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 59


 1705 0015 D5020000 		.4byte	.LASF71
 1706 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1707 001d 00000000 		.4byte	0
 1708 0021 00000000 		.4byte	.Ldebug_line0
 1709 0025 02       		.uleb128 0x2
 1710 0026 01       		.byte	0x1
 1711 0027 06       		.byte	0x6
 1712 0028 14010000 		.4byte	.LASF0
 1713 002c 02       		.uleb128 0x2
 1714 002d 01       		.byte	0x1
 1715 002e 08       		.byte	0x8
 1716 002f 65030000 		.4byte	.LASF1
 1717 0033 02       		.uleb128 0x2
 1718 0034 02       		.byte	0x2
 1719 0035 05       		.byte	0x5
 1720 0036 84030000 		.4byte	.LASF2
 1721 003a 02       		.uleb128 0x2
 1722 003b 02       		.byte	0x2
 1723 003c 07       		.byte	0x7
 1724 003d 30020000 		.4byte	.LASF3
 1725 0041 02       		.uleb128 0x2
 1726 0042 04       		.byte	0x4
 1727 0043 05       		.byte	0x5
 1728 0044 29010000 		.4byte	.LASF4
 1729 0048 02       		.uleb128 0x2
 1730 0049 04       		.byte	0x4
 1731 004a 07       		.byte	0x7
 1732 004b FA010000 		.4byte	.LASF5
 1733 004f 02       		.uleb128 0x2
 1734 0050 08       		.byte	0x8
 1735 0051 05       		.byte	0x5
 1736 0052 06010000 		.4byte	.LASF6
 1737 0056 02       		.uleb128 0x2
 1738 0057 08       		.byte	0x8
 1739 0058 07       		.byte	0x7
 1740 0059 BA000000 		.4byte	.LASF7
 1741 005d 03       		.uleb128 0x3
 1742 005e 04       		.byte	0x4
 1743 005f 05       		.byte	0x5
 1744 0060 696E7400 		.ascii	"int\000"
 1745 0064 02       		.uleb128 0x2
 1746 0065 04       		.byte	0x4
 1747 0066 07       		.byte	0x7
 1748 0067 CD010000 		.4byte	.LASF8
 1749 006b 04       		.uleb128 0x4
 1750 006c 4F010000 		.4byte	.LASF9
 1751 0070 02       		.byte	0x2
 1752 0071 9201     		.2byte	0x192
 1753 0073 2C000000 		.4byte	0x2c
 1754 0077 04       		.uleb128 0x4
 1755 0078 00000000 		.4byte	.LASF10
 1756 007c 02       		.byte	0x2
 1757 007d 9301     		.2byte	0x193
 1758 007f 3A000000 		.4byte	0x3a
 1759 0083 04       		.uleb128 0x4
 1760 0084 81010000 		.4byte	.LASF11
 1761 0088 02       		.byte	0x2
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 60


 1762 0089 9401     		.2byte	0x194
 1763 008b 48000000 		.4byte	0x48
 1764 008f 02       		.uleb128 0x2
 1765 0090 04       		.byte	0x4
 1766 0091 04       		.byte	0x4
 1767 0092 40040000 		.4byte	.LASF12
 1768 0096 02       		.uleb128 0x2
 1769 0097 08       		.byte	0x8
 1770 0098 04       		.byte	0x4
 1771 0099 6E010000 		.4byte	.LASF13
 1772 009d 04       		.uleb128 0x4
 1773 009e D1030000 		.4byte	.LASF14
 1774 00a2 02       		.byte	0x2
 1775 00a3 A301     		.2byte	0x1a3
 1776 00a5 A9000000 		.4byte	0xa9
 1777 00a9 02       		.uleb128 0x2
 1778 00aa 01       		.byte	0x1
 1779 00ab 08       		.byte	0x8
 1780 00ac CC030000 		.4byte	.LASF15
 1781 00b0 04       		.uleb128 0x4
 1782 00b1 4A030000 		.4byte	.LASF16
 1783 00b5 02       		.byte	0x2
 1784 00b6 3C02     		.2byte	0x23c
 1785 00b8 BC000000 		.4byte	0xbc
 1786 00bc 05       		.uleb128 0x5
 1787 00bd 6B000000 		.4byte	0x6b
 1788 00c1 04       		.uleb128 0x4
 1789 00c2 7B020000 		.4byte	.LASF17
 1790 00c6 02       		.byte	0x2
 1791 00c7 3E02     		.2byte	0x23e
 1792 00c9 CD000000 		.4byte	0xcd
 1793 00cd 05       		.uleb128 0x5
 1794 00ce 83000000 		.4byte	0x83
 1795 00d2 02       		.uleb128 0x2
 1796 00d3 08       		.byte	0x8
 1797 00d4 04       		.byte	0x4
 1798 00d5 92020000 		.4byte	.LASF18
 1799 00d9 02       		.uleb128 0x2
 1800 00da 04       		.byte	0x4
 1801 00db 07       		.byte	0x7
 1802 00dc 89020000 		.4byte	.LASF19
 1803 00e0 06       		.uleb128 0x6
 1804 00e1 D1000000 		.4byte	.LASF20
 1805 00e5 01       		.byte	0x1
 1806 00e6 4C       		.byte	0x4c
 1807 00e7 00000000 		.4byte	.LFB0
 1808 00eb 24000000 		.4byte	.LFE0-.LFB0
 1809 00ef 01       		.uleb128 0x1
 1810 00f0 9C       		.byte	0x9c
 1811 00f1 06       		.uleb128 0x6
 1812 00f2 A0010000 		.4byte	.LASF21
 1813 00f6 01       		.byte	0x1
 1814 00f7 6A       		.byte	0x6a
 1815 00f8 00000000 		.4byte	.LFB1
 1816 00fc 50000000 		.4byte	.LFE1-.LFB1
 1817 0100 01       		.uleb128 0x1
 1818 0101 9C       		.byte	0x9c
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 61


 1819 0102 07       		.uleb128 0x7
 1820 0103 AE030000 		.4byte	.LASF22
 1821 0107 01       		.byte	0x1
 1822 0108 B7       		.byte	0xb7
 1823 0109 00000000 		.4byte	.LFB2
 1824 010d 74000000 		.4byte	.LFE2-.LFB2
 1825 0111 01       		.uleb128 0x1
 1826 0112 9C       		.byte	0x9c
 1827 0113 26010000 		.4byte	0x126
 1828 0117 08       		.uleb128 0x8
 1829 0118 FC030000 		.4byte	.LASF24
 1830 011c 01       		.byte	0x1
 1831 011d B9       		.byte	0xb9
 1832 011e 6B000000 		.4byte	0x6b
 1833 0122 02       		.uleb128 0x2
 1834 0123 91       		.byte	0x91
 1835 0124 77       		.sleb128 -9
 1836 0125 00       		.byte	0
 1837 0126 07       		.uleb128 0x7
 1838 0127 36040000 		.4byte	.LASF23
 1839 012b 01       		.byte	0x1
 1840 012c F0       		.byte	0xf0
 1841 012d 00000000 		.4byte	.LFB3
 1842 0131 68000000 		.4byte	.LFE3-.LFB3
 1843 0135 01       		.uleb128 0x1
 1844 0136 9C       		.byte	0x9c
 1845 0137 4A010000 		.4byte	0x14a
 1846 013b 08       		.uleb128 0x8
 1847 013c FC030000 		.4byte	.LASF24
 1848 0140 01       		.byte	0x1
 1849 0141 F2       		.byte	0xf2
 1850 0142 6B000000 		.4byte	0x6b
 1851 0146 02       		.uleb128 0x2
 1852 0147 91       		.byte	0x91
 1853 0148 77       		.sleb128 -9
 1854 0149 00       		.byte	0
 1855 014a 09       		.uleb128 0x9
 1856 014b 55010000 		.4byte	.LASF35
 1857 014f 01       		.byte	0x1
 1858 0150 2701     		.2byte	0x127
 1859 0152 6B000000 		.4byte	0x6b
 1860 0156 00000000 		.4byte	.LFB4
 1861 015a 0E000000 		.4byte	.LFE4-.LFB4
 1862 015e 01       		.uleb128 0x1
 1863 015f 9C       		.byte	0x9c
 1864 0160 0A       		.uleb128 0xa
 1865 0161 55040000 		.4byte	.LASF25
 1866 0165 01       		.byte	0x1
 1867 0166 3F01     		.2byte	0x13f
 1868 0168 00000000 		.4byte	.LFB5
 1869 016c 14000000 		.4byte	.LFE5-.LFB5
 1870 0170 01       		.uleb128 0x1
 1871 0171 9C       		.byte	0x9c
 1872 0172 86010000 		.4byte	0x186
 1873 0176 0B       		.uleb128 0xb
 1874 0177 88010000 		.4byte	.LASF27
 1875 017b 01       		.byte	0x1
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 62


 1876 017c 3F01     		.2byte	0x13f
 1877 017e 6B000000 		.4byte	0x6b
 1878 0182 02       		.uleb128 0x2
 1879 0183 91       		.byte	0x91
 1880 0184 77       		.sleb128 -9
 1881 0185 00       		.byte	0
 1882 0186 0A       		.uleb128 0xa
 1883 0187 D7030000 		.4byte	.LASF26
 1884 018b 01       		.byte	0x1
 1885 018c 6701     		.2byte	0x167
 1886 018e 00000000 		.4byte	.LFB6
 1887 0192 20000000 		.4byte	.LFE6-.LFB6
 1888 0196 01       		.uleb128 0x1
 1889 0197 9C       		.byte	0x9c
 1890 0198 AC010000 		.4byte	0x1ac
 1891 019c 0B       		.uleb128 0xb
 1892 019d 4C020000 		.4byte	.LASF28
 1893 01a1 01       		.byte	0x1
 1894 01a2 6701     		.2byte	0x167
 1895 01a4 6B000000 		.4byte	0x6b
 1896 01a8 02       		.uleb128 0x2
 1897 01a9 91       		.byte	0x91
 1898 01aa 77       		.sleb128 -9
 1899 01ab 00       		.byte	0
 1900 01ac 0C       		.uleb128 0xc
 1901 01ad 3F010000 		.4byte	.LASF30
 1902 01b1 01       		.byte	0x1
 1903 01b2 8801     		.2byte	0x188
 1904 01b4 6B000000 		.4byte	0x6b
 1905 01b8 00000000 		.4byte	.LFB7
 1906 01bc 1C000000 		.4byte	.LFE7-.LFB7
 1907 01c0 01       		.uleb128 0x1
 1908 01c1 9C       		.byte	0x9c
 1909 01c2 D6010000 		.4byte	0x1d6
 1910 01c6 0D       		.uleb128 0xd
 1911 01c7 A7030000 		.4byte	.LASF29
 1912 01cb 01       		.byte	0x1
 1913 01cc 8A01     		.2byte	0x18a
 1914 01ce 6B000000 		.4byte	0x6b
 1915 01d2 02       		.uleb128 0x2
 1916 01d3 91       		.byte	0x91
 1917 01d4 77       		.sleb128 -9
 1918 01d5 00       		.byte	0
 1919 01d6 0C       		.uleb128 0xc
 1920 01d7 BA030000 		.4byte	.LASF31
 1921 01db 01       		.byte	0x1
 1922 01dc E501     		.2byte	0x1e5
 1923 01de 6B000000 		.4byte	0x6b
 1924 01e2 00000000 		.4byte	.LFB8
 1925 01e6 24000000 		.4byte	.LFE8-.LFB8
 1926 01ea 01       		.uleb128 0x1
 1927 01eb 9C       		.byte	0x9c
 1928 01ec 00020000 		.4byte	0x200
 1929 01f0 0D       		.uleb128 0xd
 1930 01f1 2F040000 		.4byte	.LASF32
 1931 01f5 01       		.byte	0x1
 1932 01f6 E701     		.2byte	0x1e7
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 63


 1933 01f8 6B000000 		.4byte	0x6b
 1934 01fc 02       		.uleb128 0x2
 1935 01fd 91       		.byte	0x91
 1936 01fe 77       		.sleb128 -9
 1937 01ff 00       		.byte	0
 1938 0200 0C       		.uleb128 0xc
 1939 0201 EF030000 		.4byte	.LASF33
 1940 0205 01       		.byte	0x1
 1941 0206 1402     		.2byte	0x214
 1942 0208 6B000000 		.4byte	0x6b
 1943 020c 00000000 		.4byte	.LFB9
 1944 0210 44000000 		.4byte	.LFE9-.LFB9
 1945 0214 01       		.uleb128 0x1
 1946 0215 9C       		.byte	0x9c
 1947 0216 39020000 		.4byte	0x239
 1948 021a 0D       		.uleb128 0xd
 1949 021b A7030000 		.4byte	.LASF29
 1950 021f 01       		.byte	0x1
 1951 0220 1602     		.2byte	0x216
 1952 0222 6B000000 		.4byte	0x6b
 1953 0226 02       		.uleb128 0x2
 1954 0227 91       		.byte	0x91
 1955 0228 77       		.sleb128 -9
 1956 0229 0D       		.uleb128 0xd
 1957 022a CC020000 		.4byte	.LASF34
 1958 022e 01       		.byte	0x1
 1959 022f 1702     		.2byte	0x217
 1960 0231 6B000000 		.4byte	0x6b
 1961 0235 02       		.uleb128 0x2
 1962 0236 91       		.byte	0x91
 1963 0237 76       		.sleb128 -10
 1964 0238 00       		.byte	0
 1965 0239 0E       		.uleb128 0xe
 1966 023a C0010000 		.4byte	.LASF36
 1967 023e 01       		.byte	0x1
 1968 023f 7A02     		.2byte	0x27a
 1969 0241 77000000 		.4byte	0x77
 1970 0245 00000000 		.4byte	.LFB10
 1971 0249 20000000 		.4byte	.LFE10-.LFB10
 1972 024d 01       		.uleb128 0x1
 1973 024e 9C       		.byte	0x9c
 1974 024f 0C       		.uleb128 0xc
 1975 0250 1A040000 		.4byte	.LASF37
 1976 0254 01       		.byte	0x1
 1977 0255 AB02     		.2byte	0x2ab
 1978 0257 6B000000 		.4byte	0x6b
 1979 025b 00000000 		.4byte	.LFB11
 1980 025f 2C000000 		.4byte	.LFE11-.LFB11
 1981 0263 01       		.uleb128 0x1
 1982 0264 9C       		.byte	0x9c
 1983 0265 79020000 		.4byte	0x279
 1984 0269 0D       		.uleb128 0xd
 1985 026a 2B020000 		.4byte	.LASF38
 1986 026e 01       		.byte	0x1
 1987 026f AE02     		.2byte	0x2ae
 1988 0271 6B000000 		.4byte	0x6b
 1989 0275 02       		.uleb128 0x2
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 64


 1990 0276 91       		.byte	0x91
 1991 0277 77       		.sleb128 -9
 1992 0278 00       		.byte	0
 1993 0279 0F       		.uleb128 0xf
 1994 027a 6F040000 		.4byte	.LASF39
 1995 027e 01       		.byte	0x1
 1996 027f F502     		.2byte	0x2f5
 1997 0281 00000000 		.4byte	.LFB12
 1998 0285 44000000 		.4byte	.LFE12-.LFB12
 1999 0289 01       		.uleb128 0x1
 2000 028a 9C       		.byte	0x9c
 2001 028b 9F020000 		.4byte	0x29f
 2002 028f 0D       		.uleb128 0xd
 2003 0290 FC030000 		.4byte	.LASF24
 2004 0294 01       		.byte	0x1
 2005 0295 F702     		.2byte	0x2f7
 2006 0297 6B000000 		.4byte	0x6b
 2007 029b 02       		.uleb128 0x2
 2008 029c 91       		.byte	0x91
 2009 029d 77       		.sleb128 -9
 2010 029e 00       		.byte	0
 2011 029f 0A       		.uleb128 0xa
 2012 02a0 4F030000 		.4byte	.LASF40
 2013 02a4 01       		.byte	0x1
 2014 02a5 2D03     		.2byte	0x32d
 2015 02a7 00000000 		.4byte	.LFB13
 2016 02ab 14000000 		.4byte	.LFE13-.LFB13
 2017 02af 01       		.uleb128 0x1
 2018 02b0 9C       		.byte	0x9c
 2019 02b1 C5020000 		.4byte	0x2c5
 2020 02b5 0B       		.uleb128 0xb
 2021 02b6 75010000 		.4byte	.LASF41
 2022 02ba 01       		.byte	0x1
 2023 02bb 2D03     		.2byte	0x32d
 2024 02bd 6B000000 		.4byte	0x6b
 2025 02c1 02       		.uleb128 0x2
 2026 02c2 91       		.byte	0x91
 2027 02c3 77       		.sleb128 -9
 2028 02c4 00       		.byte	0
 2029 02c5 0A       		.uleb128 0xa
 2030 02c6 A6020000 		.4byte	.LASF42
 2031 02ca 01       		.byte	0x1
 2032 02cb 5903     		.2byte	0x359
 2033 02cd 00000000 		.4byte	.LFB14
 2034 02d1 20000000 		.4byte	.LFE14-.LFB14
 2035 02d5 01       		.uleb128 0x1
 2036 02d6 9C       		.byte	0x9c
 2037 02d7 EB020000 		.4byte	0x2eb
 2038 02db 0B       		.uleb128 0xb
 2039 02dc 9E020000 		.4byte	.LASF43
 2040 02e0 01       		.byte	0x1
 2041 02e1 5903     		.2byte	0x359
 2042 02e3 6B000000 		.4byte	0x6b
 2043 02e7 02       		.uleb128 0x2
 2044 02e8 91       		.byte	0x91
 2045 02e9 77       		.sleb128 -9
 2046 02ea 00       		.byte	0
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 65


 2047 02eb 0A       		.uleb128 0xa
 2048 02ec B9020000 		.4byte	.LASF44
 2049 02f0 01       		.byte	0x1
 2050 02f1 6D03     		.2byte	0x36d
 2051 02f3 00000000 		.4byte	.LFB15
 2052 02f7 20000000 		.4byte	.LFE15-.LFB15
 2053 02fb 01       		.uleb128 0x1
 2054 02fc 9C       		.byte	0x9c
 2055 02fd 11030000 		.4byte	0x311
 2056 0301 0B       		.uleb128 0xb
 2057 0302 9E020000 		.4byte	.LASF43
 2058 0306 01       		.byte	0x1
 2059 0307 6D03     		.2byte	0x36d
 2060 0309 6B000000 		.4byte	0x6b
 2061 030d 02       		.uleb128 0x2
 2062 030e 91       		.byte	0x91
 2063 030f 77       		.sleb128 -9
 2064 0310 00       		.byte	0
 2065 0311 0A       		.uleb128 0xa
 2066 0312 DC000000 		.4byte	.LASF45
 2067 0316 01       		.byte	0x1
 2068 0317 8C03     		.2byte	0x38c
 2069 0319 00000000 		.4byte	.LFB16
 2070 031d 20000000 		.4byte	.LFE16-.LFB16
 2071 0321 01       		.uleb128 0x1
 2072 0322 9C       		.byte	0x9c
 2073 0323 37030000 		.4byte	0x337
 2074 0327 0B       		.uleb128 0xb
 2075 0328 4C020000 		.4byte	.LASF28
 2076 032c 01       		.byte	0x1
 2077 032d 8C03     		.2byte	0x38c
 2078 032f 6B000000 		.4byte	0x6b
 2079 0333 02       		.uleb128 0x2
 2080 0334 91       		.byte	0x91
 2081 0335 77       		.sleb128 -9
 2082 0336 00       		.byte	0
 2083 0337 0A       		.uleb128 0xa
 2084 0338 73030000 		.4byte	.LASF46
 2085 033c 01       		.byte	0x1
 2086 033d AE03     		.2byte	0x3ae
 2087 033f 00000000 		.4byte	.LFB17
 2088 0343 94000000 		.4byte	.LFE17-.LFB17
 2089 0347 01       		.uleb128 0x1
 2090 0348 9C       		.byte	0x9c
 2091 0349 5D030000 		.4byte	0x35d
 2092 034d 0B       		.uleb128 0xb
 2093 034e 07000000 		.4byte	.LASF47
 2094 0352 01       		.byte	0x1
 2095 0353 AE03     		.2byte	0x3ae
 2096 0355 6B000000 		.4byte	0x6b
 2097 0359 02       		.uleb128 0x2
 2098 035a 91       		.byte	0x91
 2099 035b 77       		.sleb128 -9
 2100 035c 00       		.byte	0
 2101 035d 09       		.uleb128 0x9
 2102 035e 69020000 		.4byte	.LASF48
 2103 0362 01       		.byte	0x1
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 66


 2104 0363 EB03     		.2byte	0x3eb
 2105 0365 6B000000 		.4byte	0x6b
 2106 0369 00000000 		.4byte	.LFB18
 2107 036d 18000000 		.4byte	.LFE18-.LFB18
 2108 0371 01       		.uleb128 0x1
 2109 0372 9C       		.byte	0x9c
 2110 0373 0A       		.uleb128 0xa
 2111 0374 32010000 		.4byte	.LASF49
 2112 0378 01       		.byte	0x1
 2113 0379 1104     		.2byte	0x411
 2114 037b 00000000 		.4byte	.LFB19
 2115 037f B8000000 		.4byte	.LFE19-.LFB19
 2116 0383 01       		.uleb128 0x1
 2117 0384 9C       		.byte	0x9c
 2118 0385 B7030000 		.4byte	0x3b7
 2119 0389 0B       		.uleb128 0xb
 2120 038a 07000000 		.4byte	.LASF47
 2121 038e 01       		.byte	0x1
 2122 038f 1104     		.2byte	0x411
 2123 0391 6B000000 		.4byte	0x6b
 2124 0395 02       		.uleb128 0x2
 2125 0396 91       		.byte	0x91
 2126 0397 6F       		.sleb128 -17
 2127 0398 0D       		.uleb128 0xd
 2128 0399 0C020000 		.4byte	.LASF50
 2129 039d 01       		.byte	0x1
 2130 039e 1804     		.2byte	0x418
 2131 03a0 6B000000 		.4byte	0x6b
 2132 03a4 02       		.uleb128 0x2
 2133 03a5 91       		.byte	0x91
 2134 03a6 77       		.sleb128 -9
 2135 03a7 0D       		.uleb128 0xd
 2136 03a8 90010000 		.4byte	.LASF51
 2137 03ac 01       		.byte	0x1
 2138 03ad 1904     		.2byte	0x419
 2139 03af 6B000000 		.4byte	0x6b
 2140 03b3 02       		.uleb128 0x2
 2141 03b4 91       		.byte	0x91
 2142 03b5 76       		.sleb128 -10
 2143 03b6 00       		.byte	0
 2144 03b7 0F       		.uleb128 0xf
 2145 03b8 46040000 		.4byte	.LASF52
 2146 03bc 01       		.byte	0x1
 2147 03bd 7904     		.2byte	0x479
 2148 03bf 00000000 		.4byte	.LFB20
 2149 03c3 44000000 		.4byte	.LFE20-.LFB20
 2150 03c7 01       		.uleb128 0x1
 2151 03c8 9C       		.byte	0x9c
 2152 03c9 EC030000 		.4byte	0x3ec
 2153 03cd 0B       		.uleb128 0xb
 2154 03ce 25000000 		.4byte	.LASF53
 2155 03d2 01       		.byte	0x1
 2156 03d3 7904     		.2byte	0x479
 2157 03d5 EC030000 		.4byte	0x3ec
 2158 03d9 02       		.uleb128 0x2
 2159 03da 91       		.byte	0x91
 2160 03db 6C       		.sleb128 -20
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 67


 2161 03dc 0D       		.uleb128 0xd
 2162 03dd 43020000 		.4byte	.LASF54
 2163 03e1 01       		.byte	0x1
 2164 03e2 7B04     		.2byte	0x47b
 2165 03e4 77000000 		.4byte	0x77
 2166 03e8 02       		.uleb128 0x2
 2167 03e9 91       		.byte	0x91
 2168 03ea 76       		.sleb128 -10
 2169 03eb 00       		.byte	0
 2170 03ec 10       		.uleb128 0x10
 2171 03ed 04       		.byte	0x4
 2172 03ee F2030000 		.4byte	0x3f2
 2173 03f2 11       		.uleb128 0x11
 2174 03f3 9D000000 		.4byte	0x9d
 2175 03f7 0F       		.uleb128 0xf
 2176 03f8 1D020000 		.4byte	.LASF55
 2177 03fc 01       		.byte	0x1
 2178 03fd A704     		.2byte	0x4a7
 2179 03ff 00000000 		.4byte	.LFB21
 2180 0403 44000000 		.4byte	.LFE21-.LFB21
 2181 0407 01       		.uleb128 0x1
 2182 0408 9C       		.byte	0x9c
 2183 0409 3B040000 		.4byte	0x43b
 2184 040d 0B       		.uleb128 0xb
 2185 040e 25000000 		.4byte	.LASF53
 2186 0412 01       		.byte	0x1
 2187 0413 A704     		.2byte	0x4a7
 2188 0415 3B040000 		.4byte	0x43b
 2189 0419 02       		.uleb128 0x2
 2190 041a 91       		.byte	0x91
 2191 041b 6C       		.sleb128 -20
 2192 041c 0B       		.uleb128 0xb
 2193 041d 9D030000 		.4byte	.LASF56
 2194 0421 01       		.byte	0x1
 2195 0422 A704     		.2byte	0x4a7
 2196 0424 6B000000 		.4byte	0x6b
 2197 0428 02       		.uleb128 0x2
 2198 0429 91       		.byte	0x91
 2199 042a 6B       		.sleb128 -21
 2200 042b 0D       		.uleb128 0xd
 2201 042c 43020000 		.4byte	.LASF54
 2202 0430 01       		.byte	0x1
 2203 0431 AA04     		.2byte	0x4aa
 2204 0433 6B000000 		.4byte	0x6b
 2205 0437 02       		.uleb128 0x2
 2206 0438 91       		.byte	0x91
 2207 0439 77       		.sleb128 -9
 2208 043a 00       		.byte	0
 2209 043b 10       		.uleb128 0x10
 2210 043c 04       		.byte	0x4
 2211 043d 41040000 		.4byte	0x441
 2212 0441 11       		.uleb128 0x11
 2213 0442 6B000000 		.4byte	0x6b
 2214 0446 0F       		.uleb128 0xf
 2215 0447 ED010000 		.4byte	.LASF57
 2216 044b 01       		.byte	0x1
 2217 044c CE04     		.2byte	0x4ce
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 68


 2218 044e 00000000 		.4byte	.LFB22
 2219 0452 34000000 		.4byte	.LFE22-.LFB22
 2220 0456 01       		.uleb128 0x1
 2221 0457 9C       		.byte	0x9c
 2222 0458 6C040000 		.4byte	0x46c
 2223 045c 0B       		.uleb128 0xb
 2224 045d 07000000 		.4byte	.LASF47
 2225 0461 01       		.byte	0x1
 2226 0462 CE04     		.2byte	0x4ce
 2227 0464 6B000000 		.4byte	0x6b
 2228 0468 02       		.uleb128 0x2
 2229 0469 91       		.byte	0x91
 2230 046a 77       		.sleb128 -9
 2231 046b 00       		.byte	0
 2232 046c 0C       		.uleb128 0xc
 2233 046d 35030000 		.4byte	.LASF58
 2234 0471 01       		.byte	0x1
 2235 0472 F904     		.2byte	0x4f9
 2236 0474 6B000000 		.4byte	0x6b
 2237 0478 00000000 		.4byte	.LFB23
 2238 047c 74000000 		.4byte	.LFE23-.LFB23
 2239 0480 01       		.uleb128 0x1
 2240 0481 9C       		.byte	0x9c
 2241 0482 96040000 		.4byte	0x496
 2242 0486 0D       		.uleb128 0xd
 2243 0487 2B020000 		.4byte	.LASF38
 2244 048b 01       		.byte	0x1
 2245 048c FC04     		.2byte	0x4fc
 2246 048e 6B000000 		.4byte	0x6b
 2247 0492 02       		.uleb128 0x2
 2248 0493 91       		.byte	0x91
 2249 0494 77       		.sleb128 -9
 2250 0495 00       		.byte	0
 2251 0496 0F       		.uleb128 0xf
 2252 0497 DA010000 		.4byte	.LASF59
 2253 049b 01       		.byte	0x1
 2254 049c 4A05     		.2byte	0x54a
 2255 049e 00000000 		.4byte	.LFB24
 2256 04a2 6C000000 		.4byte	.LFE24-.LFB24
 2257 04a6 01       		.uleb128 0x1
 2258 04a7 9C       		.byte	0x9c
 2259 04a8 BC040000 		.4byte	0x4bc
 2260 04ac 0D       		.uleb128 0xd
 2261 04ad FC030000 		.4byte	.LASF24
 2262 04b1 01       		.byte	0x1
 2263 04b2 4C05     		.2byte	0x54c
 2264 04b4 6B000000 		.4byte	0x6b
 2265 04b8 02       		.uleb128 0x2
 2266 04b9 91       		.byte	0x91
 2267 04ba 77       		.sleb128 -9
 2268 04bb 00       		.byte	0
 2269 04bc 0A       		.uleb128 0xa
 2270 04bd 8E030000 		.4byte	.LASF60
 2271 04c1 01       		.byte	0x1
 2272 04c2 A005     		.2byte	0x5a0
 2273 04c4 00000000 		.4byte	.LFB25
 2274 04c8 9C000000 		.4byte	.LFE25-.LFB25
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 69


 2275 04cc 01       		.uleb128 0x1
 2276 04cd 9C       		.byte	0x9c
 2277 04ce 0D050000 		.4byte	0x50d
 2278 04d2 0B       		.uleb128 0xb
 2279 04d3 B8010000 		.4byte	.LASF61
 2280 04d7 01       		.byte	0x1
 2281 04d8 A005     		.2byte	0x5a0
 2282 04da 6B000000 		.4byte	0x6b
 2283 04de 02       		.uleb128 0x2
 2284 04df 91       		.byte	0x91
 2285 04e0 6F       		.sleb128 -17
 2286 04e1 12       		.uleb128 0x12
 2287 04e2 12000000 		.4byte	.LBB2
 2288 04e6 6C000000 		.4byte	.LBE2-.LBB2
 2289 04ea 0D       		.uleb128 0xd
 2290 04eb 81020000 		.4byte	.LASF62
 2291 04ef 01       		.byte	0x1
 2292 04f0 A805     		.2byte	0x5a8
 2293 04f2 6B000000 		.4byte	0x6b
 2294 04f6 02       		.uleb128 0x2
 2295 04f7 91       		.byte	0x91
 2296 04f8 77       		.sleb128 -9
 2297 04f9 0D       		.uleb128 0xd
 2298 04fa 20010000 		.4byte	.LASF63
 2299 04fe 01       		.byte	0x1
 2300 04ff D005     		.2byte	0x5d0
 2301 0501 6B000000 		.4byte	0x6b
 2302 0505 05       		.uleb128 0x5
 2303 0506 03       		.byte	0x3
 2304 0507 03000000 		.4byte	txPeriod.5161
 2305 050b 00       		.byte	0
 2306 050c 00       		.byte	0
 2307 050d 0A       		.uleb128 0xa
 2308 050e 53020000 		.4byte	.LASF64
 2309 0512 01       		.byte	0x1
 2310 0513 2406     		.2byte	0x624
 2311 0515 00000000 		.4byte	.LFB26
 2312 0519 14000000 		.4byte	.LFE26-.LFB26
 2313 051d 01       		.uleb128 0x1
 2314 051e 9C       		.byte	0x9c
 2315 051f 33050000 		.4byte	0x533
 2316 0523 0B       		.uleb128 0xb
 2317 0524 75010000 		.4byte	.LASF41
 2318 0528 01       		.byte	0x1
 2319 0529 2406     		.2byte	0x624
 2320 052b 6B000000 		.4byte	0x6b
 2321 052f 02       		.uleb128 0x2
 2322 0530 91       		.byte	0x91
 2323 0531 77       		.sleb128 -9
 2324 0532 00       		.byte	0
 2325 0533 13       		.uleb128 0x13
 2326 0534 0D040000 		.4byte	.LASF65
 2327 0538 01       		.byte	0x1
 2328 0539 1B       		.byte	0x1b
 2329 053a 6B000000 		.4byte	0x6b
 2330 053e 05       		.uleb128 0x5
 2331 053f 03       		.byte	0x3
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 70


 2332 0540 00000000 		.4byte	UART_initVar
 2333 0544 14       		.uleb128 0x14
 2334 0545 BC000000 		.4byte	0xbc
 2335 0549 54050000 		.4byte	0x554
 2336 054d 15       		.uleb128 0x15
 2337 054e D9000000 		.4byte	0xd9
 2338 0552 FE       		.byte	0xfe
 2339 0553 00       		.byte	0
 2340 0554 13       		.uleb128 0x13
 2341 0555 AA010000 		.4byte	.LASF66
 2342 0559 01       		.byte	0x1
 2343 055a 1E       		.byte	0x1e
 2344 055b 65050000 		.4byte	0x565
 2345 055f 05       		.uleb128 0x5
 2346 0560 03       		.byte	0x3
 2347 0561 00000000 		.4byte	UART_txBuffer
 2348 0565 05       		.uleb128 0x5
 2349 0566 44050000 		.4byte	0x544
 2350 056a 13       		.uleb128 0x13
 2351 056b F4000000 		.4byte	.LASF67
 2352 056f 01       		.byte	0x1
 2353 0570 1F       		.byte	0x1f
 2354 0571 BC000000 		.4byte	0xbc
 2355 0575 05       		.uleb128 0x5
 2356 0576 03       		.byte	0x3
 2357 0577 00000000 		.4byte	UART_txBufferRead
 2358 057b 13       		.uleb128 0x13
 2359 057c 12000000 		.4byte	.LASF68
 2360 0580 01       		.byte	0x1
 2361 0581 20       		.byte	0x20
 2362 0582 6B000000 		.4byte	0x6b
 2363 0586 05       		.uleb128 0x5
 2364 0587 03       		.byte	0x3
 2365 0588 00000000 		.4byte	UART_txBufferWrite
 2366 058c 00       		.byte	0
 2367              		.section	.debug_abbrev,"",%progbits
 2368              	.Ldebug_abbrev0:
 2369 0000 01       		.uleb128 0x1
 2370 0001 11       		.uleb128 0x11
 2371 0002 01       		.byte	0x1
 2372 0003 25       		.uleb128 0x25
 2373 0004 0E       		.uleb128 0xe
 2374 0005 13       		.uleb128 0x13
 2375 0006 0B       		.uleb128 0xb
 2376 0007 03       		.uleb128 0x3
 2377 0008 0E       		.uleb128 0xe
 2378 0009 1B       		.uleb128 0x1b
 2379 000a 0E       		.uleb128 0xe
 2380 000b 55       		.uleb128 0x55
 2381 000c 17       		.uleb128 0x17
 2382 000d 11       		.uleb128 0x11
 2383 000e 01       		.uleb128 0x1
 2384 000f 10       		.uleb128 0x10
 2385 0010 17       		.uleb128 0x17
 2386 0011 00       		.byte	0
 2387 0012 00       		.byte	0
 2388 0013 02       		.uleb128 0x2
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 71


 2389 0014 24       		.uleb128 0x24
 2390 0015 00       		.byte	0
 2391 0016 0B       		.uleb128 0xb
 2392 0017 0B       		.uleb128 0xb
 2393 0018 3E       		.uleb128 0x3e
 2394 0019 0B       		.uleb128 0xb
 2395 001a 03       		.uleb128 0x3
 2396 001b 0E       		.uleb128 0xe
 2397 001c 00       		.byte	0
 2398 001d 00       		.byte	0
 2399 001e 03       		.uleb128 0x3
 2400 001f 24       		.uleb128 0x24
 2401 0020 00       		.byte	0
 2402 0021 0B       		.uleb128 0xb
 2403 0022 0B       		.uleb128 0xb
 2404 0023 3E       		.uleb128 0x3e
 2405 0024 0B       		.uleb128 0xb
 2406 0025 03       		.uleb128 0x3
 2407 0026 08       		.uleb128 0x8
 2408 0027 00       		.byte	0
 2409 0028 00       		.byte	0
 2410 0029 04       		.uleb128 0x4
 2411 002a 16       		.uleb128 0x16
 2412 002b 00       		.byte	0
 2413 002c 03       		.uleb128 0x3
 2414 002d 0E       		.uleb128 0xe
 2415 002e 3A       		.uleb128 0x3a
 2416 002f 0B       		.uleb128 0xb
 2417 0030 3B       		.uleb128 0x3b
 2418 0031 05       		.uleb128 0x5
 2419 0032 49       		.uleb128 0x49
 2420 0033 13       		.uleb128 0x13
 2421 0034 00       		.byte	0
 2422 0035 00       		.byte	0
 2423 0036 05       		.uleb128 0x5
 2424 0037 35       		.uleb128 0x35
 2425 0038 00       		.byte	0
 2426 0039 49       		.uleb128 0x49
 2427 003a 13       		.uleb128 0x13
 2428 003b 00       		.byte	0
 2429 003c 00       		.byte	0
 2430 003d 06       		.uleb128 0x6
 2431 003e 2E       		.uleb128 0x2e
 2432 003f 00       		.byte	0
 2433 0040 3F       		.uleb128 0x3f
 2434 0041 19       		.uleb128 0x19
 2435 0042 03       		.uleb128 0x3
 2436 0043 0E       		.uleb128 0xe
 2437 0044 3A       		.uleb128 0x3a
 2438 0045 0B       		.uleb128 0xb
 2439 0046 3B       		.uleb128 0x3b
 2440 0047 0B       		.uleb128 0xb
 2441 0048 27       		.uleb128 0x27
 2442 0049 19       		.uleb128 0x19
 2443 004a 11       		.uleb128 0x11
 2444 004b 01       		.uleb128 0x1
 2445 004c 12       		.uleb128 0x12
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 72


 2446 004d 06       		.uleb128 0x6
 2447 004e 40       		.uleb128 0x40
 2448 004f 18       		.uleb128 0x18
 2449 0050 9642     		.uleb128 0x2116
 2450 0052 19       		.uleb128 0x19
 2451 0053 00       		.byte	0
 2452 0054 00       		.byte	0
 2453 0055 07       		.uleb128 0x7
 2454 0056 2E       		.uleb128 0x2e
 2455 0057 01       		.byte	0x1
 2456 0058 3F       		.uleb128 0x3f
 2457 0059 19       		.uleb128 0x19
 2458 005a 03       		.uleb128 0x3
 2459 005b 0E       		.uleb128 0xe
 2460 005c 3A       		.uleb128 0x3a
 2461 005d 0B       		.uleb128 0xb
 2462 005e 3B       		.uleb128 0x3b
 2463 005f 0B       		.uleb128 0xb
 2464 0060 27       		.uleb128 0x27
 2465 0061 19       		.uleb128 0x19
 2466 0062 11       		.uleb128 0x11
 2467 0063 01       		.uleb128 0x1
 2468 0064 12       		.uleb128 0x12
 2469 0065 06       		.uleb128 0x6
 2470 0066 40       		.uleb128 0x40
 2471 0067 18       		.uleb128 0x18
 2472 0068 9642     		.uleb128 0x2116
 2473 006a 19       		.uleb128 0x19
 2474 006b 01       		.uleb128 0x1
 2475 006c 13       		.uleb128 0x13
 2476 006d 00       		.byte	0
 2477 006e 00       		.byte	0
 2478 006f 08       		.uleb128 0x8
 2479 0070 34       		.uleb128 0x34
 2480 0071 00       		.byte	0
 2481 0072 03       		.uleb128 0x3
 2482 0073 0E       		.uleb128 0xe
 2483 0074 3A       		.uleb128 0x3a
 2484 0075 0B       		.uleb128 0xb
 2485 0076 3B       		.uleb128 0x3b
 2486 0077 0B       		.uleb128 0xb
 2487 0078 49       		.uleb128 0x49
 2488 0079 13       		.uleb128 0x13
 2489 007a 02       		.uleb128 0x2
 2490 007b 18       		.uleb128 0x18
 2491 007c 00       		.byte	0
 2492 007d 00       		.byte	0
 2493 007e 09       		.uleb128 0x9
 2494 007f 2E       		.uleb128 0x2e
 2495 0080 00       		.byte	0
 2496 0081 3F       		.uleb128 0x3f
 2497 0082 19       		.uleb128 0x19
 2498 0083 03       		.uleb128 0x3
 2499 0084 0E       		.uleb128 0xe
 2500 0085 3A       		.uleb128 0x3a
 2501 0086 0B       		.uleb128 0xb
 2502 0087 3B       		.uleb128 0x3b
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 73


 2503 0088 05       		.uleb128 0x5
 2504 0089 27       		.uleb128 0x27
 2505 008a 19       		.uleb128 0x19
 2506 008b 49       		.uleb128 0x49
 2507 008c 13       		.uleb128 0x13
 2508 008d 11       		.uleb128 0x11
 2509 008e 01       		.uleb128 0x1
 2510 008f 12       		.uleb128 0x12
 2511 0090 06       		.uleb128 0x6
 2512 0091 40       		.uleb128 0x40
 2513 0092 18       		.uleb128 0x18
 2514 0093 9742     		.uleb128 0x2117
 2515 0095 19       		.uleb128 0x19
 2516 0096 00       		.byte	0
 2517 0097 00       		.byte	0
 2518 0098 0A       		.uleb128 0xa
 2519 0099 2E       		.uleb128 0x2e
 2520 009a 01       		.byte	0x1
 2521 009b 3F       		.uleb128 0x3f
 2522 009c 19       		.uleb128 0x19
 2523 009d 03       		.uleb128 0x3
 2524 009e 0E       		.uleb128 0xe
 2525 009f 3A       		.uleb128 0x3a
 2526 00a0 0B       		.uleb128 0xb
 2527 00a1 3B       		.uleb128 0x3b
 2528 00a2 05       		.uleb128 0x5
 2529 00a3 27       		.uleb128 0x27
 2530 00a4 19       		.uleb128 0x19
 2531 00a5 11       		.uleb128 0x11
 2532 00a6 01       		.uleb128 0x1
 2533 00a7 12       		.uleb128 0x12
 2534 00a8 06       		.uleb128 0x6
 2535 00a9 40       		.uleb128 0x40
 2536 00aa 18       		.uleb128 0x18
 2537 00ab 9742     		.uleb128 0x2117
 2538 00ad 19       		.uleb128 0x19
 2539 00ae 01       		.uleb128 0x1
 2540 00af 13       		.uleb128 0x13
 2541 00b0 00       		.byte	0
 2542 00b1 00       		.byte	0
 2543 00b2 0B       		.uleb128 0xb
 2544 00b3 05       		.uleb128 0x5
 2545 00b4 00       		.byte	0
 2546 00b5 03       		.uleb128 0x3
 2547 00b6 0E       		.uleb128 0xe
 2548 00b7 3A       		.uleb128 0x3a
 2549 00b8 0B       		.uleb128 0xb
 2550 00b9 3B       		.uleb128 0x3b
 2551 00ba 05       		.uleb128 0x5
 2552 00bb 49       		.uleb128 0x49
 2553 00bc 13       		.uleb128 0x13
 2554 00bd 02       		.uleb128 0x2
 2555 00be 18       		.uleb128 0x18
 2556 00bf 00       		.byte	0
 2557 00c0 00       		.byte	0
 2558 00c1 0C       		.uleb128 0xc
 2559 00c2 2E       		.uleb128 0x2e
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 74


 2560 00c3 01       		.byte	0x1
 2561 00c4 3F       		.uleb128 0x3f
 2562 00c5 19       		.uleb128 0x19
 2563 00c6 03       		.uleb128 0x3
 2564 00c7 0E       		.uleb128 0xe
 2565 00c8 3A       		.uleb128 0x3a
 2566 00c9 0B       		.uleb128 0xb
 2567 00ca 3B       		.uleb128 0x3b
 2568 00cb 05       		.uleb128 0x5
 2569 00cc 27       		.uleb128 0x27
 2570 00cd 19       		.uleb128 0x19
 2571 00ce 49       		.uleb128 0x49
 2572 00cf 13       		.uleb128 0x13
 2573 00d0 11       		.uleb128 0x11
 2574 00d1 01       		.uleb128 0x1
 2575 00d2 12       		.uleb128 0x12
 2576 00d3 06       		.uleb128 0x6
 2577 00d4 40       		.uleb128 0x40
 2578 00d5 18       		.uleb128 0x18
 2579 00d6 9742     		.uleb128 0x2117
 2580 00d8 19       		.uleb128 0x19
 2581 00d9 01       		.uleb128 0x1
 2582 00da 13       		.uleb128 0x13
 2583 00db 00       		.byte	0
 2584 00dc 00       		.byte	0
 2585 00dd 0D       		.uleb128 0xd
 2586 00de 34       		.uleb128 0x34
 2587 00df 00       		.byte	0
 2588 00e0 03       		.uleb128 0x3
 2589 00e1 0E       		.uleb128 0xe
 2590 00e2 3A       		.uleb128 0x3a
 2591 00e3 0B       		.uleb128 0xb
 2592 00e4 3B       		.uleb128 0x3b
 2593 00e5 05       		.uleb128 0x5
 2594 00e6 49       		.uleb128 0x49
 2595 00e7 13       		.uleb128 0x13
 2596 00e8 02       		.uleb128 0x2
 2597 00e9 18       		.uleb128 0x18
 2598 00ea 00       		.byte	0
 2599 00eb 00       		.byte	0
 2600 00ec 0E       		.uleb128 0xe
 2601 00ed 2E       		.uleb128 0x2e
 2602 00ee 00       		.byte	0
 2603 00ef 3F       		.uleb128 0x3f
 2604 00f0 19       		.uleb128 0x19
 2605 00f1 03       		.uleb128 0x3
 2606 00f2 0E       		.uleb128 0xe
 2607 00f3 3A       		.uleb128 0x3a
 2608 00f4 0B       		.uleb128 0xb
 2609 00f5 3B       		.uleb128 0x3b
 2610 00f6 05       		.uleb128 0x5
 2611 00f7 27       		.uleb128 0x27
 2612 00f8 19       		.uleb128 0x19
 2613 00f9 49       		.uleb128 0x49
 2614 00fa 13       		.uleb128 0x13
 2615 00fb 11       		.uleb128 0x11
 2616 00fc 01       		.uleb128 0x1
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 75


 2617 00fd 12       		.uleb128 0x12
 2618 00fe 06       		.uleb128 0x6
 2619 00ff 40       		.uleb128 0x40
 2620 0100 18       		.uleb128 0x18
 2621 0101 9642     		.uleb128 0x2116
 2622 0103 19       		.uleb128 0x19
 2623 0104 00       		.byte	0
 2624 0105 00       		.byte	0
 2625 0106 0F       		.uleb128 0xf
 2626 0107 2E       		.uleb128 0x2e
 2627 0108 01       		.byte	0x1
 2628 0109 3F       		.uleb128 0x3f
 2629 010a 19       		.uleb128 0x19
 2630 010b 03       		.uleb128 0x3
 2631 010c 0E       		.uleb128 0xe
 2632 010d 3A       		.uleb128 0x3a
 2633 010e 0B       		.uleb128 0xb
 2634 010f 3B       		.uleb128 0x3b
 2635 0110 05       		.uleb128 0x5
 2636 0111 27       		.uleb128 0x27
 2637 0112 19       		.uleb128 0x19
 2638 0113 11       		.uleb128 0x11
 2639 0114 01       		.uleb128 0x1
 2640 0115 12       		.uleb128 0x12
 2641 0116 06       		.uleb128 0x6
 2642 0117 40       		.uleb128 0x40
 2643 0118 18       		.uleb128 0x18
 2644 0119 9642     		.uleb128 0x2116
 2645 011b 19       		.uleb128 0x19
 2646 011c 01       		.uleb128 0x1
 2647 011d 13       		.uleb128 0x13
 2648 011e 00       		.byte	0
 2649 011f 00       		.byte	0
 2650 0120 10       		.uleb128 0x10
 2651 0121 0F       		.uleb128 0xf
 2652 0122 00       		.byte	0
 2653 0123 0B       		.uleb128 0xb
 2654 0124 0B       		.uleb128 0xb
 2655 0125 49       		.uleb128 0x49
 2656 0126 13       		.uleb128 0x13
 2657 0127 00       		.byte	0
 2658 0128 00       		.byte	0
 2659 0129 11       		.uleb128 0x11
 2660 012a 26       		.uleb128 0x26
 2661 012b 00       		.byte	0
 2662 012c 49       		.uleb128 0x49
 2663 012d 13       		.uleb128 0x13
 2664 012e 00       		.byte	0
 2665 012f 00       		.byte	0
 2666 0130 12       		.uleb128 0x12
 2667 0131 0B       		.uleb128 0xb
 2668 0132 01       		.byte	0x1
 2669 0133 11       		.uleb128 0x11
 2670 0134 01       		.uleb128 0x1
 2671 0135 12       		.uleb128 0x12
 2672 0136 06       		.uleb128 0x6
 2673 0137 00       		.byte	0
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 76


 2674 0138 00       		.byte	0
 2675 0139 13       		.uleb128 0x13
 2676 013a 34       		.uleb128 0x34
 2677 013b 00       		.byte	0
 2678 013c 03       		.uleb128 0x3
 2679 013d 0E       		.uleb128 0xe
 2680 013e 3A       		.uleb128 0x3a
 2681 013f 0B       		.uleb128 0xb
 2682 0140 3B       		.uleb128 0x3b
 2683 0141 0B       		.uleb128 0xb
 2684 0142 49       		.uleb128 0x49
 2685 0143 13       		.uleb128 0x13
 2686 0144 3F       		.uleb128 0x3f
 2687 0145 19       		.uleb128 0x19
 2688 0146 02       		.uleb128 0x2
 2689 0147 18       		.uleb128 0x18
 2690 0148 00       		.byte	0
 2691 0149 00       		.byte	0
 2692 014a 14       		.uleb128 0x14
 2693 014b 01       		.uleb128 0x1
 2694 014c 01       		.byte	0x1
 2695 014d 49       		.uleb128 0x49
 2696 014e 13       		.uleb128 0x13
 2697 014f 01       		.uleb128 0x1
 2698 0150 13       		.uleb128 0x13
 2699 0151 00       		.byte	0
 2700 0152 00       		.byte	0
 2701 0153 15       		.uleb128 0x15
 2702 0154 21       		.uleb128 0x21
 2703 0155 00       		.byte	0
 2704 0156 49       		.uleb128 0x49
 2705 0157 13       		.uleb128 0x13
 2706 0158 2F       		.uleb128 0x2f
 2707 0159 0B       		.uleb128 0xb
 2708 015a 00       		.byte	0
 2709 015b 00       		.byte	0
 2710 015c 00       		.byte	0
 2711              		.section	.debug_aranges,"",%progbits
 2712 0000 EC000000 		.4byte	0xec
 2713 0004 0200     		.2byte	0x2
 2714 0006 00000000 		.4byte	.Ldebug_info0
 2715 000a 04       		.byte	0x4
 2716 000b 00       		.byte	0
 2717 000c 0000     		.2byte	0
 2718 000e 0000     		.2byte	0
 2719 0010 00000000 		.4byte	.LFB0
 2720 0014 24000000 		.4byte	.LFE0-.LFB0
 2721 0018 00000000 		.4byte	.LFB1
 2722 001c 50000000 		.4byte	.LFE1-.LFB1
 2723 0020 00000000 		.4byte	.LFB2
 2724 0024 74000000 		.4byte	.LFE2-.LFB2
 2725 0028 00000000 		.4byte	.LFB3
 2726 002c 68000000 		.4byte	.LFE3-.LFB3
 2727 0030 00000000 		.4byte	.LFB4
 2728 0034 0E000000 		.4byte	.LFE4-.LFB4
 2729 0038 00000000 		.4byte	.LFB5
 2730 003c 14000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 77


 2731 0040 00000000 		.4byte	.LFB6
 2732 0044 20000000 		.4byte	.LFE6-.LFB6
 2733 0048 00000000 		.4byte	.LFB7
 2734 004c 1C000000 		.4byte	.LFE7-.LFB7
 2735 0050 00000000 		.4byte	.LFB8
 2736 0054 24000000 		.4byte	.LFE8-.LFB8
 2737 0058 00000000 		.4byte	.LFB9
 2738 005c 44000000 		.4byte	.LFE9-.LFB9
 2739 0060 00000000 		.4byte	.LFB10
 2740 0064 20000000 		.4byte	.LFE10-.LFB10
 2741 0068 00000000 		.4byte	.LFB11
 2742 006c 2C000000 		.4byte	.LFE11-.LFB11
 2743 0070 00000000 		.4byte	.LFB12
 2744 0074 44000000 		.4byte	.LFE12-.LFB12
 2745 0078 00000000 		.4byte	.LFB13
 2746 007c 14000000 		.4byte	.LFE13-.LFB13
 2747 0080 00000000 		.4byte	.LFB14
 2748 0084 20000000 		.4byte	.LFE14-.LFB14
 2749 0088 00000000 		.4byte	.LFB15
 2750 008c 20000000 		.4byte	.LFE15-.LFB15
 2751 0090 00000000 		.4byte	.LFB16
 2752 0094 20000000 		.4byte	.LFE16-.LFB16
 2753 0098 00000000 		.4byte	.LFB17
 2754 009c 94000000 		.4byte	.LFE17-.LFB17
 2755 00a0 00000000 		.4byte	.LFB18
 2756 00a4 18000000 		.4byte	.LFE18-.LFB18
 2757 00a8 00000000 		.4byte	.LFB19
 2758 00ac B8000000 		.4byte	.LFE19-.LFB19
 2759 00b0 00000000 		.4byte	.LFB20
 2760 00b4 44000000 		.4byte	.LFE20-.LFB20
 2761 00b8 00000000 		.4byte	.LFB21
 2762 00bc 44000000 		.4byte	.LFE21-.LFB21
 2763 00c0 00000000 		.4byte	.LFB22
 2764 00c4 34000000 		.4byte	.LFE22-.LFB22
 2765 00c8 00000000 		.4byte	.LFB23
 2766 00cc 74000000 		.4byte	.LFE23-.LFB23
 2767 00d0 00000000 		.4byte	.LFB24
 2768 00d4 6C000000 		.4byte	.LFE24-.LFB24
 2769 00d8 00000000 		.4byte	.LFB25
 2770 00dc 9C000000 		.4byte	.LFE25-.LFB25
 2771 00e0 00000000 		.4byte	.LFB26
 2772 00e4 14000000 		.4byte	.LFE26-.LFB26
 2773 00e8 00000000 		.4byte	0
 2774 00ec 00000000 		.4byte	0
 2775              		.section	.debug_ranges,"",%progbits
 2776              	.Ldebug_ranges0:
 2777 0000 00000000 		.4byte	.LFB0
 2778 0004 24000000 		.4byte	.LFE0
 2779 0008 00000000 		.4byte	.LFB1
 2780 000c 50000000 		.4byte	.LFE1
 2781 0010 00000000 		.4byte	.LFB2
 2782 0014 74000000 		.4byte	.LFE2
 2783 0018 00000000 		.4byte	.LFB3
 2784 001c 68000000 		.4byte	.LFE3
 2785 0020 00000000 		.4byte	.LFB4
 2786 0024 0E000000 		.4byte	.LFE4
 2787 0028 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 78


 2788 002c 14000000 		.4byte	.LFE5
 2789 0030 00000000 		.4byte	.LFB6
 2790 0034 20000000 		.4byte	.LFE6
 2791 0038 00000000 		.4byte	.LFB7
 2792 003c 1C000000 		.4byte	.LFE7
 2793 0040 00000000 		.4byte	.LFB8
 2794 0044 24000000 		.4byte	.LFE8
 2795 0048 00000000 		.4byte	.LFB9
 2796 004c 44000000 		.4byte	.LFE9
 2797 0050 00000000 		.4byte	.LFB10
 2798 0054 20000000 		.4byte	.LFE10
 2799 0058 00000000 		.4byte	.LFB11
 2800 005c 2C000000 		.4byte	.LFE11
 2801 0060 00000000 		.4byte	.LFB12
 2802 0064 44000000 		.4byte	.LFE12
 2803 0068 00000000 		.4byte	.LFB13
 2804 006c 14000000 		.4byte	.LFE13
 2805 0070 00000000 		.4byte	.LFB14
 2806 0074 20000000 		.4byte	.LFE14
 2807 0078 00000000 		.4byte	.LFB15
 2808 007c 20000000 		.4byte	.LFE15
 2809 0080 00000000 		.4byte	.LFB16
 2810 0084 20000000 		.4byte	.LFE16
 2811 0088 00000000 		.4byte	.LFB17
 2812 008c 94000000 		.4byte	.LFE17
 2813 0090 00000000 		.4byte	.LFB18
 2814 0094 18000000 		.4byte	.LFE18
 2815 0098 00000000 		.4byte	.LFB19
 2816 009c B8000000 		.4byte	.LFE19
 2817 00a0 00000000 		.4byte	.LFB20
 2818 00a4 44000000 		.4byte	.LFE20
 2819 00a8 00000000 		.4byte	.LFB21
 2820 00ac 44000000 		.4byte	.LFE21
 2821 00b0 00000000 		.4byte	.LFB22
 2822 00b4 34000000 		.4byte	.LFE22
 2823 00b8 00000000 		.4byte	.LFB23
 2824 00bc 74000000 		.4byte	.LFE23
 2825 00c0 00000000 		.4byte	.LFB24
 2826 00c4 6C000000 		.4byte	.LFE24
 2827 00c8 00000000 		.4byte	.LFB25
 2828 00cc 9C000000 		.4byte	.LFE25
 2829 00d0 00000000 		.4byte	.LFB26
 2830 00d4 14000000 		.4byte	.LFE26
 2831 00d8 00000000 		.4byte	0
 2832 00dc 00000000 		.4byte	0
 2833              		.section	.debug_line,"",%progbits
 2834              	.Ldebug_line0:
 2835 0000 1A030000 		.section	.debug_str,"MS",%progbits,1
 2835      02004100 
 2835      00000201 
 2835      FB0E0D00 
 2835      01010101 
 2836              	.LASF10:
 2837 0000 75696E74 		.ascii	"uint16\000"
 2837      313600
 2838              	.LASF47:
 2839 0007 74784461 		.ascii	"txDataByte\000"
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 79


 2839      74614279 
 2839      746500
 2840              	.LASF68:
 2841 0012 55415254 		.ascii	"UART_txBufferWrite\000"
 2841      5F747842 
 2841      75666665 
 2841      72577269 
 2841      746500
 2842              	.LASF53:
 2843 0025 73747269 		.ascii	"string\000"
 2843      6E6700
 2844              	.LASF69:
 2845 002c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2845      43313120 
 2845      352E342E 
 2845      31203230 
 2845      31363036 
 2846 005f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2846      20726576 
 2846      6973696F 
 2846      6E203233 
 2846      37373135 
 2847 0092 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2847      66756E63 
 2847      74696F6E 
 2847      2D736563 
 2847      74696F6E 
 2848              	.LASF7:
 2849 00ba 6C6F6E67 		.ascii	"long long unsigned int\000"
 2849      206C6F6E 
 2849      6720756E 
 2849      7369676E 
 2849      65642069 
 2850              	.LASF20:
 2851 00d1 55415254 		.ascii	"UART_Start\000"
 2851      5F537461 
 2851      727400
 2852              	.LASF45:
 2853 00dc 55415254 		.ascii	"UART_SetTxInterruptMode\000"
 2853      5F536574 
 2853      5478496E 
 2853      74657272 
 2853      7570744D 
 2854              	.LASF67:
 2855 00f4 55415254 		.ascii	"UART_txBufferRead\000"
 2855      5F747842 
 2855      75666665 
 2855      72526561 
 2855      6400
 2856              	.LASF6:
 2857 0106 6C6F6E67 		.ascii	"long long int\000"
 2857      206C6F6E 
 2857      6720696E 
 2857      7400
 2858              	.LASF0:
 2859 0114 7369676E 		.ascii	"signed char\000"
 2859      65642063 
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 80


 2859      68617200 
 2860              	.LASF63:
 2861 0120 74785065 		.ascii	"txPeriod\000"
 2861      72696F64 
 2861      00
 2862              	.LASF4:
 2863 0129 6C6F6E67 		.ascii	"long int\000"
 2863      20696E74 
 2863      00
 2864              	.LASF49:
 2865 0132 55415254 		.ascii	"UART_PutChar\000"
 2865      5F507574 
 2865      43686172 
 2865      00
 2866              	.LASF30:
 2867 013f 55415254 		.ascii	"UART_ReadRxData\000"
 2867      5F526561 
 2867      64527844 
 2867      61746100 
 2868              	.LASF9:
 2869 014f 75696E74 		.ascii	"uint8\000"
 2869      3800
 2870              	.LASF35:
 2871 0155 55415254 		.ascii	"UART_ReadControlRegister\000"
 2871      5F526561 
 2871      64436F6E 
 2871      74726F6C 
 2871      52656769 
 2872              	.LASF13:
 2873 016e 646F7562 		.ascii	"double\000"
 2873      6C6500
 2874              	.LASF41:
 2875 0175 61646472 		.ascii	"addressMode\000"
 2875      6573734D 
 2875      6F646500 
 2876              	.LASF11:
 2877 0181 75696E74 		.ascii	"uint32\000"
 2877      333200
 2878              	.LASF27:
 2879 0188 636F6E74 		.ascii	"control\000"
 2879      726F6C00 
 2880              	.LASF51:
 2881 0190 6C6F6354 		.ascii	"locTxBufferRead\000"
 2881      78427566 
 2881      66657252 
 2881      65616400 
 2882              	.LASF21:
 2883 01a0 55415254 		.ascii	"UART_Init\000"
 2883      5F496E69 
 2883      7400
 2884              	.LASF66:
 2885 01aa 55415254 		.ascii	"UART_txBuffer\000"
 2885      5F747842 
 2885      75666665 
 2885      7200
 2886              	.LASF61:
 2887 01b8 7265744D 		.ascii	"retMode\000"
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 81


 2887      6F646500 
 2888              	.LASF36:
 2889 01c0 55415254 		.ascii	"UART_GetByte\000"
 2889      5F476574 
 2889      42797465 
 2889      00
 2890              	.LASF8:
 2891 01cd 756E7369 		.ascii	"unsigned int\000"
 2891      676E6564 
 2891      20696E74 
 2891      00
 2892              	.LASF59:
 2893 01da 55415254 		.ascii	"UART_ClearTxBuffer\000"
 2893      5F436C65 
 2893      61725478 
 2893      42756666 
 2893      657200
 2894              	.LASF57:
 2895 01ed 55415254 		.ascii	"UART_PutCRLF\000"
 2895      5F507574 
 2895      43524C46 
 2895      00
 2896              	.LASF5:
 2897 01fa 6C6F6E67 		.ascii	"long unsigned int\000"
 2897      20756E73 
 2897      69676E65 
 2897      6420696E 
 2897      7400
 2898              	.LASF50:
 2899 020c 6C6F6354 		.ascii	"locTxBufferWrite\000"
 2899      78427566 
 2899      66657257 
 2899      72697465 
 2899      00
 2900              	.LASF55:
 2901 021d 55415254 		.ascii	"UART_PutArray\000"
 2901      5F507574 
 2901      41727261 
 2901      7900
 2902              	.LASF38:
 2903 022b 73697A65 		.ascii	"size\000"
 2903      00
 2904              	.LASF3:
 2905 0230 73686F72 		.ascii	"short unsigned int\000"
 2905      7420756E 
 2905      7369676E 
 2905      65642069 
 2905      6E7400
 2906              	.LASF54:
 2907 0243 62756649 		.ascii	"bufIndex\000"
 2907      6E646578 
 2907      00
 2908              	.LASF28:
 2909 024c 696E7453 		.ascii	"intSrc\000"
 2909      726300
 2910              	.LASF64:
 2911 0253 55415254 		.ascii	"UART_SetTxAddressMode\000"
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 82


 2911      5F536574 
 2911      54784164 
 2911      64726573 
 2911      734D6F64 
 2912              	.LASF48:
 2913 0269 55415254 		.ascii	"UART_ReadTxStatus\000"
 2913      5F526561 
 2913      64547853 
 2913      74617475 
 2913      7300
 2914              	.LASF17:
 2915 027b 72656733 		.ascii	"reg32\000"
 2915      3200
 2916              	.LASF62:
 2917 0281 746D7053 		.ascii	"tmpStat\000"
 2917      74617400 
 2918              	.LASF19:
 2919 0289 73697A65 		.ascii	"sizetype\000"
 2919      74797065 
 2919      00
 2920              	.LASF18:
 2921 0292 6C6F6E67 		.ascii	"long double\000"
 2921      20646F75 
 2921      626C6500 
 2922              	.LASF43:
 2923 029e 61646472 		.ascii	"address\000"
 2923      65737300 
 2924              	.LASF42:
 2925 02a6 55415254 		.ascii	"UART_SetRxAddress1\000"
 2925      5F536574 
 2925      52784164 
 2925      64726573 
 2925      733100
 2926              	.LASF44:
 2927 02b9 55415254 		.ascii	"UART_SetRxAddress2\000"
 2927      5F536574 
 2927      52784164 
 2927      64726573 
 2927      733200
 2928              	.LASF34:
 2929 02cc 72785374 		.ascii	"rxStatus\000"
 2929      61747573 
 2929      00
 2930              	.LASF71:
 2931 02d5 433A5C55 		.ascii	"C:\\Users\\barto\\Dropbox\\PSoC\\Grbl_USB_Native\\G"
 2931      73657273 
 2931      5C626172 
 2931      746F5C44 
 2931      726F7062 
 2932 0302 72626C5F 		.ascii	"rbl_USB_Native.cydsn\000"
 2932      5553425F 
 2932      4E617469 
 2932      76652E63 
 2932      7964736E 
 2933              	.LASF70:
 2934 0317 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART.c\000"
 2934      72617465 
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 83


 2934      645F536F 
 2934      75726365 
 2934      5C50536F 
 2935              	.LASF58:
 2936 0335 55415254 		.ascii	"UART_GetTxBufferSize\000"
 2936      5F476574 
 2936      54784275 
 2936      66666572 
 2936      53697A65 
 2937              	.LASF16:
 2938 034a 72656738 		.ascii	"reg8\000"
 2938      00
 2939              	.LASF40:
 2940 034f 55415254 		.ascii	"UART_SetRxAddressMode\000"
 2940      5F536574 
 2940      52784164 
 2940      64726573 
 2940      734D6F64 
 2941              	.LASF1:
 2942 0365 756E7369 		.ascii	"unsigned char\000"
 2942      676E6564 
 2942      20636861 
 2942      7200
 2943              	.LASF46:
 2944 0373 55415254 		.ascii	"UART_WriteTxData\000"
 2944      5F577269 
 2944      74655478 
 2944      44617461 
 2944      00
 2945              	.LASF2:
 2946 0384 73686F72 		.ascii	"short int\000"
 2946      7420696E 
 2946      7400
 2947              	.LASF60:
 2948 038e 55415254 		.ascii	"UART_SendBreak\000"
 2948      5F53656E 
 2948      64427265 
 2948      616B00
 2949              	.LASF56:
 2950 039d 62797465 		.ascii	"byteCount\000"
 2950      436F756E 
 2950      7400
 2951              	.LASF29:
 2952 03a7 72784461 		.ascii	"rxData\000"
 2952      746100
 2953              	.LASF22:
 2954 03ae 55415254 		.ascii	"UART_Enable\000"
 2954      5F456E61 
 2954      626C6500 
 2955              	.LASF31:
 2956 03ba 55415254 		.ascii	"UART_ReadRxStatus\000"
 2956      5F526561 
 2956      64527853 
 2956      74617475 
 2956      7300
 2957              	.LASF15:
 2958 03cc 63686172 		.ascii	"char\000"
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 84


 2958      00
 2959              	.LASF14:
 2960 03d1 63686172 		.ascii	"char8\000"
 2960      3800
 2961              	.LASF26:
 2962 03d7 55415254 		.ascii	"UART_SetRxInterruptMode\000"
 2962      5F536574 
 2962      5278496E 
 2962      74657272 
 2962      7570744D 
 2963              	.LASF33:
 2964 03ef 55415254 		.ascii	"UART_GetChar\000"
 2964      5F476574 
 2964      43686172 
 2964      00
 2965              	.LASF24:
 2966 03fc 656E6162 		.ascii	"enableInterrupts\000"
 2966      6C65496E 
 2966      74657272 
 2966      75707473 
 2966      00
 2967              	.LASF65:
 2968 040d 55415254 		.ascii	"UART_initVar\000"
 2968      5F696E69 
 2968      74566172 
 2968      00
 2969              	.LASF37:
 2970 041a 55415254 		.ascii	"UART_GetRxBufferSize\000"
 2970      5F476574 
 2970      52784275 
 2970      66666572 
 2970      53697A65 
 2971              	.LASF32:
 2972 042f 73746174 		.ascii	"status\000"
 2972      757300
 2973              	.LASF23:
 2974 0436 55415254 		.ascii	"UART_Stop\000"
 2974      5F53746F 
 2974      7000
 2975              	.LASF12:
 2976 0440 666C6F61 		.ascii	"float\000"
 2976      7400
 2977              	.LASF52:
 2978 0446 55415254 		.ascii	"UART_PutString\000"
 2978      5F507574 
 2978      53747269 
 2978      6E6700
 2979              	.LASF25:
 2980 0455 55415254 		.ascii	"UART_WriteControlRegister\000"
 2980      5F577269 
 2980      7465436F 
 2980      6E74726F 
 2980      6C526567 
 2981              	.LASF39:
 2982 046f 55415254 		.ascii	"UART_ClearRxBuffer\000"
 2982      5F436C65 
 2982      61725278 
ARM GAS  C:\Users\barto\AppData\Local\Temp\ccngkrzc.s 			page 85


 2982      42756666 
 2982      657200
 2983              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
